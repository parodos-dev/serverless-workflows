name: Reusable Workflow Building Container Images and Manifests

on:
  workflow_call:
    inputs:
      workflow_id:
        required: true
        type: string
      # application is those auxilary application we deploy with a workflow to
      # complete some part of it with specialized code, like for example the
      # jira-listener for the escalation flow.
      application_id:
        required: false
        type: string
        default: 'UNDEFINED'
      it_mode:
        type: boolean
        default: false

env:
  WF_CONFIG_REPO: parodos-dev/serverless-workflows-config
  REGISTRY_REPO: orchestrator
  GH_TOKEN: ${{ secrets.HELM_REPO_TOKEN }}  

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:

    - uses: actions/checkout@v4

    - name: Log in to Red Hat Registry
      uses: redhat-actions/podman-login@v1
      with:
        registry: registry.redhat.io
        username: ${{ secrets.REGISTRY_REDHAT_IO_USER }}
        password: ${{ secrets.REGISTRY_REDHAT_IO_PASSWORD }}

    - name: Build Image
      id: build-image
      run: |
        make WORKFLOW_ID=${{ inputs.workflow_id }} \
          APPLICATION_ID=${{ inputs.application_id }} \
          IMAGE_TAG=${{ github.sha }} \
          GIT_TOKEN=${{ env.GH_TOKEN }} \
          REGISTRY_REPO=${{ env.REGISTRY_REPO }} \
          REGISTRY_USERNAME=${{ secrets.NEW_QUAY_USERNAME }} \
          REGISTRY_PASSWORD=${{ secrets.NEW_QUAY_PASSWORD }} \
          build-image

    - name: Buildah push to OCI Arcive
      if: ${{ inputs.it_mode }}
      run: |
        buildah push serverless-workflow-${{ inputs.workflow_id }}:${{ github.sha }} \
          oci-archive:serverless-workflow-${{ inputs.workflow_id }}-${{ github.sha }}.tar:quay.io/orchestrator/serverless-workflow-${{ inputs.workflow_id }}:${{ github.sha }}
    - name: Save OCI archive
      if: ${{ inputs.it_mode }}
      uses: actions/upload-artifact@v4
      with:
        name: serverless-workflow-${{ inputs.workflow_id }}-${{ github.sha }}.tar
        path: serverless-workflow-${{ inputs.workflow_id }}-${{ github.sha }}.tar

    - name: Push To quay.io
      id: push-to-quay
      if: ${{ ! inputs.it_mode }}
      run: |
        make WORKFLOW_ID=${{ inputs.workflow_id }} \
          APPLICATION_ID=${{ inputs.application_id }} \
          IMAGE_TAG=${{ github.sha }} \
          GIT_TOKEN=${{ env.GH_TOKEN }} \
          REGISTRY_REPO=${{ env.REGISTRY_REPO }} \
          REGISTRY_USERNAME=${{ secrets.NEW_QUAY_USERNAME }} \
          REGISTRY_PASSWORD=${{ secrets.NEW_QUAY_PASSWORD }} \
          push-image

  generate-manifests:
    needs: build
    runs-on: ubuntu-24.04	
    steps:
    - uses: actions/checkout@v4
    - name: Generate Manifests
      id: generate-manifests
      run: |
        WORKDIR=${{ runner.temp }}/serverless-workflows
        make WORKFLOW_ID=${{ inputs.workflow_id }} \
          WORKDIR=${WORKDIR} \
          IMAGE_TAG=${{ github.sha }} \
          APPLICATION_ID=${{ inputs.application_id }} \
          PR_OR_COMMIT_URL=${PR_OR_COMMIT_URL} \
          gen-manifests
        echo manifests_dir=${{ runner.temp }}/serverless-workflows/workflows/${{ inputs.workflow_id }}/manifests >> "$GITHUB_OUTPUT"

    - name: Archive manifests
      uses: actions/upload-artifact@v4
      with:
        name: serverless-workflow-${{ inputs.workflow_id }}-manifests
        path: ${{ steps.generate-manifests.outputs.manifests_dir }}

    - uses: actions/github-script@v7
      id: get_pr_data
      with:
        script: |
          return (
            await github.rest.repos.listPullRequestsAssociatedWithCommit({
              commit_sha: context.sha,
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
          ).data[0];

    - name: Send PRs to config repo
      if: ${{ ! inputs.it_mode }}
      run: |
          WORKDIR=${{ runner.temp }}/serverless-workflows

          # determine pr or commit url
          if [ ${{ fromJSON(steps.get_pr_data.outputs.result)}} != "" ]; then
            PR_OR_COMMIT_URL="${{ fromJSON(steps.get_pr_data.outputs.result).html_url }}"
          else
            PR_OR_COMMIT_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          fi

          sh scripts/create_or_update_automated_pr.sh $WF_CONFIG_REPO \
            ${{ inputs.workflow_id }} \
            ${PR_OR_COMMIT_URL} \
            "" \
            scripts/create_automated_pr.sh \
            ${{ github.event.head_commit.author.email || 'parodos@redhat.com' }} \
            ${{ github.event.head_commit.author.name || github.triggering_actor }} \
            $WORKDIR \
            ${{ env.GH_TOKEN }} \
            ${{ github.sha }}

