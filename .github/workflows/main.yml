name: Reusable Workflow Building Container Images and Manifests

on:
  workflow_call:
    inputs:
      workflow_id:
        required: true
        type: string
      push_pr:
        required: false
        type: boolean
        default: true
      build_arg_quarkus_extensions:
        required: false
        type: string


env:
  WF_HELM_REPO: rgolangh/serverless-workflows-helm

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Buildah Action
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ inputs.workflow_id }}
        tags: latest ${{ github.sha }}
        extra-args: --ulimit nofile=4096:4096
        containerfiles: |
          pipeline/workflow-builder.Dockerfile
        build-args: |
          WF_RESOURCES=${{ inputs.workflow_id }}/
          QUARKUS_EXTENSIONS=${{ inputs.build_arg_quarkus_extensions }}

    - name: Push To quay.io
      id: push-to-quay
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: quay.io/orchestrator
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}

    - name: Print image url
      run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

  generate-manifests:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
    - uses: actions/checkout@v3
    - name: setup kn-workflow
      run: curl -L https://github.com/rgolangh/kie-tools/releases/download/0.0.1/kn-workflow -o kn-workflow && chmod +x kn-workflow
    - name: kn-workflow
      run: cd ${{ inputs.workflow_id }} && ../kn-workflow gen-manifest
    - name: Download yq
      run: curl -L https://github.com/mikefarah/yq/releases/download/v4.35.2/yq_linux_x86_64 -o yq
    - name: Remove dev profile
      run: yq -i 'del(.metadata.annotations."sonataflow.org/profile")' ${{ inputs.workflow_id }}/manifests/01-sonataflow*.yaml
    - name: Set container image ref in SonataFlow resource
      run: yq -i '.spec.podTemplate.container.image="quay.io/orchestrator/serverless-workflow-${{ inputs.workflow_id }}:${{ github.sha }}"' ${{ inputs.workflow_id }}/manifests/01-sonataflow*.yaml
    - name: Archive manifests
      uses: actions/upload-artifact@v3
      with:
        name: serverless-workflow-${{ inputs.workflow_id }}
        path: ${{ inputs.workflow_id }}/manifests
    - name: Send PRs to helm repo
      if: ${{ inputs.push_pr }}
      env:
        GITHUB_TOKEN: ${{ secrets.NEW_HELM_REPO_TOKEN }}
      run: |
          gh repo clone $WF_HELM_REPO helm-repo
          cd helm-repo
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git switch -c autopr-$RANDOM
          mkdir -p charts/workflows/charts/${{ inputs.workflow_id }}/templates
          cp ../${{ inputs.workflow_id }}/manifests/* charts/workflows/charts/${{ inputs.workflow_id }}/templates
          git add -A
          git commit -m "Automated PR from ${{ github.event.pull_request.html_url }} ${{ github.event.issue.html_url }}"
          git remote set-url origin https://x-access-token:${{ env.GITHUB_TOKEN }}@github.com/$WF_HELM_REPO
          git push origin HEAD
          gh pr create --title "Automatic manifests generation from ${{ github.event.pull_request.html_url }} ${{ github.event.issue.html_url }}" \
            --body "
              Updating generated manifests for ${{ inputs.workflow_id }} workflow
            "
