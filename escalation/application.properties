# The ID of the Jira issue type to be created (mandatory)
jira_issue_type=${JIRA_ISSUE_TYPE}
# The key of the Jira project where the escalation issue is created (mandatory)
jira_project=${JIRA_PROJECT}
# The name part of the Jira ticket label that contains the ID of the related SWF instance (e.g. `workflowInstanceId=123`)
jira_label_workflowInstanceId=${JIRA_WORKFLOW_INSTANCE_ID_LABEL:workflowInstanceId}
# The whole Jira ticket label that contains the name of the SWF (e.g. `workflowInstanceId=escalation`)
jira_label_workflowName=${JIRA_WORKFLOW_NAME_LABEL:workflowName=escalation}

# Jira
quarkus.rest-client.jira_yaml.url=${JIRA_URL}
quarkus.openapi-generator.jira_yaml.auth.basicAuth.username=${JIRA_USERNAME}
# See https://id.atlassian.com/manage-profile/security/api-tokens
quarkus.openapi-generator.jira_yaml.auth.basicAuth.password=${JIRA_API_TOKEN}

# The ISO 8601 duration format to wait before triggering the escalation request, after the issue has been created
timeout_seconds=${ESCALATION_TIMEOUT_SECONDS:PT60S}

# OpenShift API Server
quarkus.rest-client.kube_yaml.url=${OCP_API_SERVER_URL}
quarkus.openapi-generator.kube_yaml.auth.BearerToken.bearer-token=${OCP_API_SERVER_TOKEN}
quarkus.tls.trust-all=true
quarkus.kubernetes-client.trust-certs=true

# Notifications service
quarkus.rest-client.notifications.url=${BACKSTAGE_NOTIFICATIONS_URL:http://backstage-backstage.rhdh-operator/api/notifications/}

# This is to enable debugging of HTTP request 
quarkus.log.category.\"org.apache.http\".level=INFO

# Knative eventing configuration
mp.messaging.incoming.kogito_incoming_stream.connector=quarkus-http
mp.messaging.incoming.kogito_incoming_stream.path=/
mp.messaging.incoming.kogito_incoming_stream.method=POST