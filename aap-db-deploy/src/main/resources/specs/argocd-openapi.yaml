openapi: 3.0.0
info:
  title: Kubernetes
  version: v1.27.11+ec42b99
servers:
  - url: /
security:
  - BearerToken: []
paths:
  /apis/argoproj.io/v1alpha1/namespaces/{namespace}/applications:
    post:
      description: create an Application
      tags:
        - argoprojIo_v1alpha1
      operationId: createArgoprojIoV1alpha1NamespacedApplication
      parameters:
        - name: namespace
          in: path
          description: namespace
          required: true
          schema:
            type: string
        - name: dryRun
          in: query
          description: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
          schema:
            type: string
        - name: fieldManager
          in: query
          description: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
          schema:
            type: string
        - name: fieldValidation
          in: query
          description: "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered."
          schema:
            type: string
      requestBody:
        content:
          "*/*":
            schema:
              $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
            application/yaml:
              schema:
                $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
            application/yaml:
              schema:
                $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
        "401":
          description: Unauthorized
          content: {}
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: argoproj.io
        kind: Application
        version: v1alpha1
  /apis/argoproj.io/v1alpha1/namespaces/{namespace}/applications/{name}:
    get:
      description: read the specified Application
      tags:
        - argoprojIo_v1alpha1
      operationId: readArgoprojIoV1alpha1NamespacedApplication
      parameters:
        - name: namespace
          in: path
          description: namespace
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
            application/yaml:
              schema:
                $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
        "401":
          description: Unauthorized
          content: {}
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: argoproj.io
        kind: Application
        version: v1alpha1
components:
  schemas:
    io.argoproj.v1alpha1.Application:
      description: Application is a definition of Application resource.
      type: object
      required:
        - metadata
        - spec
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        operation:
          description: Operation contains information about a requested or running operation
          type: object
          properties:
            info:
              description: Info is a list of informational items for this operation
              type: array
              items:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                  value:
                    type: string
            initiatedBy:
              description: InitiatedBy contains information about who initiated the operations
              type: object
              properties:
                automated:
                  description: Automated is set to true if operation was initiated automatically by the application controller.
                  type: boolean
                username:
                  description: Username contains the name of a user who started operation
                  type: string
            retry:
              description: Retry controls the strategy to apply if a sync fails
              type: object
              properties:
                backoff:
                  description: Backoff controls how to backoff on subsequent retries of failed syncs
                  type: object
                  properties:
                    duration:
                      description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                      type: string
                    factor:
                      description: Factor is a factor to multiply the base duration after each failed retry
                      type: integer
                      format: int64
                    maxDuration:
                      description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                      type: string
                limit:
                  description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                  type: integer
                  format: int64
            sync:
              description: Sync contains parameters for the operation
              type: object
              properties:
                dryRun:
                  description: DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync
                  type: boolean
                manifests:
                  description: Manifests is an optional field that overrides sync source with a local directory for development
                  type: array
                  items:
                    type: string
                prune:
                  description: Prune specifies to delete resources from the cluster that are no longer tracked in git
                  type: boolean
                resources:
                  description: Resources describes which resources shall be part of the sync
                  type: array
                  items:
                    description: SyncOperationResource contains resources to sync.
                    type: object
                    required:
                      - kind
                      - name
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                revision:
                  description: Revision is the revision (Git) or chart version (Helm) which to sync the application to If omitted, will use the revision specified in app spec.
                  type: string
                revisions:
                  description: Revisions is the list of revision (Git) or chart version (Helm) which to sync each source in sources field for the application to If omitted, will use the revision specified in app spec.
                  type: array
                  items:
                    type: string
                source:
                  description: Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
                  type: object
                  required:
                    - repoURL
                  properties:
                    chart:
                      description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                      type: string
                    directory:
                      description: Directory holds path/directory specific options
                      type: object
                      properties:
                        exclude:
                          description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                          type: string
                        include:
                          description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                          type: string
                        jsonnet:
                          description: Jsonnet holds options specific to Jsonnet
                          type: object
                          properties:
                            extVars:
                              description: ExtVars is a list of Jsonnet External Variables
                              type: array
                              items:
                                description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                type: object
                                required:
                                  - name
                                  - value
                                properties:
                                  code:
                                    type: boolean
                                  name:
                                    type: string
                                  value:
                                    type: string
                            libs:
                              description: Additional library search dirs
                              type: array
                              items:
                                type: string
                            tlas:
                              description: TLAS is a list of Jsonnet Top-level Arguments
                              type: array
                              items:
                                description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                type: object
                                required:
                                  - name
                                  - value
                                properties:
                                  code:
                                    type: boolean
                                  name:
                                    type: string
                                  value:
                                    type: string
                        recurse:
                          description: Recurse specifies whether to scan a directory recursively for manifests
                          type: boolean
                    helm:
                      description: Helm holds helm specific options
                      type: object
                      properties:
                        fileParameters:
                          description: FileParameters are file parameters to the helm template
                          type: array
                          items:
                            description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                            type: object
                            properties:
                              name:
                                description: Name is the name of the Helm parameter
                                type: string
                              path:
                                description: Path is the path to the file containing the values for the Helm parameter
                                type: string
                        ignoreMissingValueFiles:
                          description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                          type: boolean
                        parameters:
                          description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                          type: array
                          items:
                            description: HelmParameter is a parameter that's passed to helm template during manifest generation
                            type: object
                            properties:
                              forceString:
                                description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                type: boolean
                              name:
                                description: Name is the name of the Helm parameter
                                type: string
                              value:
                                description: Value is the value for the Helm parameter
                                type: string
                        passCredentials:
                          description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                          type: boolean
                        releaseName:
                          description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                          type: string
                        skipCrds:
                          description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                          type: boolean
                        valueFiles:
                          description: ValuesFiles is a list of Helm value files to use when generating a template
                          type: array
                          items:
                            type: string
                        values:
                          description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                          type: string
                        valuesObject:
                          description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                          x-kubernetes-preserve-unknown-fields: true
                        version:
                          description: Version is the Helm version to use for templating ("3")
                          type: string
                    kustomize:
                      description: Kustomize holds kustomize specific options
                      type: object
                      properties:
                        commonAnnotations:
                          description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                          type: object
                          additionalProperties:
                            type: string
                        commonAnnotationsEnvsubst:
                          description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                          type: boolean
                        commonLabels:
                          description: CommonLabels is a list of additional labels to add to rendered manifests
                          type: object
                          additionalProperties:
                            type: string
                        components:
                          description: Components specifies a list of kustomize components to add to the kustomization before building
                          type: array
                          items:
                            type: string
                        forceCommonAnnotations:
                          description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                          type: boolean
                        forceCommonLabels:
                          description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                          type: boolean
                        images:
                          description: Images is a list of Kustomize image override specifications
                          type: array
                          items:
                            description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                            type: string
                        labelWithoutSelector:
                          description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                          type: boolean
                        namePrefix:
                          description: NamePrefix is a prefix appended to resources for Kustomize apps
                          type: string
                        nameSuffix:
                          description: NameSuffix is a suffix appended to resources for Kustomize apps
                          type: string
                        namespace:
                          description: Namespace sets the namespace that Kustomize adds to all resources
                          type: string
                        patches:
                          description: Patches is a list of Kustomize patches
                          type: array
                          items:
                            type: object
                            properties:
                              options:
                                type: object
                                additionalProperties:
                                  type: boolean
                              patch:
                                type: string
                              path:
                                type: string
                              target:
                                type: object
                                properties:
                                  annotationSelector:
                                    type: string
                                  group:
                                    type: string
                                  kind:
                                    type: string
                                  labelSelector:
                                    type: string
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                  version:
                                    type: string
                        replicas:
                          description: Replicas is a list of Kustomize Replicas override specifications
                          type: array
                          items:
                            type: object
                            required:
                              - count
                              - name
                            properties:
                              count:
                                description: Number of replicas
                                x-kubernetes-int-or-string: true
                              name:
                                description: Name of Deployment or StatefulSet
                                type: string
                        version:
                          description: Version controls which version of Kustomize to use for rendering manifests
                          type: string
                    path:
                      description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                      type: string
                    plugin:
                      description: Plugin holds config management plugin specific options
                      type: object
                      properties:
                        env:
                          description: Env is a list of environment variable entries
                          type: array
                          items:
                            description: EnvEntry represents an entry in the application's environment
                            type: object
                            required:
                              - name
                              - value
                            properties:
                              name:
                                description: Name is the name of the variable, usually expressed in uppercase
                                type: string
                              value:
                                description: Value is the value of the variable
                                type: string
                        name:
                          type: string
                        parameters:
                          type: array
                          items:
                            type: object
                            properties:
                              array:
                                description: Array is the value of an array type parameter.
                                type: array
                                items:
                                  type: string
                              map:
                                description: Map is the value of a map type parameter.
                                type: object
                                additionalProperties:
                                  type: string
                              name:
                                description: Name is the name identifying a parameter.
                                type: string
                              string:
                                description: String_ is the value of a string type parameter.
                                type: string
                    ref:
                      description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                      type: string
                    repoURL:
                      description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                      type: string
                    targetRevision:
                      description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                      type: string
                sources:
                  description: Sources overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
                  type: array
                  items:
                    description: ApplicationSource contains all required information about the source of an application
                    type: object
                    required:
                      - repoURL
                    properties:
                      chart:
                        description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                        type: string
                      directory:
                        description: Directory holds path/directory specific options
                        type: object
                        properties:
                          exclude:
                            description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                            type: string
                          include:
                            description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                            type: string
                          jsonnet:
                            description: Jsonnet holds options specific to Jsonnet
                            type: object
                            properties:
                              extVars:
                                description: ExtVars is a list of Jsonnet External Variables
                                type: array
                                items:
                                  description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                  type: object
                                  required:
                                    - name
                                    - value
                                  properties:
                                    code:
                                      type: boolean
                                    name:
                                      type: string
                                    value:
                                      type: string
                              libs:
                                description: Additional library search dirs
                                type: array
                                items:
                                  type: string
                              tlas:
                                description: TLAS is a list of Jsonnet Top-level Arguments
                                type: array
                                items:
                                  description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                  type: object
                                  required:
                                    - name
                                    - value
                                  properties:
                                    code:
                                      type: boolean
                                    name:
                                      type: string
                                    value:
                                      type: string
                          recurse:
                            description: Recurse specifies whether to scan a directory recursively for manifests
                            type: boolean
                      helm:
                        description: Helm holds helm specific options
                        type: object
                        properties:
                          fileParameters:
                            description: FileParameters are file parameters to the helm template
                            type: array
                            items:
                              description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                              type: object
                              properties:
                                name:
                                  description: Name is the name of the Helm parameter
                                  type: string
                                path:
                                  description: Path is the path to the file containing the values for the Helm parameter
                                  type: string
                          ignoreMissingValueFiles:
                            description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                            type: boolean
                          parameters:
                            description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                            type: array
                            items:
                              description: HelmParameter is a parameter that's passed to helm template during manifest generation
                              type: object
                              properties:
                                forceString:
                                  description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                  type: boolean
                                name:
                                  description: Name is the name of the Helm parameter
                                  type: string
                                value:
                                  description: Value is the value for the Helm parameter
                                  type: string
                          passCredentials:
                            description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                            type: boolean
                          releaseName:
                            description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                            type: string
                          skipCrds:
                            description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                            type: boolean
                          valueFiles:
                            description: ValuesFiles is a list of Helm value files to use when generating a template
                            type: array
                            items:
                              type: string
                          values:
                            description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                            type: string
                          valuesObject:
                            description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                            x-kubernetes-preserve-unknown-fields: true
                          version:
                            description: Version is the Helm version to use for templating ("3")
                            type: string
                      kustomize:
                        description: Kustomize holds kustomize specific options
                        type: object
                        properties:
                          commonAnnotations:
                            description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                            type: object
                            additionalProperties:
                              type: string
                          commonAnnotationsEnvsubst:
                            description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                            type: boolean
                          commonLabels:
                            description: CommonLabels is a list of additional labels to add to rendered manifests
                            type: object
                            additionalProperties:
                              type: string
                          components:
                            description: Components specifies a list of kustomize components to add to the kustomization before building
                            type: array
                            items:
                              type: string
                          forceCommonAnnotations:
                            description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                            type: boolean
                          forceCommonLabels:
                            description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                            type: boolean
                          images:
                            description: Images is a list of Kustomize image override specifications
                            type: array
                            items:
                              description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                              type: string
                          labelWithoutSelector:
                            description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                            type: boolean
                          namePrefix:
                            description: NamePrefix is a prefix appended to resources for Kustomize apps
                            type: string
                          nameSuffix:
                            description: NameSuffix is a suffix appended to resources for Kustomize apps
                            type: string
                          namespace:
                            description: Namespace sets the namespace that Kustomize adds to all resources
                            type: string
                          patches:
                            description: Patches is a list of Kustomize patches
                            type: array
                            items:
                              type: object
                              properties:
                                options:
                                  type: object
                                  additionalProperties:
                                    type: boolean
                                patch:
                                  type: string
                                path:
                                  type: string
                                target:
                                  type: object
                                  properties:
                                    annotationSelector:
                                      type: string
                                    group:
                                      type: string
                                    kind:
                                      type: string
                                    labelSelector:
                                      type: string
                                    name:
                                      type: string
                                    namespace:
                                      type: string
                                    version:
                                      type: string
                          replicas:
                            description: Replicas is a list of Kustomize Replicas override specifications
                            type: array
                            items:
                              type: object
                              required:
                                - count
                                - name
                              properties:
                                count:
                                  description: Number of replicas
                                  x-kubernetes-int-or-string: true
                                name:
                                  description: Name of Deployment or StatefulSet
                                  type: string
                          version:
                            description: Version controls which version of Kustomize to use for rendering manifests
                            type: string
                      path:
                        description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                        type: string
                      plugin:
                        description: Plugin holds config management plugin specific options
                        type: object
                        properties:
                          env:
                            description: Env is a list of environment variable entries
                            type: array
                            items:
                              description: EnvEntry represents an entry in the application's environment
                              type: object
                              required:
                                - name
                                - value
                              properties:
                                name:
                                  description: Name is the name of the variable, usually expressed in uppercase
                                  type: string
                                value:
                                  description: Value is the value of the variable
                                  type: string
                          name:
                            type: string
                          parameters:
                            type: array
                            items:
                              type: object
                              properties:
                                array:
                                  description: Array is the value of an array type parameter.
                                  type: array
                                  items:
                                    type: string
                                map:
                                  description: Map is the value of a map type parameter.
                                  type: object
                                  additionalProperties:
                                    type: string
                                name:
                                  description: Name is the name identifying a parameter.
                                  type: string
                                string:
                                  description: String_ is the value of a string type parameter.
                                  type: string
                      ref:
                        description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                        type: string
                      repoURL:
                        description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                        type: string
                      targetRevision:
                        description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                        type: string
                syncOptions:
                  description: SyncOptions provide per-sync sync-options, e.g. Validate=false
                  type: array
                  items:
                    type: string
                syncStrategy:
                  description: SyncStrategy describes how to perform the sync
                  type: object
                  properties:
                    apply:
                      description: Apply will perform a `kubectl apply` to perform the sync.
                      type: object
                      properties:
                        force:
                          description: Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
                          type: boolean
                    hook:
                      description: Hook will submit any referenced resources to perform the sync. This is the default strategy
                      type: object
                      properties:
                        force:
                          description: Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
                          type: boolean
        spec:
          description: ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
          type: object
          required:
            - destination
            - project
          properties:
            destination:
              description: Destination is a reference to the target Kubernetes server and namespace
              type: object
              properties:
                name:
                  description: Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.
                  type: string
                namespace:
                  description: Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
                  type: string
                server:
                  description: Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.
                  type: string
            ignoreDifferences:
              description: IgnoreDifferences is a list of resources and their fields which should be ignored during comparison
              type: array
              items:
                description: ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
                type: object
                required:
                  - kind
                properties:
                  group:
                    type: string
                  jqPathExpressions:
                    type: array
                    items:
                      type: string
                  jsonPointers:
                    type: array
                    items:
                      type: string
                  kind:
                    type: string
                  managedFieldsManagers:
                    description: ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the desired state defined in the SCM and won't be displayed in diffs
                    type: array
                    items:
                      type: string
                  name:
                    type: string
                  namespace:
                    type: string
            info:
              description: Info contains a list of information (URLs, email addresses, and plain text) that relates to the application
              type: array
              items:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                  value:
                    type: string
            project:
              description: Project is a reference to the project this application belongs to. The empty string means that application belongs to the 'default' project.
              type: string
            revisionHistoryLimit:
              description: RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
              type: integer
              format: int64
            source:
              description: Source is a reference to the location of the application's manifests or chart
              type: object
              required:
                - repoURL
              properties:
                chart:
                  description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                  type: string
                directory:
                  description: Directory holds path/directory specific options
                  type: object
                  properties:
                    exclude:
                      description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                      type: string
                    include:
                      description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                      type: string
                    jsonnet:
                      description: Jsonnet holds options specific to Jsonnet
                      type: object
                      properties:
                        extVars:
                          description: ExtVars is a list of Jsonnet External Variables
                          type: array
                          items:
                            description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                            type: object
                            required:
                              - name
                              - value
                            properties:
                              code:
                                type: boolean
                              name:
                                type: string
                              value:
                                type: string
                        libs:
                          description: Additional library search dirs
                          type: array
                          items:
                            type: string
                        tlas:
                          description: TLAS is a list of Jsonnet Top-level Arguments
                          type: array
                          items:
                            description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                            type: object
                            required:
                              - name
                              - value
                            properties:
                              code:
                                type: boolean
                              name:
                                type: string
                              value:
                                type: string
                    recurse:
                      description: Recurse specifies whether to scan a directory recursively for manifests
                      type: boolean
                helm:
                  description: Helm holds helm specific options
                  type: object
                  properties:
                    fileParameters:
                      description: FileParameters are file parameters to the helm template
                      type: array
                      items:
                        description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                        type: object
                        properties:
                          name:
                            description: Name is the name of the Helm parameter
                            type: string
                          path:
                            description: Path is the path to the file containing the values for the Helm parameter
                            type: string
                    ignoreMissingValueFiles:
                      description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                      type: boolean
                    parameters:
                      description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                      type: array
                      items:
                        description: HelmParameter is a parameter that's passed to helm template during manifest generation
                        type: object
                        properties:
                          forceString:
                            description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                            type: boolean
                          name:
                            description: Name is the name of the Helm parameter
                            type: string
                          value:
                            description: Value is the value for the Helm parameter
                            type: string
                    passCredentials:
                      description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                      type: boolean
                    releaseName:
                      description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                      type: string
                    skipCrds:
                      description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                      type: boolean
                    valueFiles:
                      description: ValuesFiles is a list of Helm value files to use when generating a template
                      type: array
                      items:
                        type: string
                    values:
                      description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                      type: string
                    valuesObject:
                      description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                      x-kubernetes-preserve-unknown-fields: true
                    version:
                      description: Version is the Helm version to use for templating ("3")
                      type: string
                kustomize:
                  description: Kustomize holds kustomize specific options
                  type: object
                  properties:
                    commonAnnotations:
                      description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                      type: object
                      additionalProperties:
                        type: string
                    commonAnnotationsEnvsubst:
                      description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                      type: boolean
                    commonLabels:
                      description: CommonLabels is a list of additional labels to add to rendered manifests
                      type: object
                      additionalProperties:
                        type: string
                    components:
                      description: Components specifies a list of kustomize components to add to the kustomization before building
                      type: array
                      items:
                        type: string
                    forceCommonAnnotations:
                      description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                      type: boolean
                    forceCommonLabels:
                      description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                      type: boolean
                    images:
                      description: Images is a list of Kustomize image override specifications
                      type: array
                      items:
                        description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                        type: string
                    labelWithoutSelector:
                      description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                      type: boolean
                    namePrefix:
                      description: NamePrefix is a prefix appended to resources for Kustomize apps
                      type: string
                    nameSuffix:
                      description: NameSuffix is a suffix appended to resources for Kustomize apps
                      type: string
                    namespace:
                      description: Namespace sets the namespace that Kustomize adds to all resources
                      type: string
                    patches:
                      description: Patches is a list of Kustomize patches
                      type: array
                      items:
                        type: object
                        properties:
                          options:
                            type: object
                            additionalProperties:
                              type: boolean
                          patch:
                            type: string
                          path:
                            type: string
                          target:
                            type: object
                            properties:
                              annotationSelector:
                                type: string
                              group:
                                type: string
                              kind:
                                type: string
                              labelSelector:
                                type: string
                              name:
                                type: string
                              namespace:
                                type: string
                              version:
                                type: string
                    replicas:
                      description: Replicas is a list of Kustomize Replicas override specifications
                      type: array
                      items:
                        type: object
                        required:
                          - count
                          - name
                        properties:
                          count:
                            description: Number of replicas
                            x-kubernetes-int-or-string: true
                          name:
                            description: Name of Deployment or StatefulSet
                            type: string
                    version:
                      description: Version controls which version of Kustomize to use for rendering manifests
                      type: string
                path:
                  description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                  type: string
                plugin:
                  description: Plugin holds config management plugin specific options
                  type: object
                  properties:
                    env:
                      description: Env is a list of environment variable entries
                      type: array
                      items:
                        description: EnvEntry represents an entry in the application's environment
                        type: object
                        required:
                          - name
                          - value
                        properties:
                          name:
                            description: Name is the name of the variable, usually expressed in uppercase
                            type: string
                          value:
                            description: Value is the value of the variable
                            type: string
                    name:
                      type: string
                    parameters:
                      type: array
                      items:
                        type: object
                        properties:
                          array:
                            description: Array is the value of an array type parameter.
                            type: array
                            items:
                              type: string
                          map:
                            description: Map is the value of a map type parameter.
                            type: object
                            additionalProperties:
                              type: string
                          name:
                            description: Name is the name identifying a parameter.
                            type: string
                          string:
                            description: String_ is the value of a string type parameter.
                            type: string
                ref:
                  description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                  type: string
                repoURL:
                  description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                  type: string
                targetRevision:
                  description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                  type: string
            sources:
              description: Sources is a reference to the location of the application's manifests or chart
              type: array
              items:
                description: ApplicationSource contains all required information about the source of an application
                type: object
                required:
                  - repoURL
                properties:
                  chart:
                    description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                    type: string
                  directory:
                    description: Directory holds path/directory specific options
                    type: object
                    properties:
                      exclude:
                        description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                        type: string
                      include:
                        description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                        type: string
                      jsonnet:
                        description: Jsonnet holds options specific to Jsonnet
                        type: object
                        properties:
                          extVars:
                            description: ExtVars is a list of Jsonnet External Variables
                            type: array
                            items:
                              description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                              type: object
                              required:
                                - name
                                - value
                              properties:
                                code:
                                  type: boolean
                                name:
                                  type: string
                                value:
                                  type: string
                          libs:
                            description: Additional library search dirs
                            type: array
                            items:
                              type: string
                          tlas:
                            description: TLAS is a list of Jsonnet Top-level Arguments
                            type: array
                            items:
                              description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                              type: object
                              required:
                                - name
                                - value
                              properties:
                                code:
                                  type: boolean
                                name:
                                  type: string
                                value:
                                  type: string
                      recurse:
                        description: Recurse specifies whether to scan a directory recursively for manifests
                        type: boolean
                  helm:
                    description: Helm holds helm specific options
                    type: object
                    properties:
                      fileParameters:
                        description: FileParameters are file parameters to the helm template
                        type: array
                        items:
                          description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                          type: object
                          properties:
                            name:
                              description: Name is the name of the Helm parameter
                              type: string
                            path:
                              description: Path is the path to the file containing the values for the Helm parameter
                              type: string
                      ignoreMissingValueFiles:
                        description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                        type: boolean
                      parameters:
                        description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                        type: array
                        items:
                          description: HelmParameter is a parameter that's passed to helm template during manifest generation
                          type: object
                          properties:
                            forceString:
                              description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                              type: boolean
                            name:
                              description: Name is the name of the Helm parameter
                              type: string
                            value:
                              description: Value is the value for the Helm parameter
                              type: string
                      passCredentials:
                        description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                        type: boolean
                      releaseName:
                        description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                        type: string
                      skipCrds:
                        description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                        type: boolean
                      valueFiles:
                        description: ValuesFiles is a list of Helm value files to use when generating a template
                        type: array
                        items:
                          type: string
                      values:
                        description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                        type: string
                      valuesObject:
                        description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                        x-kubernetes-preserve-unknown-fields: true
                      version:
                        description: Version is the Helm version to use for templating ("3")
                        type: string
                  kustomize:
                    description: Kustomize holds kustomize specific options
                    type: object
                    properties:
                      commonAnnotations:
                        description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                        type: object
                        additionalProperties:
                          type: string
                      commonAnnotationsEnvsubst:
                        description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                        type: boolean
                      commonLabels:
                        description: CommonLabels is a list of additional labels to add to rendered manifests
                        type: object
                        additionalProperties:
                          type: string
                      components:
                        description: Components specifies a list of kustomize components to add to the kustomization before building
                        type: array
                        items:
                          type: string
                      forceCommonAnnotations:
                        description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                        type: boolean
                      forceCommonLabels:
                        description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                        type: boolean
                      images:
                        description: Images is a list of Kustomize image override specifications
                        type: array
                        items:
                          description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                          type: string
                      labelWithoutSelector:
                        description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                        type: boolean
                      namePrefix:
                        description: NamePrefix is a prefix appended to resources for Kustomize apps
                        type: string
                      nameSuffix:
                        description: NameSuffix is a suffix appended to resources for Kustomize apps
                        type: string
                      namespace:
                        description: Namespace sets the namespace that Kustomize adds to all resources
                        type: string
                      patches:
                        description: Patches is a list of Kustomize patches
                        type: array
                        items:
                          type: object
                          properties:
                            options:
                              type: object
                              additionalProperties:
                                type: boolean
                            patch:
                              type: string
                            path:
                              type: string
                            target:
                              type: object
                              properties:
                                annotationSelector:
                                  type: string
                                group:
                                  type: string
                                kind:
                                  type: string
                                labelSelector:
                                  type: string
                                name:
                                  type: string
                                namespace:
                                  type: string
                                version:
                                  type: string
                      replicas:
                        description: Replicas is a list of Kustomize Replicas override specifications
                        type: array
                        items:
                          type: object
                          required:
                            - count
                            - name
                          properties:
                            count:
                              description: Number of replicas
                              x-kubernetes-int-or-string: true
                            name:
                              description: Name of Deployment or StatefulSet
                              type: string
                      version:
                        description: Version controls which version of Kustomize to use for rendering manifests
                        type: string
                  path:
                    description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                    type: string
                  plugin:
                    description: Plugin holds config management plugin specific options
                    type: object
                    properties:
                      env:
                        description: Env is a list of environment variable entries
                        type: array
                        items:
                          description: EnvEntry represents an entry in the application's environment
                          type: object
                          required:
                            - name
                            - value
                          properties:
                            name:
                              description: Name is the name of the variable, usually expressed in uppercase
                              type: string
                            value:
                              description: Value is the value of the variable
                              type: string
                      name:
                        type: string
                      parameters:
                        type: array
                        items:
                          type: object
                          properties:
                            array:
                              description: Array is the value of an array type parameter.
                              type: array
                              items:
                                type: string
                            map:
                              description: Map is the value of a map type parameter.
                              type: object
                              additionalProperties:
                                type: string
                            name:
                              description: Name is the name identifying a parameter.
                              type: string
                            string:
                              description: String_ is the value of a string type parameter.
                              type: string
                  ref:
                    description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                    type: string
                  repoURL:
                    description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                    type: string
                  targetRevision:
                    description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                    type: string
            syncPolicy:
              description: SyncPolicy controls when and how a sync will be performed
              type: object
              properties:
                automated:
                  description: Automated will keep an application synced to the target revision
                  type: object
                  properties:
                    allowEmpty:
                      description: "AllowEmpty allows apps have zero live resources (default: false)"
                      type: boolean
                    prune:
                      description: "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                      type: boolean
                    selfHeal:
                      description: "SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                      type: boolean
                managedNamespaceMetadata:
                  description: ManagedNamespaceMetadata controls metadata in the given namespace (if CreateNamespace=true)
                  type: object
                  properties:
                    annotations:
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      type: object
                      additionalProperties:
                        type: string
                retry:
                  description: Retry controls failed sync retry behavior
                  type: object
                  properties:
                    backoff:
                      description: Backoff controls how to backoff on subsequent retries of failed syncs
                      type: object
                      properties:
                        duration:
                          description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                          type: string
                        factor:
                          description: Factor is a factor to multiply the base duration after each failed retry
                          type: integer
                          format: int64
                        maxDuration:
                          description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                          type: string
                    limit:
                      description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                      type: integer
                      format: int64
                syncOptions:
                  description: Options allow you to specify whole app sync-options
                  type: array
                  items:
                    type: string
        status:
          description: ApplicationStatus contains status information for the application
          type: object
          properties:
            conditions:
              description: Conditions is a list of currently observed application conditions
              type: array
              items:
                description: ApplicationCondition contains details about an application condition, which is usually an error or warning
                type: object
                required:
                  - message
                  - type
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the time the condition was last observed
                    type: string
                    format: date-time
                  message:
                    description: Message contains human-readable message indicating details about condition
                    type: string
                  type:
                    description: Type is an application condition type
                    type: string
            controllerNamespace:
              description: ControllerNamespace indicates the namespace in which the application controller is located
              type: string
            health:
              description: Health contains information about the application's current health status
              type: object
              properties:
                message:
                  description: Message is a human-readable informational message describing the health status
                  type: string
                status:
                  description: Status holds the status code of the application or resource
                  type: string
            history:
              description: History contains information about the application's sync history
              type: array
              items:
                description: RevisionHistory contains history information about a previous sync
                type: object
                required:
                  - deployedAt
                  - id
                properties:
                  deployStartedAt:
                    description: DeployStartedAt holds the time the sync operation started
                    type: string
                    format: date-time
                  deployedAt:
                    description: DeployedAt holds the time the sync operation completed
                    type: string
                    format: date-time
                  id:
                    description: ID is an auto incrementing identifier of the RevisionHistory
                    type: integer
                    format: int64
                  initiatedBy:
                    description: InitiatedBy contains information about who initiated the operations
                    type: object
                    properties:
                      automated:
                        description: Automated is set to true if operation was initiated automatically by the application controller.
                        type: boolean
                      username:
                        description: Username contains the name of a user who started operation
                        type: string
                  revision:
                    description: Revision holds the revision the sync was performed against
                    type: string
                  revisions:
                    description: Revisions holds the revision of each source in sources field the sync was performed against
                    type: array
                    items:
                      type: string
                  source:
                    description: Source is a reference to the application source used for the sync operation
                    type: object
                    required:
                      - repoURL
                    properties:
                      chart:
                        description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                        type: string
                      directory:
                        description: Directory holds path/directory specific options
                        type: object
                        properties:
                          exclude:
                            description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                            type: string
                          include:
                            description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                            type: string
                          jsonnet:
                            description: Jsonnet holds options specific to Jsonnet
                            type: object
                            properties:
                              extVars:
                                description: ExtVars is a list of Jsonnet External Variables
                                type: array
                                items:
                                  description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                  type: object
                                  required:
                                    - name
                                    - value
                                  properties:
                                    code:
                                      type: boolean
                                    name:
                                      type: string
                                    value:
                                      type: string
                              libs:
                                description: Additional library search dirs
                                type: array
                                items:
                                  type: string
                              tlas:
                                description: TLAS is a list of Jsonnet Top-level Arguments
                                type: array
                                items:
                                  description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                  type: object
                                  required:
                                    - name
                                    - value
                                  properties:
                                    code:
                                      type: boolean
                                    name:
                                      type: string
                                    value:
                                      type: string
                          recurse:
                            description: Recurse specifies whether to scan a directory recursively for manifests
                            type: boolean
                      helm:
                        description: Helm holds helm specific options
                        type: object
                        properties:
                          fileParameters:
                            description: FileParameters are file parameters to the helm template
                            type: array
                            items:
                              description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                              type: object
                              properties:
                                name:
                                  description: Name is the name of the Helm parameter
                                  type: string
                                path:
                                  description: Path is the path to the file containing the values for the Helm parameter
                                  type: string
                          ignoreMissingValueFiles:
                            description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                            type: boolean
                          parameters:
                            description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                            type: array
                            items:
                              description: HelmParameter is a parameter that's passed to helm template during manifest generation
                              type: object
                              properties:
                                forceString:
                                  description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                  type: boolean
                                name:
                                  description: Name is the name of the Helm parameter
                                  type: string
                                value:
                                  description: Value is the value for the Helm parameter
                                  type: string
                          passCredentials:
                            description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                            type: boolean
                          releaseName:
                            description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                            type: string
                          skipCrds:
                            description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                            type: boolean
                          valueFiles:
                            description: ValuesFiles is a list of Helm value files to use when generating a template
                            type: array
                            items:
                              type: string
                          values:
                            description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                            type: string
                          valuesObject:
                            description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                            x-kubernetes-preserve-unknown-fields: true
                          version:
                            description: Version is the Helm version to use for templating ("3")
                            type: string
                      kustomize:
                        description: Kustomize holds kustomize specific options
                        type: object
                        properties:
                          commonAnnotations:
                            description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                            type: object
                            additionalProperties:
                              type: string
                          commonAnnotationsEnvsubst:
                            description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                            type: boolean
                          commonLabels:
                            description: CommonLabels is a list of additional labels to add to rendered manifests
                            type: object
                            additionalProperties:
                              type: string
                          components:
                            description: Components specifies a list of kustomize components to add to the kustomization before building
                            type: array
                            items:
                              type: string
                          forceCommonAnnotations:
                            description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                            type: boolean
                          forceCommonLabels:
                            description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                            type: boolean
                          images:
                            description: Images is a list of Kustomize image override specifications
                            type: array
                            items:
                              description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                              type: string
                          labelWithoutSelector:
                            description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                            type: boolean
                          namePrefix:
                            description: NamePrefix is a prefix appended to resources for Kustomize apps
                            type: string
                          nameSuffix:
                            description: NameSuffix is a suffix appended to resources for Kustomize apps
                            type: string
                          namespace:
                            description: Namespace sets the namespace that Kustomize adds to all resources
                            type: string
                          patches:
                            description: Patches is a list of Kustomize patches
                            type: array
                            items:
                              type: object
                              properties:
                                options:
                                  type: object
                                  additionalProperties:
                                    type: boolean
                                patch:
                                  type: string
                                path:
                                  type: string
                                target:
                                  type: object
                                  properties:
                                    annotationSelector:
                                      type: string
                                    group:
                                      type: string
                                    kind:
                                      type: string
                                    labelSelector:
                                      type: string
                                    name:
                                      type: string
                                    namespace:
                                      type: string
                                    version:
                                      type: string
                          replicas:
                            description: Replicas is a list of Kustomize Replicas override specifications
                            type: array
                            items:
                              type: object
                              required:
                                - count
                                - name
                              properties:
                                count:
                                  description: Number of replicas
                                  x-kubernetes-int-or-string: true
                                name:
                                  description: Name of Deployment or StatefulSet
                                  type: string
                          version:
                            description: Version controls which version of Kustomize to use for rendering manifests
                            type: string
                      path:
                        description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                        type: string
                      plugin:
                        description: Plugin holds config management plugin specific options
                        type: object
                        properties:
                          env:
                            description: Env is a list of environment variable entries
                            type: array
                            items:
                              description: EnvEntry represents an entry in the application's environment
                              type: object
                              required:
                                - name
                                - value
                              properties:
                                name:
                                  description: Name is the name of the variable, usually expressed in uppercase
                                  type: string
                                value:
                                  description: Value is the value of the variable
                                  type: string
                          name:
                            type: string
                          parameters:
                            type: array
                            items:
                              type: object
                              properties:
                                array:
                                  description: Array is the value of an array type parameter.
                                  type: array
                                  items:
                                    type: string
                                map:
                                  description: Map is the value of a map type parameter.
                                  type: object
                                  additionalProperties:
                                    type: string
                                name:
                                  description: Name is the name identifying a parameter.
                                  type: string
                                string:
                                  description: String_ is the value of a string type parameter.
                                  type: string
                      ref:
                        description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                        type: string
                      repoURL:
                        description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                        type: string
                      targetRevision:
                        description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                        type: string
                  sources:
                    description: Sources is a reference to the application sources used for the sync operation
                    type: array
                    items:
                      description: ApplicationSource contains all required information about the source of an application
                      type: object
                      required:
                        - repoURL
                      properties:
                        chart:
                          description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                          type: string
                        directory:
                          description: Directory holds path/directory specific options
                          type: object
                          properties:
                            exclude:
                              description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                              type: string
                            include:
                              description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                              type: string
                            jsonnet:
                              description: Jsonnet holds options specific to Jsonnet
                              type: object
                              properties:
                                extVars:
                                  description: ExtVars is a list of Jsonnet External Variables
                                  type: array
                                  items:
                                    description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                    type: object
                                    required:
                                      - name
                                      - value
                                    properties:
                                      code:
                                        type: boolean
                                      name:
                                        type: string
                                      value:
                                        type: string
                                libs:
                                  description: Additional library search dirs
                                  type: array
                                  items:
                                    type: string
                                tlas:
                                  description: TLAS is a list of Jsonnet Top-level Arguments
                                  type: array
                                  items:
                                    description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                    type: object
                                    required:
                                      - name
                                      - value
                                    properties:
                                      code:
                                        type: boolean
                                      name:
                                        type: string
                                      value:
                                        type: string
                            recurse:
                              description: Recurse specifies whether to scan a directory recursively for manifests
                              type: boolean
                        helm:
                          description: Helm holds helm specific options
                          type: object
                          properties:
                            fileParameters:
                              description: FileParameters are file parameters to the helm template
                              type: array
                              items:
                                description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                type: object
                                properties:
                                  name:
                                    description: Name is the name of the Helm parameter
                                    type: string
                                  path:
                                    description: Path is the path to the file containing the values for the Helm parameter
                                    type: string
                            ignoreMissingValueFiles:
                              description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                              type: boolean
                            parameters:
                              description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                              type: array
                              items:
                                description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                type: object
                                properties:
                                  forceString:
                                    description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                    type: boolean
                                  name:
                                    description: Name is the name of the Helm parameter
                                    type: string
                                  value:
                                    description: Value is the value for the Helm parameter
                                    type: string
                            passCredentials:
                              description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                              type: boolean
                            releaseName:
                              description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                              type: string
                            skipCrds:
                              description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                              type: boolean
                            valueFiles:
                              description: ValuesFiles is a list of Helm value files to use when generating a template
                              type: array
                              items:
                                type: string
                            values:
                              description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                              type: string
                            valuesObject:
                              description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                              x-kubernetes-preserve-unknown-fields: true
                            version:
                              description: Version is the Helm version to use for templating ("3")
                              type: string
                        kustomize:
                          description: Kustomize holds kustomize specific options
                          type: object
                          properties:
                            commonAnnotations:
                              description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                              type: object
                              additionalProperties:
                                type: string
                            commonAnnotationsEnvsubst:
                              description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                              type: boolean
                            commonLabels:
                              description: CommonLabels is a list of additional labels to add to rendered manifests
                              type: object
                              additionalProperties:
                                type: string
                            components:
                              description: Components specifies a list of kustomize components to add to the kustomization before building
                              type: array
                              items:
                                type: string
                            forceCommonAnnotations:
                              description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                              type: boolean
                            forceCommonLabels:
                              description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                              type: boolean
                            images:
                              description: Images is a list of Kustomize image override specifications
                              type: array
                              items:
                                description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                type: string
                            labelWithoutSelector:
                              description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                              type: boolean
                            namePrefix:
                              description: NamePrefix is a prefix appended to resources for Kustomize apps
                              type: string
                            nameSuffix:
                              description: NameSuffix is a suffix appended to resources for Kustomize apps
                              type: string
                            namespace:
                              description: Namespace sets the namespace that Kustomize adds to all resources
                              type: string
                            patches:
                              description: Patches is a list of Kustomize patches
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: object
                                    additionalProperties:
                                      type: boolean
                                  patch:
                                    type: string
                                  path:
                                    type: string
                                  target:
                                    type: object
                                    properties:
                                      annotationSelector:
                                        type: string
                                      group:
                                        type: string
                                      kind:
                                        type: string
                                      labelSelector:
                                        type: string
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                      version:
                                        type: string
                            replicas:
                              description: Replicas is a list of Kustomize Replicas override specifications
                              type: array
                              items:
                                type: object
                                required:
                                  - count
                                  - name
                                properties:
                                  count:
                                    description: Number of replicas
                                    x-kubernetes-int-or-string: true
                                  name:
                                    description: Name of Deployment or StatefulSet
                                    type: string
                            version:
                              description: Version controls which version of Kustomize to use for rendering manifests
                              type: string
                        path:
                          description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                          type: string
                        plugin:
                          description: Plugin holds config management plugin specific options
                          type: object
                          properties:
                            env:
                              description: Env is a list of environment variable entries
                              type: array
                              items:
                                description: EnvEntry represents an entry in the application's environment
                                type: object
                                required:
                                  - name
                                  - value
                                properties:
                                  name:
                                    description: Name is the name of the variable, usually expressed in uppercase
                                    type: string
                                  value:
                                    description: Value is the value of the variable
                                    type: string
                            name:
                              type: string
                            parameters:
                              type: array
                              items:
                                type: object
                                properties:
                                  array:
                                    description: Array is the value of an array type parameter.
                                    type: array
                                    items:
                                      type: string
                                  map:
                                    description: Map is the value of a map type parameter.
                                    type: object
                                    additionalProperties:
                                      type: string
                                  name:
                                    description: Name is the name identifying a parameter.
                                    type: string
                                  string:
                                    description: String_ is the value of a string type parameter.
                                    type: string
                        ref:
                          description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                          type: string
                        repoURL:
                          description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                          type: string
                        targetRevision:
                          description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                          type: string
            observedAt:
              description: "ObservedAt indicates when the application state was updated without querying latest git state Deprecated: controller no longer updates ObservedAt field"
              type: string
              format: date-time
            operationState:
              description: OperationState contains information about any ongoing operations, such as a sync
              type: object
              required:
                - operation
                - phase
                - startedAt
              properties:
                finishedAt:
                  description: FinishedAt contains time of operation completion
                  type: string
                  format: date-time
                message:
                  description: Message holds any pertinent messages when attempting to perform operation (typically errors).
                  type: string
                operation:
                  description: Operation is the original requested operation
                  type: object
                  properties:
                    info:
                      description: Info is a list of informational items for this operation
                      type: array
                      items:
                        type: object
                        required:
                          - name
                          - value
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                    initiatedBy:
                      description: InitiatedBy contains information about who initiated the operations
                      type: object
                      properties:
                        automated:
                          description: Automated is set to true if operation was initiated automatically by the application controller.
                          type: boolean
                        username:
                          description: Username contains the name of a user who started operation
                          type: string
                    retry:
                      description: Retry controls the strategy to apply if a sync fails
                      type: object
                      properties:
                        backoff:
                          description: Backoff controls how to backoff on subsequent retries of failed syncs
                          type: object
                          properties:
                            duration:
                              description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                              type: string
                            factor:
                              description: Factor is a factor to multiply the base duration after each failed retry
                              type: integer
                              format: int64
                            maxDuration:
                              description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                              type: string
                        limit:
                          description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                          type: integer
                          format: int64
                    sync:
                      description: Sync contains parameters for the operation
                      type: object
                      properties:
                        dryRun:
                          description: DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync
                          type: boolean
                        manifests:
                          description: Manifests is an optional field that overrides sync source with a local directory for development
                          type: array
                          items:
                            type: string
                        prune:
                          description: Prune specifies to delete resources from the cluster that are no longer tracked in git
                          type: boolean
                        resources:
                          description: Resources describes which resources shall be part of the sync
                          type: array
                          items:
                            description: SyncOperationResource contains resources to sync.
                            type: object
                            required:
                              - kind
                              - name
                            properties:
                              group:
                                type: string
                              kind:
                                type: string
                              name:
                                type: string
                              namespace:
                                type: string
                        revision:
                          description: Revision is the revision (Git) or chart version (Helm) which to sync the application to If omitted, will use the revision specified in app spec.
                          type: string
                        revisions:
                          description: Revisions is the list of revision (Git) or chart version (Helm) which to sync each source in sources field for the application to If omitted, will use the revision specified in app spec.
                          type: array
                          items:
                            type: string
                        source:
                          description: Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
                          type: object
                          required:
                            - repoURL
                          properties:
                            chart:
                              description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                              type: string
                            directory:
                              description: Directory holds path/directory specific options
                              type: object
                              properties:
                                exclude:
                                  description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                  type: string
                                include:
                                  description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                  type: string
                                jsonnet:
                                  description: Jsonnet holds options specific to Jsonnet
                                  type: object
                                  properties:
                                    extVars:
                                      description: ExtVars is a list of Jsonnet External Variables
                                      type: array
                                      items:
                                        description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                        type: object
                                        required:
                                          - name
                                          - value
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                    libs:
                                      description: Additional library search dirs
                                      type: array
                                      items:
                                        type: string
                                    tlas:
                                      description: TLAS is a list of Jsonnet Top-level Arguments
                                      type: array
                                      items:
                                        description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                        type: object
                                        required:
                                          - name
                                          - value
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                recurse:
                                  description: Recurse specifies whether to scan a directory recursively for manifests
                                  type: boolean
                            helm:
                              description: Helm holds helm specific options
                              type: object
                              properties:
                                fileParameters:
                                  description: FileParameters are file parameters to the helm template
                                  type: array
                                  items:
                                    description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                    type: object
                                    properties:
                                      name:
                                        description: Name is the name of the Helm parameter
                                        type: string
                                      path:
                                        description: Path is the path to the file containing the values for the Helm parameter
                                        type: string
                                ignoreMissingValueFiles:
                                  description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                                  type: boolean
                                parameters:
                                  description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                  type: array
                                  items:
                                    description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                    type: object
                                    properties:
                                      forceString:
                                        description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                        type: boolean
                                      name:
                                        description: Name is the name of the Helm parameter
                                        type: string
                                      value:
                                        description: Value is the value for the Helm parameter
                                        type: string
                                passCredentials:
                                  description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                                  type: boolean
                                releaseName:
                                  description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                  type: string
                                skipCrds:
                                  description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                                  type: boolean
                                valueFiles:
                                  description: ValuesFiles is a list of Helm value files to use when generating a template
                                  type: array
                                  items:
                                    type: string
                                values:
                                  description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                                  type: string
                                valuesObject:
                                  description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                                  x-kubernetes-preserve-unknown-fields: true
                                version:
                                  description: Version is the Helm version to use for templating ("3")
                                  type: string
                            kustomize:
                              description: Kustomize holds kustomize specific options
                              type: object
                              properties:
                                commonAnnotations:
                                  description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                  type: object
                                  additionalProperties:
                                    type: string
                                commonAnnotationsEnvsubst:
                                  description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                                  type: boolean
                                commonLabels:
                                  description: CommonLabels is a list of additional labels to add to rendered manifests
                                  type: object
                                  additionalProperties:
                                    type: string
                                components:
                                  description: Components specifies a list of kustomize components to add to the kustomization before building
                                  type: array
                                  items:
                                    type: string
                                forceCommonAnnotations:
                                  description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                  type: boolean
                                forceCommonLabels:
                                  description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                  type: boolean
                                images:
                                  description: Images is a list of Kustomize image override specifications
                                  type: array
                                  items:
                                    description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                    type: string
                                labelWithoutSelector:
                                  description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                                  type: boolean
                                namePrefix:
                                  description: NamePrefix is a prefix appended to resources for Kustomize apps
                                  type: string
                                nameSuffix:
                                  description: NameSuffix is a suffix appended to resources for Kustomize apps
                                  type: string
                                namespace:
                                  description: Namespace sets the namespace that Kustomize adds to all resources
                                  type: string
                                patches:
                                  description: Patches is a list of Kustomize patches
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      options:
                                        type: object
                                        additionalProperties:
                                          type: boolean
                                      patch:
                                        type: string
                                      path:
                                        type: string
                                      target:
                                        type: object
                                        properties:
                                          annotationSelector:
                                            type: string
                                          group:
                                            type: string
                                          kind:
                                            type: string
                                          labelSelector:
                                            type: string
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                          version:
                                            type: string
                                replicas:
                                  description: Replicas is a list of Kustomize Replicas override specifications
                                  type: array
                                  items:
                                    type: object
                                    required:
                                      - count
                                      - name
                                    properties:
                                      count:
                                        description: Number of replicas
                                        x-kubernetes-int-or-string: true
                                      name:
                                        description: Name of Deployment or StatefulSet
                                        type: string
                                version:
                                  description: Version controls which version of Kustomize to use for rendering manifests
                                  type: string
                            path:
                              description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                              type: string
                            plugin:
                              description: Plugin holds config management plugin specific options
                              type: object
                              properties:
                                env:
                                  description: Env is a list of environment variable entries
                                  type: array
                                  items:
                                    description: EnvEntry represents an entry in the application's environment
                                    type: object
                                    required:
                                      - name
                                      - value
                                    properties:
                                      name:
                                        description: Name is the name of the variable, usually expressed in uppercase
                                        type: string
                                      value:
                                        description: Value is the value of the variable
                                        type: string
                                name:
                                  type: string
                                parameters:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      array:
                                        description: Array is the value of an array type parameter.
                                        type: array
                                        items:
                                          type: string
                                      map:
                                        description: Map is the value of a map type parameter.
                                        type: object
                                        additionalProperties:
                                          type: string
                                      name:
                                        description: Name is the name identifying a parameter.
                                        type: string
                                      string:
                                        description: String_ is the value of a string type parameter.
                                        type: string
                            ref:
                              description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                              type: string
                            repoURL:
                              description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                              type: string
                            targetRevision:
                              description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                              type: string
                        sources:
                          description: Sources overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
                          type: array
                          items:
                            description: ApplicationSource contains all required information about the source of an application
                            type: object
                            required:
                              - repoURL
                            properties:
                              chart:
                                description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                                type: string
                              directory:
                                description: Directory holds path/directory specific options
                                type: object
                                properties:
                                  exclude:
                                    description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                    type: string
                                  include:
                                    description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                    type: string
                                  jsonnet:
                                    description: Jsonnet holds options specific to Jsonnet
                                    type: object
                                    properties:
                                      extVars:
                                        description: ExtVars is a list of Jsonnet External Variables
                                        type: array
                                        items:
                                          description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            code:
                                              type: boolean
                                            name:
                                              type: string
                                            value:
                                              type: string
                                      libs:
                                        description: Additional library search dirs
                                        type: array
                                        items:
                                          type: string
                                      tlas:
                                        description: TLAS is a list of Jsonnet Top-level Arguments
                                        type: array
                                        items:
                                          description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            code:
                                              type: boolean
                                            name:
                                              type: string
                                            value:
                                              type: string
                                  recurse:
                                    description: Recurse specifies whether to scan a directory recursively for manifests
                                    type: boolean
                              helm:
                                description: Helm holds helm specific options
                                type: object
                                properties:
                                  fileParameters:
                                    description: FileParameters are file parameters to the helm template
                                    type: array
                                    items:
                                      description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                      type: object
                                      properties:
                                        name:
                                          description: Name is the name of the Helm parameter
                                          type: string
                                        path:
                                          description: Path is the path to the file containing the values for the Helm parameter
                                          type: string
                                  ignoreMissingValueFiles:
                                    description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                                    type: boolean
                                  parameters:
                                    description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                    type: array
                                    items:
                                      description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                      type: object
                                      properties:
                                        forceString:
                                          description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                          type: boolean
                                        name:
                                          description: Name is the name of the Helm parameter
                                          type: string
                                        value:
                                          description: Value is the value for the Helm parameter
                                          type: string
                                  passCredentials:
                                    description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                                    type: boolean
                                  releaseName:
                                    description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                    type: string
                                  skipCrds:
                                    description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                                    type: boolean
                                  valueFiles:
                                    description: ValuesFiles is a list of Helm value files to use when generating a template
                                    type: array
                                    items:
                                      type: string
                                  values:
                                    description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                                    type: string
                                  valuesObject:
                                    description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                                    x-kubernetes-preserve-unknown-fields: true
                                  version:
                                    description: Version is the Helm version to use for templating ("3")
                                    type: string
                              kustomize:
                                description: Kustomize holds kustomize specific options
                                type: object
                                properties:
                                  commonAnnotations:
                                    description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                    type: object
                                    additionalProperties:
                                      type: string
                                  commonAnnotationsEnvsubst:
                                    description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                                    type: boolean
                                  commonLabels:
                                    description: CommonLabels is a list of additional labels to add to rendered manifests
                                    type: object
                                    additionalProperties:
                                      type: string
                                  components:
                                    description: Components specifies a list of kustomize components to add to the kustomization before building
                                    type: array
                                    items:
                                      type: string
                                  forceCommonAnnotations:
                                    description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                    type: boolean
                                  forceCommonLabels:
                                    description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                    type: boolean
                                  images:
                                    description: Images is a list of Kustomize image override specifications
                                    type: array
                                    items:
                                      description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                      type: string
                                  labelWithoutSelector:
                                    description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                                    type: boolean
                                  namePrefix:
                                    description: NamePrefix is a prefix appended to resources for Kustomize apps
                                    type: string
                                  nameSuffix:
                                    description: NameSuffix is a suffix appended to resources for Kustomize apps
                                    type: string
                                  namespace:
                                    description: Namespace sets the namespace that Kustomize adds to all resources
                                    type: string
                                  patches:
                                    description: Patches is a list of Kustomize patches
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        options:
                                          type: object
                                          additionalProperties:
                                            type: boolean
                                        patch:
                                          type: string
                                        path:
                                          type: string
                                        target:
                                          type: object
                                          properties:
                                            annotationSelector:
                                              type: string
                                            group:
                                              type: string
                                            kind:
                                              type: string
                                            labelSelector:
                                              type: string
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                            version:
                                              type: string
                                  replicas:
                                    description: Replicas is a list of Kustomize Replicas override specifications
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - count
                                        - name
                                      properties:
                                        count:
                                          description: Number of replicas
                                          x-kubernetes-int-or-string: true
                                        name:
                                          description: Name of Deployment or StatefulSet
                                          type: string
                                  version:
                                    description: Version controls which version of Kustomize to use for rendering manifests
                                    type: string
                              path:
                                description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                                type: string
                              plugin:
                                description: Plugin holds config management plugin specific options
                                type: object
                                properties:
                                  env:
                                    description: Env is a list of environment variable entries
                                    type: array
                                    items:
                                      description: EnvEntry represents an entry in the application's environment
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          description: Name is the name of the variable, usually expressed in uppercase
                                          type: string
                                        value:
                                          description: Value is the value of the variable
                                          type: string
                                  name:
                                    type: string
                                  parameters:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        array:
                                          description: Array is the value of an array type parameter.
                                          type: array
                                          items:
                                            type: string
                                        map:
                                          description: Map is the value of a map type parameter.
                                          type: object
                                          additionalProperties:
                                            type: string
                                        name:
                                          description: Name is the name identifying a parameter.
                                          type: string
                                        string:
                                          description: String_ is the value of a string type parameter.
                                          type: string
                              ref:
                                description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                                type: string
                              repoURL:
                                description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                                type: string
                              targetRevision:
                                description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                                type: string
                        syncOptions:
                          description: SyncOptions provide per-sync sync-options, e.g. Validate=false
                          type: array
                          items:
                            type: string
                        syncStrategy:
                          description: SyncStrategy describes how to perform the sync
                          type: object
                          properties:
                            apply:
                              description: Apply will perform a `kubectl apply` to perform the sync.
                              type: object
                              properties:
                                force:
                                  description: Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
                                  type: boolean
                            hook:
                              description: Hook will submit any referenced resources to perform the sync. This is the default strategy
                              type: object
                              properties:
                                force:
                                  description: Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
                                  type: boolean
                phase:
                  description: Phase is the current phase of the operation
                  type: string
                retryCount:
                  description: RetryCount contains time of operation retries
                  type: integer
                  format: int64
                startedAt:
                  description: StartedAt contains time of operation start
                  type: string
                  format: date-time
                syncResult:
                  description: SyncResult is the result of a Sync operation
                  type: object
                  required:
                    - revision
                  properties:
                    managedNamespaceMetadata:
                      description: ManagedNamespaceMetadata contains the current sync state of managed namespace metadata
                      type: object
                      properties:
                        annotations:
                          type: object
                          additionalProperties:
                            type: string
                        labels:
                          type: object
                          additionalProperties:
                            type: string
                    resources:
                      description: Resources contains a list of sync result items for each individual resource in a sync operation
                      type: array
                      items:
                        description: ResourceResult holds the operation result details of a specific resource
                        type: object
                        required:
                          - group
                          - kind
                          - name
                          - namespace
                          - version
                        properties:
                          group:
                            description: Group specifies the API group of the resource
                            type: string
                          hookPhase:
                            description: HookPhase contains the state of any operation associated with this resource OR hook This can also contain values for non-hook resources.
                            type: string
                          hookType:
                            description: HookType specifies the type of the hook. Empty for non-hook resources
                            type: string
                          kind:
                            description: Kind specifies the API kind of the resource
                            type: string
                          message:
                            description: Message contains an informational or error message for the last sync OR operation
                            type: string
                          name:
                            description: Name specifies the name of the resource
                            type: string
                          namespace:
                            description: Namespace specifies the target namespace of the resource
                            type: string
                          status:
                            description: Status holds the final result of the sync. Will be empty if the resources is yet to be applied/pruned and is always zero-value for hooks
                            type: string
                          syncPhase:
                            description: SyncPhase indicates the particular phase of the sync that this result was acquired in
                            type: string
                          version:
                            description: Version specifies the API version of the resource
                            type: string
                    revision:
                      description: Revision holds the revision this sync operation was performed to
                      type: string
                    revisions:
                      description: Revisions holds the revision this sync operation was performed for respective indexed source in sources field
                      type: array
                      items:
                        type: string
                    source:
                      description: Source records the application source information of the sync, used for comparing auto-sync
                      type: object
                      required:
                        - repoURL
                      properties:
                        chart:
                          description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                          type: string
                        directory:
                          description: Directory holds path/directory specific options
                          type: object
                          properties:
                            exclude:
                              description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                              type: string
                            include:
                              description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                              type: string
                            jsonnet:
                              description: Jsonnet holds options specific to Jsonnet
                              type: object
                              properties:
                                extVars:
                                  description: ExtVars is a list of Jsonnet External Variables
                                  type: array
                                  items:
                                    description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                    type: object
                                    required:
                                      - name
                                      - value
                                    properties:
                                      code:
                                        type: boolean
                                      name:
                                        type: string
                                      value:
                                        type: string
                                libs:
                                  description: Additional library search dirs
                                  type: array
                                  items:
                                    type: string
                                tlas:
                                  description: TLAS is a list of Jsonnet Top-level Arguments
                                  type: array
                                  items:
                                    description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                    type: object
                                    required:
                                      - name
                                      - value
                                    properties:
                                      code:
                                        type: boolean
                                      name:
                                        type: string
                                      value:
                                        type: string
                            recurse:
                              description: Recurse specifies whether to scan a directory recursively for manifests
                              type: boolean
                        helm:
                          description: Helm holds helm specific options
                          type: object
                          properties:
                            fileParameters:
                              description: FileParameters are file parameters to the helm template
                              type: array
                              items:
                                description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                type: object
                                properties:
                                  name:
                                    description: Name is the name of the Helm parameter
                                    type: string
                                  path:
                                    description: Path is the path to the file containing the values for the Helm parameter
                                    type: string
                            ignoreMissingValueFiles:
                              description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                              type: boolean
                            parameters:
                              description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                              type: array
                              items:
                                description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                type: object
                                properties:
                                  forceString:
                                    description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                    type: boolean
                                  name:
                                    description: Name is the name of the Helm parameter
                                    type: string
                                  value:
                                    description: Value is the value for the Helm parameter
                                    type: string
                            passCredentials:
                              description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                              type: boolean
                            releaseName:
                              description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                              type: string
                            skipCrds:
                              description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                              type: boolean
                            valueFiles:
                              description: ValuesFiles is a list of Helm value files to use when generating a template
                              type: array
                              items:
                                type: string
                            values:
                              description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                              type: string
                            valuesObject:
                              description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                              x-kubernetes-preserve-unknown-fields: true
                            version:
                              description: Version is the Helm version to use for templating ("3")
                              type: string
                        kustomize:
                          description: Kustomize holds kustomize specific options
                          type: object
                          properties:
                            commonAnnotations:
                              description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                              type: object
                              additionalProperties:
                                type: string
                            commonAnnotationsEnvsubst:
                              description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                              type: boolean
                            commonLabels:
                              description: CommonLabels is a list of additional labels to add to rendered manifests
                              type: object
                              additionalProperties:
                                type: string
                            components:
                              description: Components specifies a list of kustomize components to add to the kustomization before building
                              type: array
                              items:
                                type: string
                            forceCommonAnnotations:
                              description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                              type: boolean
                            forceCommonLabels:
                              description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                              type: boolean
                            images:
                              description: Images is a list of Kustomize image override specifications
                              type: array
                              items:
                                description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                type: string
                            labelWithoutSelector:
                              description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                              type: boolean
                            namePrefix:
                              description: NamePrefix is a prefix appended to resources for Kustomize apps
                              type: string
                            nameSuffix:
                              description: NameSuffix is a suffix appended to resources for Kustomize apps
                              type: string
                            namespace:
                              description: Namespace sets the namespace that Kustomize adds to all resources
                              type: string
                            patches:
                              description: Patches is a list of Kustomize patches
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: object
                                    additionalProperties:
                                      type: boolean
                                  patch:
                                    type: string
                                  path:
                                    type: string
                                  target:
                                    type: object
                                    properties:
                                      annotationSelector:
                                        type: string
                                      group:
                                        type: string
                                      kind:
                                        type: string
                                      labelSelector:
                                        type: string
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                      version:
                                        type: string
                            replicas:
                              description: Replicas is a list of Kustomize Replicas override specifications
                              type: array
                              items:
                                type: object
                                required:
                                  - count
                                  - name
                                properties:
                                  count:
                                    description: Number of replicas
                                    x-kubernetes-int-or-string: true
                                  name:
                                    description: Name of Deployment or StatefulSet
                                    type: string
                            version:
                              description: Version controls which version of Kustomize to use for rendering manifests
                              type: string
                        path:
                          description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                          type: string
                        plugin:
                          description: Plugin holds config management plugin specific options
                          type: object
                          properties:
                            env:
                              description: Env is a list of environment variable entries
                              type: array
                              items:
                                description: EnvEntry represents an entry in the application's environment
                                type: object
                                required:
                                  - name
                                  - value
                                properties:
                                  name:
                                    description: Name is the name of the variable, usually expressed in uppercase
                                    type: string
                                  value:
                                    description: Value is the value of the variable
                                    type: string
                            name:
                              type: string
                            parameters:
                              type: array
                              items:
                                type: object
                                properties:
                                  array:
                                    description: Array is the value of an array type parameter.
                                    type: array
                                    items:
                                      type: string
                                  map:
                                    description: Map is the value of a map type parameter.
                                    type: object
                                    additionalProperties:
                                      type: string
                                  name:
                                    description: Name is the name identifying a parameter.
                                    type: string
                                  string:
                                    description: String_ is the value of a string type parameter.
                                    type: string
                        ref:
                          description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                          type: string
                        repoURL:
                          description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                          type: string
                        targetRevision:
                          description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                          type: string
                    sources:
                      description: Source records the application source information of the sync, used for comparing auto-sync
                      type: array
                      items:
                        description: ApplicationSource contains all required information about the source of an application
                        type: object
                        required:
                          - repoURL
                        properties:
                          chart:
                            description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                            type: string
                          directory:
                            description: Directory holds path/directory specific options
                            type: object
                            properties:
                              exclude:
                                description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                type: string
                              include:
                                description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                type: string
                              jsonnet:
                                description: Jsonnet holds options specific to Jsonnet
                                type: object
                                properties:
                                  extVars:
                                    description: ExtVars is a list of Jsonnet External Variables
                                    type: array
                                    items:
                                      description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                                  libs:
                                    description: Additional library search dirs
                                    type: array
                                    items:
                                      type: string
                                  tlas:
                                    description: TLAS is a list of Jsonnet Top-level Arguments
                                    type: array
                                    items:
                                      description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                              recurse:
                                description: Recurse specifies whether to scan a directory recursively for manifests
                                type: boolean
                          helm:
                            description: Helm holds helm specific options
                            type: object
                            properties:
                              fileParameters:
                                description: FileParameters are file parameters to the helm template
                                type: array
                                items:
                                  description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                  type: object
                                  properties:
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    path:
                                      description: Path is the path to the file containing the values for the Helm parameter
                                      type: string
                              ignoreMissingValueFiles:
                                description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                                type: boolean
                              parameters:
                                description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                type: array
                                items:
                                  description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                  type: object
                                  properties:
                                    forceString:
                                      description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                      type: boolean
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    value:
                                      description: Value is the value for the Helm parameter
                                      type: string
                              passCredentials:
                                description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                                type: boolean
                              releaseName:
                                description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                type: string
                              skipCrds:
                                description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                                type: boolean
                              valueFiles:
                                description: ValuesFiles is a list of Helm value files to use when generating a template
                                type: array
                                items:
                                  type: string
                              values:
                                description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                                type: string
                              valuesObject:
                                description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                                x-kubernetes-preserve-unknown-fields: true
                              version:
                                description: Version is the Helm version to use for templating ("3")
                                type: string
                          kustomize:
                            description: Kustomize holds kustomize specific options
                            type: object
                            properties:
                              commonAnnotations:
                                description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                type: object
                                additionalProperties:
                                  type: string
                              commonAnnotationsEnvsubst:
                                description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                                type: boolean
                              commonLabels:
                                description: CommonLabels is a list of additional labels to add to rendered manifests
                                type: object
                                additionalProperties:
                                  type: string
                              components:
                                description: Components specifies a list of kustomize components to add to the kustomization before building
                                type: array
                                items:
                                  type: string
                              forceCommonAnnotations:
                                description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                type: boolean
                              forceCommonLabels:
                                description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                type: boolean
                              images:
                                description: Images is a list of Kustomize image override specifications
                                type: array
                                items:
                                  description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                  type: string
                              labelWithoutSelector:
                                description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                                type: boolean
                              namePrefix:
                                description: NamePrefix is a prefix appended to resources for Kustomize apps
                                type: string
                              nameSuffix:
                                description: NameSuffix is a suffix appended to resources for Kustomize apps
                                type: string
                              namespace:
                                description: Namespace sets the namespace that Kustomize adds to all resources
                                type: string
                              patches:
                                description: Patches is a list of Kustomize patches
                                type: array
                                items:
                                  type: object
                                  properties:
                                    options:
                                      type: object
                                      additionalProperties:
                                        type: boolean
                                    patch:
                                      type: string
                                    path:
                                      type: string
                                    target:
                                      type: object
                                      properties:
                                        annotationSelector:
                                          type: string
                                        group:
                                          type: string
                                        kind:
                                          type: string
                                        labelSelector:
                                          type: string
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                        version:
                                          type: string
                              replicas:
                                description: Replicas is a list of Kustomize Replicas override specifications
                                type: array
                                items:
                                  type: object
                                  required:
                                    - count
                                    - name
                                  properties:
                                    count:
                                      description: Number of replicas
                                      x-kubernetes-int-or-string: true
                                    name:
                                      description: Name of Deployment or StatefulSet
                                      type: string
                              version:
                                description: Version controls which version of Kustomize to use for rendering manifests
                                type: string
                          path:
                            description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                            type: string
                          plugin:
                            description: Plugin holds config management plugin specific options
                            type: object
                            properties:
                              env:
                                description: Env is a list of environment variable entries
                                type: array
                                items:
                                  description: EnvEntry represents an entry in the application's environment
                                  type: object
                                  required:
                                    - name
                                    - value
                                  properties:
                                    name:
                                      description: Name is the name of the variable, usually expressed in uppercase
                                      type: string
                                    value:
                                      description: Value is the value of the variable
                                      type: string
                              name:
                                type: string
                              parameters:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    array:
                                      description: Array is the value of an array type parameter.
                                      type: array
                                      items:
                                        type: string
                                    map:
                                      description: Map is the value of a map type parameter.
                                      type: object
                                      additionalProperties:
                                        type: string
                                    name:
                                      description: Name is the name identifying a parameter.
                                      type: string
                                    string:
                                      description: String_ is the value of a string type parameter.
                                      type: string
                          ref:
                            description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                            type: string
                          repoURL:
                            description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                            type: string
                          targetRevision:
                            description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                            type: string
            reconciledAt:
              description: ReconciledAt indicates when the application state was reconciled using the latest git version
              type: string
              format: date-time
            resourceHealthSource:
              description: "ResourceHealthSource indicates where the resource health status is stored: inline if not set or appTree"
              type: string
            resources:
              description: Resources is a list of Kubernetes resources managed by this application
              type: array
              items:
                description: "ResourceStatus holds the current sync and health status of a resource TODO: describe members of this type"
                type: object
                properties:
                  group:
                    type: string
                  health:
                    description: HealthStatus contains information about the currently observed health state of an application or resource
                    type: object
                    properties:
                      message:
                        description: Message is a human-readable informational message describing the health status
                        type: string
                      status:
                        description: Status holds the status code of the application or resource
                        type: string
                  hook:
                    type: boolean
                  kind:
                    type: string
                  name:
                    type: string
                  namespace:
                    type: string
                  requiresPruning:
                    type: boolean
                  status:
                    description: SyncStatusCode is a type which represents possible comparison results
                    type: string
                  syncWave:
                    type: integer
                    format: int64
                  version:
                    type: string
            sourceType:
              description: SourceType specifies the type of this application
              type: string
            sourceTypes:
              description: SourceTypes specifies the type of the sources included in the application
              type: array
              items:
                description: ApplicationSourceType specifies the type of the application's source
                type: string
            summary:
              description: Summary contains a list of URLs and container images used by this application
              type: object
              properties:
                externalURLs:
                  description: ExternalURLs holds all external URLs of application child resources.
                  type: array
                  items:
                    type: string
                images:
                  description: Images holds all images of application child resources.
                  type: array
                  items:
                    type: string
            sync:
              description: Sync contains information about the application's current sync status
              type: object
              required:
                - status
              properties:
                comparedTo:
                  description: ComparedTo contains information about what has been compared
                  type: object
                  required:
                    - destination
                  properties:
                    destination:
                      description: Destination is a reference to the application's destination used for comparison
                      type: object
                      properties:
                        name:
                          description: Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.
                          type: string
                        namespace:
                          description: Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
                          type: string
                        server:
                          description: Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.
                          type: string
                    ignoreDifferences:
                      description: IgnoreDifferences is a reference to the application's ignored differences used for comparison
                      type: array
                      items:
                        description: ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
                        type: object
                        required:
                          - kind
                        properties:
                          group:
                            type: string
                          jqPathExpressions:
                            type: array
                            items:
                              type: string
                          jsonPointers:
                            type: array
                            items:
                              type: string
                          kind:
                            type: string
                          managedFieldsManagers:
                            description: ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the desired state defined in the SCM and won't be displayed in diffs
                            type: array
                            items:
                              type: string
                          name:
                            type: string
                          namespace:
                            type: string
                    source:
                      description: Source is a reference to the application's source used for comparison
                      type: object
                      required:
                        - repoURL
                      properties:
                        chart:
                          description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                          type: string
                        directory:
                          description: Directory holds path/directory specific options
                          type: object
                          properties:
                            exclude:
                              description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                              type: string
                            include:
                              description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                              type: string
                            jsonnet:
                              description: Jsonnet holds options specific to Jsonnet
                              type: object
                              properties:
                                extVars:
                                  description: ExtVars is a list of Jsonnet External Variables
                                  type: array
                                  items:
                                    description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                    type: object
                                    required:
                                      - name
                                      - value
                                    properties:
                                      code:
                                        type: boolean
                                      name:
                                        type: string
                                      value:
                                        type: string
                                libs:
                                  description: Additional library search dirs
                                  type: array
                                  items:
                                    type: string
                                tlas:
                                  description: TLAS is a list of Jsonnet Top-level Arguments
                                  type: array
                                  items:
                                    description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                    type: object
                                    required:
                                      - name
                                      - value
                                    properties:
                                      code:
                                        type: boolean
                                      name:
                                        type: string
                                      value:
                                        type: string
                            recurse:
                              description: Recurse specifies whether to scan a directory recursively for manifests
                              type: boolean
                        helm:
                          description: Helm holds helm specific options
                          type: object
                          properties:
                            fileParameters:
                              description: FileParameters are file parameters to the helm template
                              type: array
                              items:
                                description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                type: object
                                properties:
                                  name:
                                    description: Name is the name of the Helm parameter
                                    type: string
                                  path:
                                    description: Path is the path to the file containing the values for the Helm parameter
                                    type: string
                            ignoreMissingValueFiles:
                              description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                              type: boolean
                            parameters:
                              description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                              type: array
                              items:
                                description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                type: object
                                properties:
                                  forceString:
                                    description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                    type: boolean
                                  name:
                                    description: Name is the name of the Helm parameter
                                    type: string
                                  value:
                                    description: Value is the value for the Helm parameter
                                    type: string
                            passCredentials:
                              description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                              type: boolean
                            releaseName:
                              description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                              type: string
                            skipCrds:
                              description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                              type: boolean
                            valueFiles:
                              description: ValuesFiles is a list of Helm value files to use when generating a template
                              type: array
                              items:
                                type: string
                            values:
                              description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                              type: string
                            valuesObject:
                              description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                              x-kubernetes-preserve-unknown-fields: true
                            version:
                              description: Version is the Helm version to use for templating ("3")
                              type: string
                        kustomize:
                          description: Kustomize holds kustomize specific options
                          type: object
                          properties:
                            commonAnnotations:
                              description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                              type: object
                              additionalProperties:
                                type: string
                            commonAnnotationsEnvsubst:
                              description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                              type: boolean
                            commonLabels:
                              description: CommonLabels is a list of additional labels to add to rendered manifests
                              type: object
                              additionalProperties:
                                type: string
                            components:
                              description: Components specifies a list of kustomize components to add to the kustomization before building
                              type: array
                              items:
                                type: string
                            forceCommonAnnotations:
                              description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                              type: boolean
                            forceCommonLabels:
                              description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                              type: boolean
                            images:
                              description: Images is a list of Kustomize image override specifications
                              type: array
                              items:
                                description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                type: string
                            labelWithoutSelector:
                              description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                              type: boolean
                            namePrefix:
                              description: NamePrefix is a prefix appended to resources for Kustomize apps
                              type: string
                            nameSuffix:
                              description: NameSuffix is a suffix appended to resources for Kustomize apps
                              type: string
                            namespace:
                              description: Namespace sets the namespace that Kustomize adds to all resources
                              type: string
                            patches:
                              description: Patches is a list of Kustomize patches
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: object
                                    additionalProperties:
                                      type: boolean
                                  patch:
                                    type: string
                                  path:
                                    type: string
                                  target:
                                    type: object
                                    properties:
                                      annotationSelector:
                                        type: string
                                      group:
                                        type: string
                                      kind:
                                        type: string
                                      labelSelector:
                                        type: string
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                      version:
                                        type: string
                            replicas:
                              description: Replicas is a list of Kustomize Replicas override specifications
                              type: array
                              items:
                                type: object
                                required:
                                  - count
                                  - name
                                properties:
                                  count:
                                    description: Number of replicas
                                    x-kubernetes-int-or-string: true
                                  name:
                                    description: Name of Deployment or StatefulSet
                                    type: string
                            version:
                              description: Version controls which version of Kustomize to use for rendering manifests
                              type: string
                        path:
                          description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                          type: string
                        plugin:
                          description: Plugin holds config management plugin specific options
                          type: object
                          properties:
                            env:
                              description: Env is a list of environment variable entries
                              type: array
                              items:
                                description: EnvEntry represents an entry in the application's environment
                                type: object
                                required:
                                  - name
                                  - value
                                properties:
                                  name:
                                    description: Name is the name of the variable, usually expressed in uppercase
                                    type: string
                                  value:
                                    description: Value is the value of the variable
                                    type: string
                            name:
                              type: string
                            parameters:
                              type: array
                              items:
                                type: object
                                properties:
                                  array:
                                    description: Array is the value of an array type parameter.
                                    type: array
                                    items:
                                      type: string
                                  map:
                                    description: Map is the value of a map type parameter.
                                    type: object
                                    additionalProperties:
                                      type: string
                                  name:
                                    description: Name is the name identifying a parameter.
                                    type: string
                                  string:
                                    description: String_ is the value of a string type parameter.
                                    type: string
                        ref:
                          description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                          type: string
                        repoURL:
                          description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                          type: string
                        targetRevision:
                          description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                          type: string
                    sources:
                      description: Sources is a reference to the application's multiple sources used for comparison
                      type: array
                      items:
                        description: ApplicationSource contains all required information about the source of an application
                        type: object
                        required:
                          - repoURL
                        properties:
                          chart:
                            description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                            type: string
                          directory:
                            description: Directory holds path/directory specific options
                            type: object
                            properties:
                              exclude:
                                description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                type: string
                              include:
                                description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                type: string
                              jsonnet:
                                description: Jsonnet holds options specific to Jsonnet
                                type: object
                                properties:
                                  extVars:
                                    description: ExtVars is a list of Jsonnet External Variables
                                    type: array
                                    items:
                                      description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                                  libs:
                                    description: Additional library search dirs
                                    type: array
                                    items:
                                      type: string
                                  tlas:
                                    description: TLAS is a list of Jsonnet Top-level Arguments
                                    type: array
                                    items:
                                      description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                              recurse:
                                description: Recurse specifies whether to scan a directory recursively for manifests
                                type: boolean
                          helm:
                            description: Helm holds helm specific options
                            type: object
                            properties:
                              fileParameters:
                                description: FileParameters are file parameters to the helm template
                                type: array
                                items:
                                  description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                  type: object
                                  properties:
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    path:
                                      description: Path is the path to the file containing the values for the Helm parameter
                                      type: string
                              ignoreMissingValueFiles:
                                description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                                type: boolean
                              parameters:
                                description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                type: array
                                items:
                                  description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                  type: object
                                  properties:
                                    forceString:
                                      description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                      type: boolean
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    value:
                                      description: Value is the value for the Helm parameter
                                      type: string
                              passCredentials:
                                description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                                type: boolean
                              releaseName:
                                description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                type: string
                              skipCrds:
                                description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                                type: boolean
                              valueFiles:
                                description: ValuesFiles is a list of Helm value files to use when generating a template
                                type: array
                                items:
                                  type: string
                              values:
                                description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                                type: string
                              valuesObject:
                                description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                                x-kubernetes-preserve-unknown-fields: true
                              version:
                                description: Version is the Helm version to use for templating ("3")
                                type: string
                          kustomize:
                            description: Kustomize holds kustomize specific options
                            type: object
                            properties:
                              commonAnnotations:
                                description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                type: object
                                additionalProperties:
                                  type: string
                              commonAnnotationsEnvsubst:
                                description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                                type: boolean
                              commonLabels:
                                description: CommonLabels is a list of additional labels to add to rendered manifests
                                type: object
                                additionalProperties:
                                  type: string
                              components:
                                description: Components specifies a list of kustomize components to add to the kustomization before building
                                type: array
                                items:
                                  type: string
                              forceCommonAnnotations:
                                description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                type: boolean
                              forceCommonLabels:
                                description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                type: boolean
                              images:
                                description: Images is a list of Kustomize image override specifications
                                type: array
                                items:
                                  description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                  type: string
                              labelWithoutSelector:
                                description: LabelWithoutSelector specifies whether to apply common labels to resource selectors or not
                                type: boolean
                              namePrefix:
                                description: NamePrefix is a prefix appended to resources for Kustomize apps
                                type: string
                              nameSuffix:
                                description: NameSuffix is a suffix appended to resources for Kustomize apps
                                type: string
                              namespace:
                                description: Namespace sets the namespace that Kustomize adds to all resources
                                type: string
                              patches:
                                description: Patches is a list of Kustomize patches
                                type: array
                                items:
                                  type: object
                                  properties:
                                    options:
                                      type: object
                                      additionalProperties:
                                        type: boolean
                                    patch:
                                      type: string
                                    path:
                                      type: string
                                    target:
                                      type: object
                                      properties:
                                        annotationSelector:
                                          type: string
                                        group:
                                          type: string
                                        kind:
                                          type: string
                                        labelSelector:
                                          type: string
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                        version:
                                          type: string
                              replicas:
                                description: Replicas is a list of Kustomize Replicas override specifications
                                type: array
                                items:
                                  type: object
                                  required:
                                    - count
                                    - name
                                  properties:
                                    count:
                                      description: Number of replicas
                                      x-kubernetes-int-or-string: true
                                    name:
                                      description: Name of Deployment or StatefulSet
                                      type: string
                              version:
                                description: Version controls which version of Kustomize to use for rendering manifests
                                type: string
                          path:
                            description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                            type: string
                          plugin:
                            description: Plugin holds config management plugin specific options
                            type: object
                            properties:
                              env:
                                description: Env is a list of environment variable entries
                                type: array
                                items:
                                  description: EnvEntry represents an entry in the application's environment
                                  type: object
                                  required:
                                    - name
                                    - value
                                  properties:
                                    name:
                                      description: Name is the name of the variable, usually expressed in uppercase
                                      type: string
                                    value:
                                      description: Value is the value of the variable
                                      type: string
                              name:
                                type: string
                              parameters:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    array:
                                      description: Array is the value of an array type parameter.
                                      type: array
                                      items:
                                        type: string
                                    map:
                                      description: Map is the value of a map type parameter.
                                      type: object
                                      additionalProperties:
                                        type: string
                                    name:
                                      description: Name is the name identifying a parameter.
                                      type: string
                                    string:
                                      description: String_ is the value of a string type parameter.
                                      type: string
                          ref:
                            description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                            type: string
                          repoURL:
                            description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                            type: string
                          targetRevision:
                            description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                            type: string
                revision:
                  description: Revision contains information about the revision the comparison has been performed to
                  type: string
                revisions:
                  description: Revisions contains information about the revisions of multiple sources the comparison has been performed to
                  type: array
                  items:
                    type: string
                status:
                  description: Status is the sync state of the comparison
                  type: string
      x-kubernetes-group-version-kind:
        - group: argoproj.io
          kind: Application
          version: v1alpha1
    io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta:
      description: ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
      type: object
      properties:
        annotations:
          description: "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations"
          type: object
          additionalProperties:
            type: string
        creationTimestamp:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        deletionGracePeriodSeconds:
          description: Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.
          type: integer
          format: int64
        deletionTimestamp:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        finalizers:
          description: Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.
          type: array
          items:
            type: string
          x-kubernetes-patch-strategy: merge
        generateName:
          description: "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency"
          type: string
        generation:
          description: A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.
          type: integer
          format: int64
        labels:
          description: "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels"
          type: object
          additionalProperties:
            type: string
        managedFields:
          description: ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like "ci-cd". The set of fields is always in the version that the workflow used when modifying the object.
          type: array
          items:
            $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"
        name:
          description: "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names"
          type: string
        namespace:
          description: 'Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.


            Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces'
          type: string
        ownerReferences:
          description: List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
          type: array
          items:
            $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
          x-kubernetes-patch-merge-key: uid
          x-kubernetes-patch-strategy: merge
        resourceVersion:
          description: "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
          type: string
        selfLink:
          description: "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system."
          type: string
        uid:
          description: "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids"
          type: string
    io.k8s.apimachinery.pkg.apis.meta.v1.Time:
      description: Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
      type: string
      format: date-time
    io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry:
      description: ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.
      type: object
      properties:
        apiVersion:
          description: APIVersion defines the version of this resource that this field set applies to. The format is "group/version" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.
          type: string
        fieldsType:
          description: 'FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: "FieldsV1"'
          type: string
        fieldsV1:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1"
        manager:
          description: Manager is an identifier of the workflow managing these fields.
          type: string
        operation:
          description: Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.
          type: string
        subresource:
          description: Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.
          type: string
        time:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
    io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1:
      description: "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff"
      type: object
    io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference:
      description: OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.
      type: object
      required:
        - apiVersion
        - kind
        - name
        - uid
      properties:
        apiVersion:
          description: API version of the referent.
          type: string
        blockOwnerDeletion:
          description: If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
          type: boolean
        controller:
          description: If true, this reference points to the managing controller.
          type: boolean
        kind:
          description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        name:
          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names"
          type: string
        uid:
          description: "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids"
          type: string
      x-kubernetes-map-type: atomic
    io.argoproj.v1alpha1.ApplicationList:
      description: ApplicationList is a list of Application
      type: object
      required:
        - items
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          description: "List of applications. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md"
          type: array
          items:
            $ref: "#/components/schemas/io.argoproj.v1alpha1.Application"
        kind:
          description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
      x-kubernetes-group-version-kind:
        - group: argoproj.io
          kind: ApplicationList
          version: v1alpha1
    io.argoproj.v1alpha1.NotificationsConfiguration:
      description: NotificationsConfiguration is the Schema for the NotificationsConfiguration API
      type: object
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        spec:
          description: NotificationsConfigurationSpec allows users to define the triggers, templates, services, context and subscriptions for the notifications
          type: object
          properties:
            context:
              description: Context is used to define some shared context between all notification templates
              type: object
              additionalProperties:
                type: string
            services:
              description: Services are used to deliver message
              type: object
              additionalProperties:
                type: string
            subscriptions:
              description: Subscriptions contain centrally managed global application subscriptions
              type: object
              additionalProperties:
                type: string
            templates:
              description: Templates are used to generate the notification template message
              type: object
              additionalProperties:
                type: string
            triggers:
              description: Triggers define the condition when the notification should be sent and list of templates required to generate the message Recipients can subscribe to the trigger and specify the required message template and destination notification service.
              type: object
              additionalProperties:
                type: string
      x-kubernetes-group-version-kind:
        - group: argoproj.io
          kind: NotificationsConfiguration
          version: v1alpha1
    io.argoproj.v1alpha1.NotificationsConfigurationList:
      description: NotificationsConfigurationList is a list of NotificationsConfiguration
      type: object
      required:
        - items
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          description: "List of notificationsconfigurations. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md"
          type: array
          items:
            $ref: "#/components/schemas/io.argoproj.v1alpha1.NotificationsConfiguration"
        kind:
          description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
      x-kubernetes-group-version-kind:
        - group: argoproj.io
          kind: NotificationsConfigurationList
          version: v1alpha1
    io.argoproj.v1alpha1.Rollout:
      type: object
      required:
        - spec
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        spec:
          type: object
          properties:
            analysis:
              type: object
              properties:
                successfulRunHistoryLimit:
                  type: integer
                  format: int32
                unsuccessfulRunHistoryLimit:
                  type: integer
                  format: int32
            minReadySeconds:
              type: integer
              format: int32
            paused:
              type: boolean
            progressDeadlineAbort:
              type: boolean
            progressDeadlineSeconds:
              type: integer
              format: int32
            replicas:
              type: integer
              format: int32
            restartAt:
              type: string
              format: date-time
            revisionHistoryLimit:
              type: integer
              format: int32
            rollbackWindow:
              type: object
              properties:
                revisions:
                  type: integer
                  format: int32
            selector:
              type: object
              properties:
                matchExpressions:
                  type: array
                  items:
                    type: object
                    required:
                      - key
                      - operator
                    properties:
                      key:
                        type: string
                      operator:
                        type: string
                      values:
                        type: array
                        items:
                          type: string
                matchLabels:
                  type: object
                  additionalProperties:
                    type: string
              x-kubernetes-map-type: atomic
            strategy:
              type: object
              properties:
                blueGreen:
                  type: object
                  required:
                    - activeService
                  properties:
                    abortScaleDownDelaySeconds:
                      type: integer
                      format: int32
                    activeMetadata:
                      type: object
                      properties:
                        annotations:
                          type: object
                          additionalProperties:
                            type: string
                        labels:
                          type: object
                          additionalProperties:
                            type: string
                    activeService:
                      type: string
                    antiAffinity:
                      type: object
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          type: object
                          required:
                            - weight
                          properties:
                            weight:
                              type: integer
                              format: int32
                        requiredDuringSchedulingIgnoredDuringExecution:
                          type: object
                    autoPromotionEnabled:
                      type: boolean
                    autoPromotionSeconds:
                      type: integer
                      format: int32
                    maxUnavailable:
                      x-kubernetes-int-or-string: true
                    postPromotionAnalysis:
                      type: object
                      properties:
                        analysisRunMetadata:
                          type: object
                          properties:
                            annotations:
                              type: object
                              additionalProperties:
                                type: string
                            labels:
                              type: object
                              additionalProperties:
                                type: string
                        args:
                          type: array
                          items:
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                              valueFrom:
                                type: object
                                properties:
                                  fieldRef:
                                    type: object
                                    required:
                                      - fieldPath
                                    properties:
                                      fieldPath:
                                        type: string
                                  podTemplateHashValue:
                                    type: string
                        dryRun:
                          type: array
                          items:
                            type: object
                            required:
                              - metricName
                            properties:
                              metricName:
                                type: string
                        measurementRetention:
                          type: array
                          items:
                            type: object
                            required:
                              - limit
                              - metricName
                            properties:
                              limit:
                                type: integer
                                format: int32
                              metricName:
                                type: string
                        templates:
                          type: array
                          items:
                            type: object
                            properties:
                              clusterScope:
                                type: boolean
                              templateName:
                                type: string
                    prePromotionAnalysis:
                      type: object
                      properties:
                        analysisRunMetadata:
                          type: object
                          properties:
                            annotations:
                              type: object
                              additionalProperties:
                                type: string
                            labels:
                              type: object
                              additionalProperties:
                                type: string
                        args:
                          type: array
                          items:
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                              valueFrom:
                                type: object
                                properties:
                                  fieldRef:
                                    type: object
                                    required:
                                      - fieldPath
                                    properties:
                                      fieldPath:
                                        type: string
                                  podTemplateHashValue:
                                    type: string
                        dryRun:
                          type: array
                          items:
                            type: object
                            required:
                              - metricName
                            properties:
                              metricName:
                                type: string
                        measurementRetention:
                          type: array
                          items:
                            type: object
                            required:
                              - limit
                              - metricName
                            properties:
                              limit:
                                type: integer
                                format: int32
                              metricName:
                                type: string
                        templates:
                          type: array
                          items:
                            type: object
                            properties:
                              clusterScope:
                                type: boolean
                              templateName:
                                type: string
                    previewMetadata:
                      type: object
                      properties:
                        annotations:
                          type: object
                          additionalProperties:
                            type: string
                        labels:
                          type: object
                          additionalProperties:
                            type: string
                    previewReplicaCount:
                      type: integer
                      format: int32
                    previewService:
                      type: string
                    scaleDownDelayRevisionLimit:
                      type: integer
                      format: int32
                    scaleDownDelaySeconds:
                      type: integer
                      format: int32
                canary:
                  type: object
                  properties:
                    abortScaleDownDelaySeconds:
                      type: integer
                      format: int32
                    analysis:
                      type: object
                      properties:
                        analysisRunMetadata:
                          type: object
                          properties:
                            annotations:
                              type: object
                              additionalProperties:
                                type: string
                            labels:
                              type: object
                              additionalProperties:
                                type: string
                        args:
                          type: array
                          items:
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                              valueFrom:
                                type: object
                                properties:
                                  fieldRef:
                                    type: object
                                    required:
                                      - fieldPath
                                    properties:
                                      fieldPath:
                                        type: string
                                  podTemplateHashValue:
                                    type: string
                        dryRun:
                          type: array
                          items:
                            type: object
                            required:
                              - metricName
                            properties:
                              metricName:
                                type: string
                        measurementRetention:
                          type: array
                          items:
                            type: object
                            required:
                              - limit
                              - metricName
                            properties:
                              limit:
                                type: integer
                                format: int32
                              metricName:
                                type: string
                        startingStep:
                          type: integer
                          format: int32
                        templates:
                          type: array
                          items:
                            type: object
                            properties:
                              clusterScope:
                                type: boolean
                              templateName:
                                type: string
                    antiAffinity:
                      type: object
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          type: object
                          required:
                            - weight
                          properties:
                            weight:
                              type: integer
                              format: int32
                        requiredDuringSchedulingIgnoredDuringExecution:
                          type: object
                    canaryMetadata:
                      type: object
                      properties:
                        annotations:
                          type: object
                          additionalProperties:
                            type: string
                        labels:
                          type: object
                          additionalProperties:
                            type: string
                    canaryService:
                      type: string
                    dynamicStableScale:
                      type: boolean
                    maxSurge:
                      x-kubernetes-int-or-string: true
                    maxUnavailable:
                      x-kubernetes-int-or-string: true
                    minPodsPerReplicaSet:
                      type: integer
                      format: int32
                    pingPong:
                      type: object
                      required:
                        - pingService
                        - pongService
                      properties:
                        pingService:
                          type: string
                        pongService:
                          type: string
                    scaleDownDelayRevisionLimit:
                      type: integer
                      format: int32
                    scaleDownDelaySeconds:
                      type: integer
                      format: int32
                    stableMetadata:
                      type: object
                      properties:
                        annotations:
                          type: object
                          additionalProperties:
                            type: string
                        labels:
                          type: object
                          additionalProperties:
                            type: string
                    stableService:
                      type: string
                    steps:
                      type: array
                      items:
                        type: object
                        properties:
                          analysis:
                            type: object
                            properties:
                              analysisRunMetadata:
                                type: object
                                properties:
                                  annotations:
                                    type: object
                                    additionalProperties:
                                      type: string
                                  labels:
                                    type: object
                                    additionalProperties:
                                      type: string
                              args:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      type: string
                                    valueFrom:
                                      type: object
                                      properties:
                                        fieldRef:
                                          type: object
                                          required:
                                            - fieldPath
                                          properties:
                                            fieldPath:
                                              type: string
                                        podTemplateHashValue:
                                          type: string
                              dryRun:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - metricName
                                  properties:
                                    metricName:
                                      type: string
                              measurementRetention:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - limit
                                    - metricName
                                  properties:
                                    limit:
                                      type: integer
                                      format: int32
                                    metricName:
                                      type: string
                              templates:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    clusterScope:
                                      type: boolean
                                    templateName:
                                      type: string
                          experiment:
                            type: object
                            required:
                              - templates
                            properties:
                              analyses:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - name
                                    - templateName
                                  properties:
                                    args:
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - name
                                        properties:
                                          name:
                                            type: string
                                          value:
                                            type: string
                                          valueFrom:
                                            type: object
                                            properties:
                                              fieldRef:
                                                type: object
                                                required:
                                                  - fieldPath
                                                properties:
                                                  fieldPath:
                                                    type: string
                                              podTemplateHashValue:
                                                type: string
                                    clusterScope:
                                      type: boolean
                                    name:
                                      type: string
                                    requiredForCompletion:
                                      type: boolean
                                    templateName:
                                      type: string
                              duration:
                                type: string
                              templates:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - name
                                    - specRef
                                  properties:
                                    metadata:
                                      type: object
                                      properties:
                                        annotations:
                                          type: object
                                          additionalProperties:
                                            type: string
                                        labels:
                                          type: object
                                          additionalProperties:
                                            type: string
                                    name:
                                      type: string
                                    replicas:
                                      type: integer
                                      format: int32
                                    selector:
                                      type: object
                                      properties:
                                        matchExpressions:
                                          type: array
                                          items:
                                            type: object
                                            required:
                                              - key
                                              - operator
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                type: array
                                                items:
                                                  type: string
                                        matchLabels:
                                          type: object
                                          additionalProperties:
                                            type: string
                                      x-kubernetes-map-type: atomic
                                    service:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                    specRef:
                                      type: string
                                    weight:
                                      type: integer
                                      format: int32
                          pause:
                            type: object
                            properties:
                              duration:
                                x-kubernetes-int-or-string: true
                          setCanaryScale:
                            type: object
                            properties:
                              matchTrafficWeight:
                                type: boolean
                              replicas:
                                type: integer
                                format: int32
                              weight:
                                type: integer
                                format: int32
                          setHeaderRoute:
                            type: object
                            properties:
                              match:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - headerName
                                    - headerValue
                                  properties:
                                    headerName:
                                      type: string
                                    headerValue:
                                      type: object
                                      properties:
                                        exact:
                                          type: string
                                        prefix:
                                          type: string
                                        regex:
                                          type: string
                              name:
                                type: string
                          setMirrorRoute:
                            type: object
                            required:
                              - name
                            properties:
                              match:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    headers:
                                      type: object
                                      additionalProperties:
                                        type: object
                                        properties:
                                          exact:
                                            type: string
                                          prefix:
                                            type: string
                                          regex:
                                            type: string
                                    method:
                                      type: object
                                      properties:
                                        exact:
                                          type: string
                                        prefix:
                                          type: string
                                        regex:
                                          type: string
                                    path:
                                      type: object
                                      properties:
                                        exact:
                                          type: string
                                        prefix:
                                          type: string
                                        regex:
                                          type: string
                              name:
                                type: string
                              percentage:
                                type: integer
                                format: int32
                          setWeight:
                            type: integer
                            format: int32
                    trafficRouting:
                      type: object
                      properties:
                        alb:
                          type: object
                          required:
                            - servicePort
                          properties:
                            annotationPrefix:
                              type: string
                            ingress:
                              type: string
                            ingresses:
                              type: array
                              items:
                                type: string
                            rootService:
                              type: string
                            servicePort:
                              type: integer
                              format: int32
                            stickinessConfig:
                              type: object
                              required:
                                - durationSeconds
                                - enabled
                              properties:
                                durationSeconds:
                                  type: integer
                                  format: int64
                                enabled:
                                  type: boolean
                        ambassador:
                          type: object
                          required:
                            - mappings
                          properties:
                            mappings:
                              type: array
                              items:
                                type: string
                        apisix:
                          type: object
                          properties:
                            route:
                              type: object
                              required:
                                - name
                              properties:
                                name:
                                  type: string
                                rules:
                                  type: array
                                  items:
                                    type: string
                        appMesh:
                          type: object
                          properties:
                            virtualNodeGroup:
                              type: object
                              required:
                                - canaryVirtualNodeRef
                                - stableVirtualNodeRef
                              properties:
                                canaryVirtualNodeRef:
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    name:
                                      type: string
                                stableVirtualNodeRef:
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    name:
                                      type: string
                            virtualService:
                              type: object
                              required:
                                - name
                              properties:
                                name:
                                  type: string
                                routes:
                                  type: array
                                  items:
                                    type: string
                        istio:
                          type: object
                          properties:
                            destinationRule:
                              type: object
                              required:
                                - canarySubsetName
                                - name
                                - stableSubsetName
                              properties:
                                canarySubsetName:
                                  type: string
                                name:
                                  type: string
                                stableSubsetName:
                                  type: string
                            virtualService:
                              type: object
                              required:
                                - name
                              properties:
                                name:
                                  type: string
                                routes:
                                  type: array
                                  items:
                                    type: string
                                tcpRoutes:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      port:
                                        type: integer
                                        format: int64
                                tlsRoutes:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      port:
                                        type: integer
                                        format: int64
                                      sniHosts:
                                        type: array
                                        items:
                                          type: string
                            virtualServices:
                              type: array
                              items:
                                type: object
                                required:
                                  - name
                                properties:
                                  name:
                                    type: string
                                  routes:
                                    type: array
                                    items:
                                      type: string
                                  tcpRoutes:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        port:
                                          type: integer
                                          format: int64
                                  tlsRoutes:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        port:
                                          type: integer
                                          format: int64
                                        sniHosts:
                                          type: array
                                          items:
                                            type: string
                        managedRoutes:
                          type: array
                          items:
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                type: string
                        nginx:
                          type: object
                          properties:
                            additionalIngressAnnotations:
                              type: object
                              additionalProperties:
                                type: string
                            annotationPrefix:
                              type: string
                            stableIngress:
                              type: string
                            stableIngresses:
                              type: array
                              items:
                                type: string
                        plugins:
                          x-kubernetes-preserve-unknown-fields: true
                        smi:
                          type: object
                          properties:
                            rootService:
                              type: string
                            trafficSplitName:
                              type: string
                        traefik:
                          type: object
                          required:
                            - weightedTraefikServiceName
                          properties:
                            weightedTraefikServiceName:
                              type: string
            template:
              type: object
              properties:
                metadata:
                  type: object
                  properties:
                    annotations:
                      type: object
                      additionalProperties:
                        type: string
                    labels:
                      type: object
                      additionalProperties:
                        type: string
                spec:
                  type: object
                  required:
                    - containers
                  properties:
                    activeDeadlineSeconds:
                      type: integer
                      format: int64
                    affinity:
                      type: object
                      properties:
                        nodeAffinity:
                          type: object
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              type: array
                              items:
                                type: object
                                required:
                                  - preference
                                  - weight
                                properties:
                                  preference:
                                    type: object
                                    properties:
                                      matchExpressions:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - key
                                            - operator
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              type: array
                                              items:
                                                type: string
                                      matchFields:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - key
                                            - operator
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              type: array
                                              items:
                                                type: string
                                    x-kubernetes-map-type: atomic
                                  weight:
                                    type: integer
                                    format: int32
                            requiredDuringSchedulingIgnoredDuringExecution:
                              type: object
                              required:
                                - nodeSelectorTerms
                              properties:
                                nodeSelectorTerms:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      matchExpressions:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - key
                                            - operator
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              type: array
                                              items:
                                                type: string
                                      matchFields:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - key
                                            - operator
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              type: array
                                              items:
                                                type: string
                                    x-kubernetes-map-type: atomic
                              x-kubernetes-map-type: atomic
                        podAffinity:
                          type: object
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              type: array
                              items:
                                type: object
                                required:
                                  - podAffinityTerm
                                  - weight
                                properties:
                                  podAffinityTerm:
                                    type: object
                                    required:
                                      - topologyKey
                                    properties:
                                      labelSelector:
                                        type: object
                                        properties:
                                          matchExpressions:
                                            type: array
                                            items:
                                              type: object
                                              required:
                                                - key
                                                - operator
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  type: array
                                                  items:
                                                    type: string
                                          matchLabels:
                                            type: object
                                            additionalProperties:
                                              type: string
                                        x-kubernetes-map-type: atomic
                                      namespaceSelector:
                                        type: object
                                        properties:
                                          matchExpressions:
                                            type: array
                                            items:
                                              type: object
                                              required:
                                                - key
                                                - operator
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  type: array
                                                  items:
                                                    type: string
                                          matchLabels:
                                            type: object
                                            additionalProperties:
                                              type: string
                                        x-kubernetes-map-type: atomic
                                      namespaces:
                                        type: array
                                        items:
                                          type: string
                                      topologyKey:
                                        type: string
                                  weight:
                                    type: integer
                                    format: int32
                            requiredDuringSchedulingIgnoredDuringExecution:
                              type: array
                              items:
                                type: object
                                required:
                                  - topologyKey
                                properties:
                                  labelSelector:
                                    type: object
                                    properties:
                                      matchExpressions:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - key
                                            - operator
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              type: array
                                              items:
                                                type: string
                                      matchLabels:
                                        type: object
                                        additionalProperties:
                                          type: string
                                    x-kubernetes-map-type: atomic
                                  namespaceSelector:
                                    type: object
                                    properties:
                                      matchExpressions:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - key
                                            - operator
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              type: array
                                              items:
                                                type: string
                                      matchLabels:
                                        type: object
                                        additionalProperties:
                                          type: string
                                    x-kubernetes-map-type: atomic
                                  namespaces:
                                    type: array
                                    items:
                                      type: string
                                  topologyKey:
                                    type: string
                        podAntiAffinity:
                          type: object
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              type: array
                              items:
                                type: object
                                required:
                                  - podAffinityTerm
                                  - weight
                                properties:
                                  podAffinityTerm:
                                    type: object
                                    required:
                                      - topologyKey
                                    properties:
                                      labelSelector:
                                        type: object
                                        properties:
                                          matchExpressions:
                                            type: array
                                            items:
                                              type: object
                                              required:
                                                - key
                                                - operator
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  type: array
                                                  items:
                                                    type: string
                                          matchLabels:
                                            type: object
                                            additionalProperties:
                                              type: string
                                        x-kubernetes-map-type: atomic
                                      namespaceSelector:
                                        type: object
                                        properties:
                                          matchExpressions:
                                            type: array
                                            items:
                                              type: object
                                              required:
                                                - key
                                                - operator
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  type: array
                                                  items:
                                                    type: string
                                          matchLabels:
                                            type: object
                                            additionalProperties:
                                              type: string
                                        x-kubernetes-map-type: atomic
                                      namespaces:
                                        type: array
                                        items:
                                          type: string
                                      topologyKey:
                                        type: string
                                  weight:
                                    type: integer
                                    format: int32
                            requiredDuringSchedulingIgnoredDuringExecution:
                              type: array
                              items:
                                type: object
                                required:
                                  - topologyKey
                                properties:
                                  labelSelector:
                                    type: object
                                    properties:
                                      matchExpressions:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - key
                                            - operator
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              type: array
                                              items:
                                                type: string
                                      matchLabels:
                                        type: object
                                        additionalProperties:
                                          type: string
                                    x-kubernetes-map-type: atomic
                                  namespaceSelector:
                                    type: object
                                    properties:
                                      matchExpressions:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - key
                                            - operator
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              type: array
                                              items:
                                                type: string
                                      matchLabels:
                                        type: object
                                        additionalProperties:
                                          type: string
                                    x-kubernetes-map-type: atomic
                                  namespaces:
                                    type: array
                                    items:
                                      type: string
                                  topologyKey:
                                    type: string
                    automountServiceAccountToken:
                      type: boolean
                    containers:
                      type: array
                      items:
                        type: object
                        required:
                          - name
                        properties:
                          args:
                            type: array
                            items:
                              type: string
                          command:
                            type: array
                            items:
                              type: string
                          env:
                            type: array
                            items:
                              type: object
                              required:
                                - name
                              properties:
                                name:
                                  type: string
                                value:
                                  type: string
                                valueFrom:
                                  type: object
                                  properties:
                                    configMapKeyRef:
                                      type: object
                                      required:
                                        - key
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      type: object
                                      required:
                                        - fieldPath
                                      properties:
                                        apiVersion:
                                          type: string
                                        fieldPath:
                                          type: string
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      type: object
                                      required:
                                        - resource
                                      properties:
                                        containerName:
                                          type: string
                                        divisor:
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          type: string
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      type: object
                                      required:
                                        - key
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      x-kubernetes-map-type: atomic
                          envFrom:
                            type: array
                            items:
                              type: object
                              properties:
                                configMapRef:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  x-kubernetes-map-type: atomic
                                prefix:
                                  type: string
                                secretRef:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  x-kubernetes-map-type: atomic
                          image:
                            type: string
                          imagePullPolicy:
                            type: string
                          lifecycle:
                            type: object
                            properties:
                              postStart:
                                type: object
                                properties:
                                  exec:
                                    type: object
                                    properties:
                                      command:
                                        type: array
                                        items:
                                          type: string
                                  httpGet:
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        type: string
                                      httpHeaders:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              type: string
                                            value:
                                              type: string
                                      path:
                                        type: string
                                      port:
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        type: string
                                  tcpSocket:
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        type: string
                                      port:
                                        x-kubernetes-int-or-string: true
                              preStop:
                                type: object
                                properties:
                                  exec:
                                    type: object
                                    properties:
                                      command:
                                        type: array
                                        items:
                                          type: string
                                  httpGet:
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        type: string
                                      httpHeaders:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              type: string
                                            value:
                                              type: string
                                      path:
                                        type: string
                                      port:
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        type: string
                                  tcpSocket:
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        type: string
                                      port:
                                        x-kubernetes-int-or-string: true
                          livenessProbe:
                            type: object
                            properties:
                              exec:
                                type: object
                                properties:
                                  command:
                                    type: array
                                    items:
                                      type: string
                              failureThreshold:
                                type: integer
                                format: int32
                              grpc:
                                type: object
                                required:
                                  - port
                                properties:
                                  port:
                                    type: integer
                                    format: int32
                                  service:
                                    type: string
                              httpGet:
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    type: string
                                  httpHeaders:
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          type: string
                                        value:
                                          type: string
                                  path:
                                    type: string
                                  port:
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    type: string
                              initialDelaySeconds:
                                type: integer
                                format: int32
                              periodSeconds:
                                type: integer
                                format: int32
                              successThreshold:
                                type: integer
                                format: int32
                              tcpSocket:
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    type: string
                                  port:
                                    x-kubernetes-int-or-string: true
                              terminationGracePeriodSeconds:
                                type: integer
                                format: int64
                              timeoutSeconds:
                                type: integer
                                format: int32
                          name:
                            type: string
                          ports:
                            type: array
                            items:
                              type: object
                              required:
                                - containerPort
                              properties:
                                containerPort:
                                  type: integer
                                  format: int32
                                hostIP:
                                  type: string
                                hostPort:
                                  type: integer
                                  format: int32
                                name:
                                  type: string
                                protocol:
                                  type: string
                            x-kubernetes-list-map-keys:
                              - containerPort
                              - protocol
                            x-kubernetes-list-type: map
                          readinessProbe:
                            type: object
                            properties:
                              exec:
                                type: object
                                properties:
                                  command:
                                    type: array
                                    items:
                                      type: string
                              failureThreshold:
                                type: integer
                                format: int32
                              grpc:
                                type: object
                                required:
                                  - port
                                properties:
                                  port:
                                    type: integer
                                    format: int32
                                  service:
                                    type: string
                              httpGet:
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    type: string
                                  httpHeaders:
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          type: string
                                        value:
                                          type: string
                                  path:
                                    type: string
                                  port:
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    type: string
                              initialDelaySeconds:
                                type: integer
                                format: int32
                              periodSeconds:
                                type: integer
                                format: int32
                              successThreshold:
                                type: integer
                                format: int32
                              tcpSocket:
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    type: string
                                  port:
                                    x-kubernetes-int-or-string: true
                              terminationGracePeriodSeconds:
                                type: integer
                                format: int64
                              timeoutSeconds:
                                type: integer
                                format: int32
                          resources:
                            type: object
                            properties:
                              limits:
                                x-kubernetes-preserve-unknown-fields: true
                              requests:
                                x-kubernetes-preserve-unknown-fields: true
                          securityContext:
                            type: object
                            properties:
                              allowPrivilegeEscalation:
                                type: boolean
                              capabilities:
                                type: object
                                properties:
                                  add:
                                    type: array
                                    items:
                                      type: string
                                  drop:
                                    type: array
                                    items:
                                      type: string
                              privileged:
                                type: boolean
                              procMount:
                                type: string
                              readOnlyRootFilesystem:
                                type: boolean
                              runAsGroup:
                                type: integer
                                format: int64
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                                format: int64
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                required:
                                  - type
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                          startupProbe:
                            type: object
                            properties:
                              exec:
                                type: object
                                properties:
                                  command:
                                    type: array
                                    items:
                                      type: string
                              failureThreshold:
                                type: integer
                                format: int32
                              grpc:
                                type: object
                                required:
                                  - port
                                properties:
                                  port:
                                    type: integer
                                    format: int32
                                  service:
                                    type: string
                              httpGet:
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    type: string
                                  httpHeaders:
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          type: string
                                        value:
                                          type: string
                                  path:
                                    type: string
                                  port:
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    type: string
                              initialDelaySeconds:
                                type: integer
                                format: int32
                              periodSeconds:
                                type: integer
                                format: int32
                              successThreshold:
                                type: integer
                                format: int32
                              tcpSocket:
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    type: string
                                  port:
                                    x-kubernetes-int-or-string: true
                              terminationGracePeriodSeconds:
                                type: integer
                                format: int64
                              timeoutSeconds:
                                type: integer
                                format: int32
                          stdin:
                            type: boolean
                          stdinOnce:
                            type: boolean
                          terminationMessagePath:
                            type: string
                          terminationMessagePolicy:
                            type: string
                          tty:
                            type: boolean
                          volumeDevices:
                            type: array
                            items:
                              type: object
                              required:
                                - devicePath
                                - name
                              properties:
                                devicePath:
                                  type: string
                                name:
                                  type: string
                          volumeMounts:
                            type: array
                            items:
                              type: object
                              required:
                                - mountPath
                                - name
                              properties:
                                mountPath:
                                  type: string
                                mountPropagation:
                                  type: string
                                name:
                                  type: string
                                readOnly:
                                  type: boolean
                                subPath:
                                  type: string
                                subPathExpr:
                                  type: string
                          workingDir:
                            type: string
                    dnsConfig:
                      type: object
                      properties:
                        nameservers:
                          type: array
                          items:
                            type: string
                        options:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                        searches:
                          type: array
                          items:
                            type: string
                    dnsPolicy:
                      type: string
                    enableServiceLinks:
                      type: boolean
                    ephemeralContainers:
                      type: array
                      items:
                        type: object
                        required:
                          - name
                        properties:
                          args:
                            type: array
                            items:
                              type: string
                          command:
                            type: array
                            items:
                              type: string
                          env:
                            type: array
                            items:
                              type: object
                              required:
                                - name
                              properties:
                                name:
                                  type: string
                                value:
                                  type: string
                                valueFrom:
                                  type: object
                                  properties:
                                    configMapKeyRef:
                                      type: object
                                      required:
                                        - key
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      type: object
                                      required:
                                        - fieldPath
                                      properties:
                                        apiVersion:
                                          type: string
                                        fieldPath:
                                          type: string
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      type: object
                                      required:
                                        - resource
                                      properties:
                                        containerName:
                                          type: string
                                        divisor:
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          type: string
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      type: object
                                      required:
                                        - key
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      x-kubernetes-map-type: atomic
                          envFrom:
                            type: array
                            items:
                              type: object
                              properties:
                                configMapRef:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  x-kubernetes-map-type: atomic
                                prefix:
                                  type: string
                                secretRef:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  x-kubernetes-map-type: atomic
                          image:
                            type: string
                          imagePullPolicy:
                            type: string
                          lifecycle:
                            type: object
                            properties:
                              postStart:
                                type: object
                                properties:
                                  exec:
                                    type: object
                                    properties:
                                      command:
                                        type: array
                                        items:
                                          type: string
                                  httpGet:
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        type: string
                                      httpHeaders:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              type: string
                                            value:
                                              type: string
                                      path:
                                        type: string
                                      port:
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        type: string
                                  tcpSocket:
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        type: string
                                      port:
                                        x-kubernetes-int-or-string: true
                              preStop:
                                type: object
                                properties:
                                  exec:
                                    type: object
                                    properties:
                                      command:
                                        type: array
                                        items:
                                          type: string
                                  httpGet:
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        type: string
                                      httpHeaders:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              type: string
                                            value:
                                              type: string
                                      path:
                                        type: string
                                      port:
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        type: string
                                  tcpSocket:
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        type: string
                                      port:
                                        x-kubernetes-int-or-string: true
                          livenessProbe:
                            type: object
                            properties:
                              exec:
                                type: object
                                properties:
                                  command:
                                    type: array
                                    items:
                                      type: string
                              failureThreshold:
                                type: integer
                                format: int32
                              grpc:
                                type: object
                                required:
                                  - port
                                properties:
                                  port:
                                    type: integer
                                    format: int32
                                  service:
                                    type: string
                              httpGet:
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    type: string
                                  httpHeaders:
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          type: string
                                        value:
                                          type: string
                                  path:
                                    type: string
                                  port:
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    type: string
                              initialDelaySeconds:
                                type: integer
                                format: int32
                              periodSeconds:
                                type: integer
                                format: int32
                              successThreshold:
                                type: integer
                                format: int32
                              tcpSocket:
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    type: string
                                  port:
                                    x-kubernetes-int-or-string: true
                              terminationGracePeriodSeconds:
                                type: integer
                                format: int64
                              timeoutSeconds:
                                type: integer
                                format: int32
                          name:
                            type: string
                          ports:
                            type: array
                            items:
                              type: object
                              required:
                                - containerPort
                              properties:
                                containerPort:
                                  type: integer
                                  format: int32
                                hostIP:
                                  type: string
                                hostPort:
                                  type: integer
                                  format: int32
                                name:
                                  type: string
                                protocol:
                                  type: string
                            x-kubernetes-list-map-keys:
                              - containerPort
                              - protocol
                            x-kubernetes-list-type: map
                          readinessProbe:
                            type: object
                            properties:
                              exec:
                                type: object
                                properties:
                                  command:
                                    type: array
                                    items:
                                      type: string
                              failureThreshold:
                                type: integer
                                format: int32
                              grpc:
                                type: object
                                required:
                                  - port
                                properties:
                                  port:
                                    type: integer
                                    format: int32
                                  service:
                                    type: string
                              httpGet:
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    type: string
                                  httpHeaders:
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          type: string
                                        value:
                                          type: string
                                  path:
                                    type: string
                                  port:
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    type: string
                              initialDelaySeconds:
                                type: integer
                                format: int32
                              periodSeconds:
                                type: integer
                                format: int32
                              successThreshold:
                                type: integer
                                format: int32
                              tcpSocket:
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    type: string
                                  port:
                                    x-kubernetes-int-or-string: true
                              terminationGracePeriodSeconds:
                                type: integer
                                format: int64
                              timeoutSeconds:
                                type: integer
                                format: int32
                          resources:
                            type: object
                            properties:
                              limits:
                                x-kubernetes-preserve-unknown-fields: true
                              requests:
                                x-kubernetes-preserve-unknown-fields: true
                          securityContext:
                            type: object
                            properties:
                              allowPrivilegeEscalation:
                                type: boolean
                              capabilities:
                                type: object
                                properties:
                                  add:
                                    type: array
                                    items:
                                      type: string
                                  drop:
                                    type: array
                                    items:
                                      type: string
                              privileged:
                                type: boolean
                              procMount:
                                type: string
                              readOnlyRootFilesystem:
                                type: boolean
                              runAsGroup:
                                type: integer
                                format: int64
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                                format: int64
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                required:
                                  - type
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                          startupProbe:
                            type: object
                            properties:
                              exec:
                                type: object
                                properties:
                                  command:
                                    type: array
                                    items:
                                      type: string
                              failureThreshold:
                                type: integer
                                format: int32
                              grpc:
                                type: object
                                required:
                                  - port
                                properties:
                                  port:
                                    type: integer
                                    format: int32
                                  service:
                                    type: string
                              httpGet:
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    type: string
                                  httpHeaders:
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          type: string
                                        value:
                                          type: string
                                  path:
                                    type: string
                                  port:
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    type: string
                              initialDelaySeconds:
                                type: integer
                                format: int32
                              periodSeconds:
                                type: integer
                                format: int32
                              successThreshold:
                                type: integer
                                format: int32
                              tcpSocket:
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    type: string
                                  port:
                                    x-kubernetes-int-or-string: true
                              terminationGracePeriodSeconds:
                                type: integer
                                format: int64
                              timeoutSeconds:
                                type: integer
                                format: int32
                          stdin:
                            type: boolean
                          stdinOnce:
                            type: boolean
                          targetContainerName:
                            type: string
                          terminationMessagePath:
                            type: string
                          terminationMessagePolicy:
                            type: string
                          tty:
                            type: boolean
                          volumeDevices:
                            type: array
                            items:
                              type: object
                              required:
                                - devicePath
                                - name
                              properties:
                                devicePath:
                                  type: string
                                name:
                                  type: string
                          volumeMounts:
                            type: array
                            items:
                              type: object
                              required:
                                - mountPath
                                - name
                              properties:
                                mountPath:
                                  type: string
                                mountPropagation:
                                  type: string
                                name:
                                  type: string
                                readOnly:
                                  type: boolean
                                subPath:
                                  type: string
                                subPathExpr:
                                  type: string
                          workingDir:
                            type: string
                    hostAliases:
                      type: array
                      items:
                        type: object
                        properties:
                          hostnames:
                            type: array
                            items:
                              type: string
                          ip:
                            type: string
                    hostIPC:
                      type: boolean
                    hostNetwork:
                      type: boolean
                    hostPID:
                      type: boolean
                    hostUsers:
                      type: boolean
                    hostname:
                      type: string
                    imagePullSecrets:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                        x-kubernetes-map-type: atomic
                    initContainers:
                      type: array
                      items:
                        type: object
                        required:
                          - name
                        properties:
                          args:
                            type: array
                            items:
                              type: string
                          command:
                            type: array
                            items:
                              type: string
                          env:
                            type: array
                            items:
                              type: object
                              required:
                                - name
                              properties:
                                name:
                                  type: string
                                value:
                                  type: string
                                valueFrom:
                                  type: object
                                  properties:
                                    configMapKeyRef:
                                      type: object
                                      required:
                                        - key
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      type: object
                                      required:
                                        - fieldPath
                                      properties:
                                        apiVersion:
                                          type: string
                                        fieldPath:
                                          type: string
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      type: object
                                      required:
                                        - resource
                                      properties:
                                        containerName:
                                          type: string
                                        divisor:
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          type: string
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      type: object
                                      required:
                                        - key
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                        optional:
                                          type: boolean
                                      x-kubernetes-map-type: atomic
                          envFrom:
                            type: array
                            items:
                              type: object
                              properties:
                                configMapRef:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  x-kubernetes-map-type: atomic
                                prefix:
                                  type: string
                                secretRef:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    optional:
                                      type: boolean
                                  x-kubernetes-map-type: atomic
                          image:
                            type: string
                          imagePullPolicy:
                            type: string
                          lifecycle:
                            type: object
                            properties:
                              postStart:
                                type: object
                                properties:
                                  exec:
                                    type: object
                                    properties:
                                      command:
                                        type: array
                                        items:
                                          type: string
                                  httpGet:
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        type: string
                                      httpHeaders:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              type: string
                                            value:
                                              type: string
                                      path:
                                        type: string
                                      port:
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        type: string
                                  tcpSocket:
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        type: string
                                      port:
                                        x-kubernetes-int-or-string: true
                              preStop:
                                type: object
                                properties:
                                  exec:
                                    type: object
                                    properties:
                                      command:
                                        type: array
                                        items:
                                          type: string
                                  httpGet:
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        type: string
                                      httpHeaders:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              type: string
                                            value:
                                              type: string
                                      path:
                                        type: string
                                      port:
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        type: string
                                  tcpSocket:
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        type: string
                                      port:
                                        x-kubernetes-int-or-string: true
                          livenessProbe:
                            type: object
                            properties:
                              exec:
                                type: object
                                properties:
                                  command:
                                    type: array
                                    items:
                                      type: string
                              failureThreshold:
                                type: integer
                                format: int32
                              grpc:
                                type: object
                                required:
                                  - port
                                properties:
                                  port:
                                    type: integer
                                    format: int32
                                  service:
                                    type: string
                              httpGet:
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    type: string
                                  httpHeaders:
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          type: string
                                        value:
                                          type: string
                                  path:
                                    type: string
                                  port:
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    type: string
                              initialDelaySeconds:
                                type: integer
                                format: int32
                              periodSeconds:
                                type: integer
                                format: int32
                              successThreshold:
                                type: integer
                                format: int32
                              tcpSocket:
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    type: string
                                  port:
                                    x-kubernetes-int-or-string: true
                              terminationGracePeriodSeconds:
                                type: integer
                                format: int64
                              timeoutSeconds:
                                type: integer
                                format: int32
                          name:
                            type: string
                          ports:
                            type: array
                            items:
                              type: object
                              required:
                                - containerPort
                              properties:
                                containerPort:
                                  type: integer
                                  format: int32
                                hostIP:
                                  type: string
                                hostPort:
                                  type: integer
                                  format: int32
                                name:
                                  type: string
                                protocol:
                                  type: string
                            x-kubernetes-list-map-keys:
                              - containerPort
                              - protocol
                            x-kubernetes-list-type: map
                          readinessProbe:
                            type: object
                            properties:
                              exec:
                                type: object
                                properties:
                                  command:
                                    type: array
                                    items:
                                      type: string
                              failureThreshold:
                                type: integer
                                format: int32
                              grpc:
                                type: object
                                required:
                                  - port
                                properties:
                                  port:
                                    type: integer
                                    format: int32
                                  service:
                                    type: string
                              httpGet:
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    type: string
                                  httpHeaders:
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          type: string
                                        value:
                                          type: string
                                  path:
                                    type: string
                                  port:
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    type: string
                              initialDelaySeconds:
                                type: integer
                                format: int32
                              periodSeconds:
                                type: integer
                                format: int32
                              successThreshold:
                                type: integer
                                format: int32
                              tcpSocket:
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    type: string
                                  port:
                                    x-kubernetes-int-or-string: true
                              terminationGracePeriodSeconds:
                                type: integer
                                format: int64
                              timeoutSeconds:
                                type: integer
                                format: int32
                          resources:
                            type: object
                            properties:
                              limits:
                                x-kubernetes-preserve-unknown-fields: true
                              requests:
                                x-kubernetes-preserve-unknown-fields: true
                          securityContext:
                            type: object
                            properties:
                              allowPrivilegeEscalation:
                                type: boolean
                              capabilities:
                                type: object
                                properties:
                                  add:
                                    type: array
                                    items:
                                      type: string
                                  drop:
                                    type: array
                                    items:
                                      type: string
                              privileged:
                                type: boolean
                              procMount:
                                type: string
                              readOnlyRootFilesystem:
                                type: boolean
                              runAsGroup:
                                type: integer
                                format: int64
                              runAsNonRoot:
                                type: boolean
                              runAsUser:
                                type: integer
                                format: int64
                              seLinuxOptions:
                                type: object
                                properties:
                                  level:
                                    type: string
                                  role:
                                    type: string
                                  type:
                                    type: string
                                  user:
                                    type: string
                              seccompProfile:
                                type: object
                                required:
                                  - type
                                properties:
                                  localhostProfile:
                                    type: string
                                  type:
                                    type: string
                              windowsOptions:
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    type: string
                                  gmsaCredentialSpecName:
                                    type: string
                                  hostProcess:
                                    type: boolean
                                  runAsUserName:
                                    type: string
                          startupProbe:
                            type: object
                            properties:
                              exec:
                                type: object
                                properties:
                                  command:
                                    type: array
                                    items:
                                      type: string
                              failureThreshold:
                                type: integer
                                format: int32
                              grpc:
                                type: object
                                required:
                                  - port
                                properties:
                                  port:
                                    type: integer
                                    format: int32
                                  service:
                                    type: string
                              httpGet:
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    type: string
                                  httpHeaders:
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          type: string
                                        value:
                                          type: string
                                  path:
                                    type: string
                                  port:
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    type: string
                              initialDelaySeconds:
                                type: integer
                                format: int32
                              periodSeconds:
                                type: integer
                                format: int32
                              successThreshold:
                                type: integer
                                format: int32
                              tcpSocket:
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    type: string
                                  port:
                                    x-kubernetes-int-or-string: true
                              terminationGracePeriodSeconds:
                                type: integer
                                format: int64
                              timeoutSeconds:
                                type: integer
                                format: int32
                          stdin:
                            type: boolean
                          stdinOnce:
                            type: boolean
                          terminationMessagePath:
                            type: string
                          terminationMessagePolicy:
                            type: string
                          tty:
                            type: boolean
                          volumeDevices:
                            type: array
                            items:
                              type: object
                              required:
                                - devicePath
                                - name
                              properties:
                                devicePath:
                                  type: string
                                name:
                                  type: string
                          volumeMounts:
                            type: array
                            items:
                              type: object
                              required:
                                - mountPath
                                - name
                              properties:
                                mountPath:
                                  type: string
                                mountPropagation:
                                  type: string
                                name:
                                  type: string
                                readOnly:
                                  type: boolean
                                subPath:
                                  type: string
                                subPathExpr:
                                  type: string
                          workingDir:
                            type: string
                    nodeName:
                      type: string
                    nodeSelector:
                      type: object
                      additionalProperties:
                        type: string
                      x-kubernetes-map-type: atomic
                    os:
                      type: object
                      required:
                        - name
                      properties:
                        name:
                          type: string
                    overhead:
                      type: object
                      additionalProperties:
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    preemptionPolicy:
                      type: string
                    priority:
                      type: integer
                      format: int32
                    priorityClassName:
                      type: string
                    readinessGates:
                      type: array
                      items:
                        type: object
                        required:
                          - conditionType
                        properties:
                          conditionType:
                            type: string
                    restartPolicy:
                      type: string
                    runtimeClassName:
                      type: string
                    schedulerName:
                      type: string
                    securityContext:
                      type: object
                      properties:
                        fsGroup:
                          type: integer
                          format: int64
                        fsGroupChangePolicy:
                          type: string
                        runAsGroup:
                          type: integer
                          format: int64
                        runAsNonRoot:
                          type: boolean
                        runAsUser:
                          type: integer
                          format: int64
                        seLinuxOptions:
                          type: object
                          properties:
                            level:
                              type: string
                            role:
                              type: string
                            type:
                              type: string
                            user:
                              type: string
                        seccompProfile:
                          type: object
                          required:
                            - type
                          properties:
                            localhostProfile:
                              type: string
                            type:
                              type: string
                        supplementalGroups:
                          type: array
                          items:
                            type: integer
                            format: int64
                        sysctls:
                          type: array
                          items:
                            type: object
                            required:
                              - name
                              - value
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                        windowsOptions:
                          type: object
                          properties:
                            gmsaCredentialSpec:
                              type: string
                            gmsaCredentialSpecName:
                              type: string
                            hostProcess:
                              type: boolean
                            runAsUserName:
                              type: string
                    serviceAccount:
                      type: string
                    serviceAccountName:
                      type: string
                    setHostnameAsFQDN:
                      type: boolean
                    shareProcessNamespace:
                      type: boolean
                    subdomain:
                      type: string
                    terminationGracePeriodSeconds:
                      type: integer
                      format: int64
                    tolerations:
                      type: array
                      items:
                        type: object
                        properties:
                          effect:
                            type: string
                          key:
                            type: string
                          operator:
                            type: string
                          tolerationSeconds:
                            type: integer
                            format: int64
                          value:
                            type: string
                    topologySpreadConstraints:
                      type: array
                      items:
                        type: object
                        required:
                          - maxSkew
                          - topologyKey
                          - whenUnsatisfiable
                        properties:
                          labelSelector:
                            type: object
                            properties:
                              matchExpressions:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - key
                                    - operator
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      type: array
                                      items:
                                        type: string
                              matchLabels:
                                type: object
                                additionalProperties:
                                  type: string
                            x-kubernetes-map-type: atomic
                          matchLabelKeys:
                            type: array
                            items:
                              type: string
                            x-kubernetes-list-type: atomic
                          maxSkew:
                            type: integer
                            format: int32
                          minDomains:
                            type: integer
                            format: int32
                          nodeAffinityPolicy:
                            type: string
                          nodeTaintsPolicy:
                            type: string
                          topologyKey:
                            type: string
                          whenUnsatisfiable:
                            type: string
                      x-kubernetes-list-map-keys:
                        - topologyKey
                        - whenUnsatisfiable
                      x-kubernetes-list-type: map
                    volumes:
                      type: array
                      items:
                        x-kubernetes-preserve-unknown-fields: true
            workloadRef:
              type: object
              properties:
                apiVersion:
                  type: string
                kind:
                  type: string
                name:
                  type: string
        status:
          type: object
          properties:
            HPAReplicas:
              type: integer
              format: int32
            abort:
              type: boolean
            abortedAt:
              type: string
              format: date-time
            alb:
              type: object
              properties:
                canaryTargetGroup:
                  type: object
                  required:
                    - arn
                    - name
                  properties:
                    arn:
                      type: string
                    fullName:
                      type: string
                    name:
                      type: string
                ingress:
                  type: string
                loadBalancer:
                  type: object
                  required:
                    - arn
                    - name
                  properties:
                    arn:
                      type: string
                    fullName:
                      type: string
                    name:
                      type: string
                stableTargetGroup:
                  type: object
                  required:
                    - arn
                    - name
                  properties:
                    arn:
                      type: string
                    fullName:
                      type: string
                    name:
                      type: string
            albs:
              type: array
              items:
                type: object
                properties:
                  canaryTargetGroup:
                    type: object
                    required:
                      - arn
                      - name
                    properties:
                      arn:
                        type: string
                      fullName:
                        type: string
                      name:
                        type: string
                  ingress:
                    type: string
                  loadBalancer:
                    type: object
                    required:
                      - arn
                      - name
                    properties:
                      arn:
                        type: string
                      fullName:
                        type: string
                      name:
                        type: string
                  stableTargetGroup:
                    type: object
                    required:
                      - arn
                      - name
                    properties:
                      arn:
                        type: string
                      fullName:
                        type: string
                      name:
                        type: string
            availableReplicas:
              type: integer
              format: int32
            blueGreen:
              type: object
              properties:
                activeSelector:
                  type: string
                postPromotionAnalysisRunStatus:
                  type: object
                  required:
                    - name
                    - status
                  properties:
                    message:
                      type: string
                    name:
                      type: string
                    status:
                      type: string
                prePromotionAnalysisRunStatus:
                  type: object
                  required:
                    - name
                    - status
                  properties:
                    message:
                      type: string
                    name:
                      type: string
                    status:
                      type: string
                previewSelector:
                  type: string
                scaleUpPreviewCheckPoint:
                  type: boolean
            canary:
              type: object
              properties:
                currentBackgroundAnalysisRunStatus:
                  type: object
                  required:
                    - name
                    - status
                  properties:
                    message:
                      type: string
                    name:
                      type: string
                    status:
                      type: string
                currentExperiment:
                  type: string
                currentStepAnalysisRunStatus:
                  type: object
                  required:
                    - name
                    - status
                  properties:
                    message:
                      type: string
                    name:
                      type: string
                    status:
                      type: string
                stablePingPong:
                  type: string
                weights:
                  type: object
                  required:
                    - canary
                    - stable
                  properties:
                    additional:
                      type: array
                      items:
                        type: object
                        required:
                          - weight
                        properties:
                          podTemplateHash:
                            type: string
                          serviceName:
                            type: string
                          weight:
                            type: integer
                            format: int32
                    canary:
                      type: object
                      required:
                        - weight
                      properties:
                        podTemplateHash:
                          type: string
                        serviceName:
                          type: string
                        weight:
                          type: integer
                          format: int32
                    stable:
                      type: object
                      required:
                        - weight
                      properties:
                        podTemplateHash:
                          type: string
                        serviceName:
                          type: string
                        weight:
                          type: integer
                          format: int32
                    verified:
                      type: boolean
            collisionCount:
              type: integer
              format: int32
            conditions:
              type: array
              items:
                type: object
                required:
                  - lastTransitionTime
                  - lastUpdateTime
                  - message
                  - reason
                  - status
                  - type
                properties:
                  lastTransitionTime:
                    type: string
                    format: date-time
                  lastUpdateTime:
                    type: string
                    format: date-time
                  message:
                    type: string
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
            controllerPause:
              type: boolean
            currentPodHash:
              type: string
            currentStepHash:
              type: string
            currentStepIndex:
              type: integer
              format: int32
            message:
              type: string
            observedGeneration:
              type: string
            pauseConditions:
              type: array
              items:
                type: object
                required:
                  - reason
                  - startTime
                properties:
                  reason:
                    type: string
                  startTime:
                    type: string
                    format: date-time
            phase:
              type: string
            promoteFull:
              type: boolean
            readyReplicas:
              type: integer
              format: int32
            replicas:
              type: integer
              format: int32
            restartedAt:
              type: string
              format: date-time
            selector:
              type: string
            stableRS:
              type: string
            updatedReplicas:
              type: integer
              format: int32
            workloadObservedGeneration:
              type: string
      x-kubernetes-group-version-kind:
        - group: argoproj.io
          kind: Rollout
          version: v1alpha1
    io.argoproj.v1alpha1.RolloutList:
      description: RolloutList is a list of Rollout
      type: object
      required:
        - items
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          description: "List of rollouts. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md"
          type: array
          items:
            $ref: "#/components/schemas/io.argoproj.v1alpha1.Rollout"
        kind:
          description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
      x-kubernetes-group-version-kind:
        - group: argoproj.io
          kind: RolloutList
          version: v1alpha1
    io.argoproj.v1alpha1.RolloutManager:
      description: RolloutManager is the Schema for the RolloutManagers API
      type: object
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        spec:
          description: RolloutManagerSpec defines the desired state of Argo Rollouts
          type: object
          properties:
            additionalMetadata:
              description: Metadata to apply to the generated resources
              type: object
              properties:
                annotations:
                  description: Annotations to add to the resources during its creation.
                  type: object
                  additionalProperties:
                    type: string
                labels:
                  description: Labels to add to the resources during its creation.
                  type: object
                  additionalProperties:
                    type: string
            env:
              description: Env lets you specify environment for Rollouts pods
              type: array
              items:
                description: EnvVar represents an environment variable present in a Container.
                type: object
                required:
                  - name
                properties:
                  name:
                    description: Name of the environment variable. Must be a C_IDENTIFIER.
                    type: string
                  value:
                    description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                    type: string
                  valueFrom:
                    description: Source for the environment variable's value. Cannot be used if value is not empty.
                    type: object
                    properties:
                      configMapKeyRef:
                        description: Selects a key of a ConfigMap.
                        type: object
                        required:
                          - key
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key must be defined
                            type: boolean
                        x-kubernetes-map-type: atomic
                      fieldRef:
                        description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                        type: object
                        required:
                          - fieldPath
                        properties:
                          apiVersion:
                            description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                            type: string
                          fieldPath:
                            description: Path of the field to select in the specified API version.
                            type: string
                        x-kubernetes-map-type: atomic
                      resourceFieldRef:
                        description: "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                        type: object
                        required:
                          - resource
                        properties:
                          containerName:
                            description: "Container name: required for volumes, optional for env vars"
                            type: string
                          divisor:
                            description: Specifies the output format of the exposed resources, defaults to "1"
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          resource:
                            description: "Required: resource to select"
                            type: string
                        x-kubernetes-map-type: atomic
                      secretKeyRef:
                        description: Selects a key of a secret in the pod's namespace
                        type: object
                        required:
                          - key
                        properties:
                          key:
                            description: The key of the secret to select from.  Must be a valid secret key.
                            type: string
                          name:
                            description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must be defined
                            type: boolean
                        x-kubernetes-map-type: atomic
            extraCommandArgs:
              description: Extra Command arguments that would append to the Rollouts ExtraCommandArgs will not be added, if one of these commands is already part of the Rollouts command with same or different value.
              type: array
              items:
                type: string
            image:
              description: Image defines Argo Rollouts controller image (optional)
              type: string
            namespaceScoped:
              description: NamespaceScoped lets you specify if RolloutManager has to watch a namespace or the whole cluster
              type: boolean
            nodePlacement:
              description: NodePlacement defines NodeSelectors and Taints for Rollouts workloads
              type: object
              properties:
                nodeSelector:
                  description: NodeSelector is a field of PodSpec, it is a map of key value pairs used for node selection
                  type: object
                  additionalProperties:
                    type: string
                tolerations:
                  description: Tolerations allow the pods to schedule onto nodes with matching taints
                  type: array
                  items:
                    description: The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                    type: object
                    properties:
                      effect:
                        description: Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                        type: string
                      operator:
                        description: Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                        type: string
                      tolerationSeconds:
                        description: TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                        type: integer
                        format: int64
                      value:
                        description: Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                        type: string
            version:
              description: Version defines Argo Rollouts controller tag (optional)
              type: string
        status:
          description: RolloutManagerStatus defines the observed state of RolloutManager
          type: object
          properties:
            conditions:
              description: Conditions is an array of the RolloutManager's status conditions
              type: array
              items:
                description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                type: object
                required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                properties:
                  lastTransitionTime:
                    description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                    type: string
                    format: date-time
                  message:
                    description: message is a human readable message indicating details about the transition. This may be an empty string.
                    type: string
                    maxLength: 32768
                  observedGeneration:
                    description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                    type: integer
                    format: int64
                    minimum: 0
                  reason:
                    description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                    type: string
                    maxLength: 1024
                    minLength: 1
                    pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                  status:
                    description: status of the condition, one of True, False, Unknown.
                    type: string
                    enum:
                      - "True"
                      - "False"
                      - Unknown
                  type:
                    description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                    type: string
                    maxLength: 316
                    pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
            phase:
              description: "Phase is a simple, high-level summary of where the RolloutManager is in its lifecycle. There are three possible phase values: Pending: The RolloutManager has been accepted by the Kubernetes system, but one or more of the required resources have not been created. Available: All of the resources for the RolloutManager are ready. Unknown: The state of the RolloutManager phase could not be obtained."
              type: string
            rolloutController:
              description: "RolloutController is a simple, high-level summary of where the RolloutController component is in its lifecycle. There are three possible RolloutController values: Pending: The RolloutController component has been accepted by the Kubernetes system, but one or more of the required resources have not been created. Running: All of the required Pods for the RolloutController component are in a Ready state. Unknown: The state of the RolloutController component could not be obtained."
              type: string
      x-kubernetes-group-version-kind:
        - group: argoproj.io
          kind: RolloutManager
          version: v1alpha1
    io.argoproj.v1alpha1.RolloutManagerList:
      description: RolloutManagerList is a list of RolloutManager
      type: object
      required:
        - items
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          description: "List of rolloutmanagers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md"
          type: array
          items:
            $ref: "#/components/schemas/io.argoproj.v1alpha1.RolloutManager"
        kind:
          description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
      x-kubernetes-group-version-kind:
        - group: argoproj.io
          kind: RolloutManagerList
          version: v1alpha1
    io.argoproj.v1beta1.ArgoCD:
      description: ArgoCD is the Schema for the argocds API
      type: object
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        spec:
          description: ArgoCDSpec defines the desired state of ArgoCD
          type: object
          properties:
            applicationInstanceLabelKey:
              description: ApplicationInstanceLabelKey is the key name where Argo CD injects the app name as a tracking label.
              type: string
            applicationSet:
              description: ArgoCDApplicationSet defines whether the Argo CD ApplicationSet controller should be installed.
              type: object
              properties:
                enabled:
                  description: Enabled is the flag to enable the Application Set Controller during ArgoCD installation. (optional, default `true`)
                  type: boolean
                env:
                  description: Env lets you specify environment for applicationSet controller pods
                  type: array
                  items:
                    description: EnvVar represents an environment variable present in a Container.
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value. Cannot be used if value is not empty.
                        type: object
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            type: object
                            required:
                              - key
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its key must be defined
                                type: boolean
                          fieldRef:
                            description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                            type: object
                            required:
                              - fieldPath
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified API version.
                                type: string
                          resourceFieldRef:
                            description: "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                            type: object
                            required:
                              - resource
                            properties:
                              containerName:
                                description: "Container name: required for volumes, optional for env vars"
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed resources, defaults to "1"
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              resource:
                                description: "Required: resource to select"
                                type: string
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            type: object
                            required:
                              - key
                            properties:
                              key:
                                description: The key of the secret to select from.  Must be a valid secret key.
                                type: string
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                type: string
                              optional:
                                description: Specify whether the Secret or its key must be defined
                                type: boolean
                extraCommandArgs:
                  description: ExtraCommandArgs allows users to pass command line arguments to ApplicationSet controller. They get added to default command line arguments provided by the operator. Please note that the command line arguments provided as part of ExtraCommandArgs will not overwrite the default command line arguments.
                  type: array
                  items:
                    type: string
                image:
                  description: Image is the Argo CD ApplicationSet image (optional)
                  type: string
                logLevel:
                  description: LogLevel describes the log level that should be used by the ApplicationSet controller. Defaults to ArgoCDDefaultLogLevel if not set.  Valid options are debug,info, error, and warn.
                  type: string
                resources:
                  description: Resources defines the Compute Resources required by the container for ApplicationSet.
                  type: object
                  properties:
                    claims:
                      description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers."
                      type: array
                      items:
                        description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                            type: string
                      x-kubernetes-list-map-keys:
                        - name
                      x-kubernetes-list-type: map
                    limits:
                      description: "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: object
                      additionalProperties:
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    requests:
                      description: "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: object
                      additionalProperties:
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                scmProviders:
                  description: SCMProviders defines the list of allowed custom SCM provider API URLs
                  type: array
                  items:
                    type: string
                scmRootCAConfigMap:
                  description: SCMRootCAConfigMap is the name of the config map that stores the Gitlab SCM Provider's TLS certificate which will be mounted on the ApplicationSet Controller (optional).
                  type: string
                sourceNamespaces:
                  description: SourceNamespaces defines the namespaces applicationset resources are allowed to be created in
                  type: array
                  items:
                    type: string
                version:
                  description: Version is the Argo CD ApplicationSet image tag. (optional)
                  type: string
                webhookServer:
                  description: WebhookServerSpec defines the options for the ApplicationSet Webhook Server component.
                  type: object
                  properties:
                    host:
                      description: Host is the hostname to use for Ingress/Route resources.
                      type: string
                    ingress:
                      description: Ingress defines the desired state for an Ingress for the Application set webhook component.
                      type: object
                      required:
                        - enabled
                      properties:
                        annotations:
                          description: Annotations is the map of annotations to apply to the Ingress.
                          type: object
                          additionalProperties:
                            type: string
                        enabled:
                          description: Enabled will toggle the creation of the Ingress.
                          type: boolean
                        ingressClassName:
                          description: IngressClassName for the Ingress resource.
                          type: string
                        path:
                          description: Path used for the Ingress resource.
                          type: string
                        tls:
                          description: TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.
                          type: array
                          items:
                            description: IngressTLS describes the transport layer security associated with an ingress.
                            type: object
                            properties:
                              hosts:
                                description: hosts is a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.
                                type: array
                                items:
                                  type: string
                                x-kubernetes-list-type: atomic
                              secretName:
                                description: secretName is the name of the secret used to terminate TLS traffic on port 443. Field is left optional to allow TLS routing based on SNI hostname alone. If the SNI host in a listener conflicts with the "Host" header field used by an IngressRule, the SNI host is used for termination and value of the "Host" header is used for routing.
                                type: string
                    route:
                      description: Route defines the desired state for an OpenShift Route for the Application set webhook component.
                      type: object
                      required:
                        - enabled
                      properties:
                        annotations:
                          description: Annotations is the map of annotations to use for the Route resource.
                          type: object
                          additionalProperties:
                            type: string
                        enabled:
                          description: Enabled will toggle the creation of the OpenShift Route.
                          type: boolean
                        labels:
                          description: Labels is the map of labels to use for the Route resource
                          type: object
                          additionalProperties:
                            type: string
                        path:
                          description: Path the router watches for, to route traffic for to the service.
                          type: string
                        tls:
                          description: TLS provides the ability to configure certificates and termination for the Route.
                          type: object
                          required:
                            - termination
                          properties:
                            caCertificate:
                              description: caCertificate provides the cert authority certificate contents
                              type: string
                            certificate:
                              description: certificate provides certificate contents
                              type: string
                            destinationCACertificate:
                              description: destinationCACertificate provides the contents of the ca certificate of the final destination.  When using reencrypt termination this file should be provided in order to have routers use it for health checks on the secure connection. If this field is not specified, the router may provide its own destination CA and perform hostname validation using the short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically verify.
                              type: string
                            insecureEdgeTerminationPolicy:
                              description: "insecureEdgeTerminationPolicy indicates the desired behavior for insecure connections to a route. While each router may make its own decisions on which ports to expose, this is normally port 80. \n * Allow - traffic is sent to the server on the insecure port (default) * Disable - no traffic is allowed on the insecure port. * Redirect - clients are redirected to the secure port."
                              type: string
                            key:
                              description: key provides key file contents
                              type: string
                            termination:
                              description: termination indicates termination type.
                              type: string
                        wildcardPolicy:
                          description: WildcardPolicy if any for the route. Currently only 'Subdomain' or 'None' is allowed.
                          type: string
            banner:
              description: Banner defines an additional banner to be displayed in Argo CD UI
              type: object
              required:
                - content
              properties:
                content:
                  description: Content defines the banner message content to display
                  type: string
                url:
                  description: URL defines an optional URL to be used as banner message link
                  type: string
            configManagementPlugins:
              description: ConfigManagementPlugins is used to specify additional config management plugins.
              type: string
            controller:
              description: Controller defines the Application Controller options for ArgoCD.
              type: object
              properties:
                appSync:
                  description: "AppSync is used to control the sync frequency, by default the ArgoCD controller polls Git every 3m. \n Set this to a duration, e.g. 10m or 600s to control the synchronisation frequency."
                  type: string
                enabled:
                  description: Enabled is the flag to enable the Application Controller during ArgoCD installation. (optional, default `true`)
                  type: boolean
                env:
                  description: Env lets you specify environment for application controller pods
                  type: array
                  items:
                    description: EnvVar represents an environment variable present in a Container.
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value. Cannot be used if value is not empty.
                        type: object
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            type: object
                            required:
                              - key
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its key must be defined
                                type: boolean
                          fieldRef:
                            description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                            type: object
                            required:
                              - fieldPath
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified API version.
                                type: string
                          resourceFieldRef:
                            description: "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                            type: object
                            required:
                              - resource
                            properties:
                              containerName:
                                description: "Container name: required for volumes, optional for env vars"
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed resources, defaults to "1"
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              resource:
                                description: "Required: resource to select"
                                type: string
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            type: object
                            required:
                              - key
                            properties:
                              key:
                                description: The key of the secret to select from.  Must be a valid secret key.
                                type: string
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                type: string
                              optional:
                                description: Specify whether the Secret or its key must be defined
                                type: boolean
                logFormat:
                  description: LogFormat refers to the log format used by the Application Controller component. Defaults to ArgoCDDefaultLogFormat if not configured. Valid options are text or json.
                  type: string
                logLevel:
                  description: LogLevel refers to the log level used by the Application Controller component. Defaults to ArgoCDDefaultLogLevel if not configured. Valid options are debug, info, error, and warn.
                  type: string
                parallelismLimit:
                  description: ParallelismLimit defines the limit for parallel kubectl operations
                  type: integer
                  format: int32
                processors:
                  description: Processors contains the options for the Application Controller processors.
                  type: object
                  properties:
                    operation:
                      description: Operation is the number of application operation processors.
                      type: integer
                      format: int32
                    status:
                      description: Status is the number of application status processors.
                      type: integer
                      format: int32
                resources:
                  description: Resources defines the Compute Resources required by the container for the Application Controller.
                  type: object
                  properties:
                    claims:
                      description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers."
                      type: array
                      items:
                        description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                            type: string
                      x-kubernetes-list-map-keys:
                        - name
                      x-kubernetes-list-type: map
                    limits:
                      description: "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: object
                      additionalProperties:
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    requests:
                      description: "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: object
                      additionalProperties:
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                sharding:
                  description: Sharding contains the options for the Application Controller sharding configuration.
                  type: object
                  properties:
                    clustersPerShard:
                      description: ClustersPerShard defines the maximum number of clusters managed by each argocd shard
                      type: integer
                      format: int32
                      minimum: 1
                    dynamicScalingEnabled:
                      description: DynamicScalingEnabled defines whether dynamic scaling should be enabled for Application Controller component
                      type: boolean
                    enabled:
                      description: Enabled defines whether sharding should be enabled on the Application Controller component.
                      type: boolean
                    maxShards:
                      description: MaxShards defines the maximum number of shards at any given point
                      type: integer
                      format: int32
                    minShards:
                      description: MinShards defines the minimum number of shards at any given point
                      type: integer
                      format: int32
                      minimum: 1
                    replicas:
                      description: Replicas defines the number of replicas to run in the Application controller shard.
                      type: integer
                      format: int32
            defaultClusterScopedRoleDisabled:
              description: DefaultClusterScopedRoleDisabled will disable creation of default ClusterRoles for a cluster scoped instance.
              type: boolean
            disableAdmin:
              description: DisableAdmin will disable the admin user.
              type: boolean
            extraConfig:
              description: "ExtraConfig can be used to add fields to Argo CD configmap that are not supported by Argo CD CRD. \n Note: ExtraConfig takes precedence over Argo CD CRD. For example, A user sets `argocd.Spec.DisableAdmin` = true and also `a.Spec.ExtraConfig[\"admin.enabled\"]` = true. In this case, operator updates Argo CD Configmap as follows -> argocd-cm.Data[\"admin.enabled\"] = true."
              type: object
              additionalProperties:
                type: string
            gaAnonymizeUsers:
              description: GAAnonymizeUsers toggles user IDs being hashed before sending to google analytics.
              type: boolean
            gaTrackingID:
              description: GATrackingID is the google analytics tracking ID to use.
              type: string
            grafana:
              description: "Deprecated: Grafana defines the Grafana server options for ArgoCD."
              type: object
              required:
                - enabled
              properties:
                enabled:
                  description: Enabled will toggle Grafana support globally for ArgoCD.
                  type: boolean
                host:
                  description: Host is the hostname to use for Ingress/Route resources.
                  type: string
                image:
                  description: Image is the Grafana container image.
                  type: string
                ingress:
                  description: Ingress defines the desired state for an Ingress for the Grafana component.
                  type: object
                  required:
                    - enabled
                  properties:
                    annotations:
                      description: Annotations is the map of annotations to apply to the Ingress.
                      type: object
                      additionalProperties:
                        type: string
                    enabled:
                      description: Enabled will toggle the creation of the Ingress.
                      type: boolean
                    ingressClassName:
                      description: IngressClassName for the Ingress resource.
                      type: string
                    path:
                      description: Path used for the Ingress resource.
                      type: string
                    tls:
                      description: TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.
                      type: array
                      items:
                        description: IngressTLS describes the transport layer security associated with an ingress.
                        type: object
                        properties:
                          hosts:
                            description: hosts is a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.
                            type: array
                            items:
                              type: string
                            x-kubernetes-list-type: atomic
                          secretName:
                            description: secretName is the name of the secret used to terminate TLS traffic on port 443. Field is left optional to allow TLS routing based on SNI hostname alone. If the SNI host in a listener conflicts with the "Host" header field used by an IngressRule, the SNI host is used for termination and value of the "Host" header is used for routing.
                            type: string
                resources:
                  description: Resources defines the Compute Resources required by the container for Grafana.
                  type: object
                  properties:
                    claims:
                      description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers."
                      type: array
                      items:
                        description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                            type: string
                      x-kubernetes-list-map-keys:
                        - name
                      x-kubernetes-list-type: map
                    limits:
                      description: "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: object
                      additionalProperties:
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    requests:
                      description: "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: object
                      additionalProperties:
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                route:
                  description: Route defines the desired state for an OpenShift Route for the Grafana component.
                  type: object
                  required:
                    - enabled
                  properties:
                    annotations:
                      description: Annotations is the map of annotations to use for the Route resource.
                      type: object
                      additionalProperties:
                        type: string
                    enabled:
                      description: Enabled will toggle the creation of the OpenShift Route.
                      type: boolean
                    labels:
                      description: Labels is the map of labels to use for the Route resource
                      type: object
                      additionalProperties:
                        type: string
                    path:
                      description: Path the router watches for, to route traffic for to the service.
                      type: string
                    tls:
                      description: TLS provides the ability to configure certificates and termination for the Route.
                      type: object
                      required:
                        - termination
                      properties:
                        caCertificate:
                          description: caCertificate provides the cert authority certificate contents
                          type: string
                        certificate:
                          description: certificate provides certificate contents
                          type: string
                        destinationCACertificate:
                          description: destinationCACertificate provides the contents of the ca certificate of the final destination.  When using reencrypt termination this file should be provided in order to have routers use it for health checks on the secure connection. If this field is not specified, the router may provide its own destination CA and perform hostname validation using the short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically verify.
                          type: string
                        insecureEdgeTerminationPolicy:
                          description: "insecureEdgeTerminationPolicy indicates the desired behavior for insecure connections to a route. While each router may make its own decisions on which ports to expose, this is normally port 80. \n * Allow - traffic is sent to the server on the insecure port (default) * Disable - no traffic is allowed on the insecure port. * Redirect - clients are redirected to the secure port."
                          type: string
                        key:
                          description: key provides key file contents
                          type: string
                        termination:
                          description: termination indicates termination type.
                          type: string
                    wildcardPolicy:
                      description: WildcardPolicy if any for the route. Currently only 'Subdomain' or 'None' is allowed.
                      type: string
                size:
                  description: Size is the replica count for the Grafana Deployment.
                  type: integer
                  format: int32
                version:
                  description: Version is the Grafana container image tag.
                  type: string
            ha:
              description: HA options for High Availability support for the Redis component.
              type: object
              required:
                - enabled
              properties:
                enabled:
                  description: Enabled will toggle HA support globally for Argo CD.
                  type: boolean
                redisProxyImage:
                  description: RedisProxyImage is the Redis HAProxy container image.
                  type: string
                redisProxyVersion:
                  description: RedisProxyVersion is the Redis HAProxy container image tag.
                  type: string
                resources:
                  description: Resources defines the Compute Resources required by the container for HA.
                  type: object
                  properties:
                    claims:
                      description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers."
                      type: array
                      items:
                        description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                            type: string
                      x-kubernetes-list-map-keys:
                        - name
                      x-kubernetes-list-type: map
                    limits:
                      description: "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: object
                      additionalProperties:
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    requests:
                      description: "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: object
                      additionalProperties:
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
            helpChatText:
              description: HelpChatText is the text for getting chat help, defaults to "Chat now!"
              type: string
            helpChatURL:
              description: HelpChatURL is the URL for getting chat help, this will typically be your Slack channel for support.
              type: string
            image:
              description: Image is the ArgoCD container image for all ArgoCD components.
              type: string
            import:
              description: Import is the import/restore options for ArgoCD.
              type: object
              required:
                - name
              properties:
                name:
                  description: Name of an ArgoCDExport from which to import data.
                  type: string
                namespace:
                  description: Namespace for the ArgoCDExport, defaults to the same namespace as the ArgoCD.
                  type: string
            initialRepositories:
              description: InitialRepositories to configure Argo CD with upon creation of the cluster.
              type: string
            initialSSHKnownHosts:
              description: InitialSSHKnownHosts defines the SSH known hosts data upon creation of the cluster for connecting Git repositories via SSH.
              type: object
              properties:
                excludedefaulthosts:
                  description: ExcludeDefaultHosts describes whether you would like to include the default list of SSH Known Hosts provided by ArgoCD.
                  type: boolean
                keys:
                  description: Keys describes a custom set of SSH Known Hosts that you would like to have included in your ArgoCD server.
                  type: string
            kustomizeBuildOptions:
              description: KustomizeBuildOptions is used to specify build options/parameters to use with `kustomize build`.
              type: string
            kustomizeVersions:
              description: KustomizeVersions is a listing of configured versions of Kustomize to be made available within ArgoCD.
              type: array
              items:
                description: KustomizeVersionSpec is used to specify information about a kustomize version to be used within ArgoCD.
                type: object
                properties:
                  path:
                    description: Path is the path to a configured kustomize version on the filesystem of your repo server.
                    type: string
                  version:
                    description: Version is a configured kustomize version in the format of vX.Y.Z
                    type: string
            monitoring:
              description: Monitoring defines whether workload status monitoring configuration for this instance.
              type: object
              required:
                - enabled
              properties:
                disableMetrics:
                  description: DisableMetrics field can be used to enable or disable the collection of Metrics on Openshift
                  type: boolean
                enabled:
                  description: Enabled defines whether workload status monitoring is enabled for this instance or not
                  type: boolean
            nodePlacement:
              description: NodePlacement defines NodeSelectors and Taints for Argo CD workloads
              type: object
              properties:
                nodeSelector:
                  description: NodeSelector is a field of PodSpec, it is a map of key value pairs used for node selection
                  type: object
                  additionalProperties:
                    type: string
                tolerations:
                  description: Tolerations allow the pods to schedule onto nodes with matching taints
                  type: array
                  items:
                    description: The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                    type: object
                    properties:
                      effect:
                        description: Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                        type: string
                      operator:
                        description: Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                        type: string
                      tolerationSeconds:
                        description: TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                        type: integer
                        format: int64
                      value:
                        description: Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                        type: string
            notifications:
              description: Notifications defines whether the Argo CD Notifications controller should be installed.
              type: object
              required:
                - enabled
              properties:
                enabled:
                  description: Enabled defines whether argocd-notifications controller should be deployed or not
                  type: boolean
                env:
                  description: Env let you specify environment variables for Notifications pods
                  type: array
                  items:
                    description: EnvVar represents an environment variable present in a Container.
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value. Cannot be used if value is not empty.
                        type: object
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            type: object
                            required:
                              - key
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its key must be defined
                                type: boolean
                          fieldRef:
                            description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                            type: object
                            required:
                              - fieldPath
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified API version.
                                type: string
                          resourceFieldRef:
                            description: "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                            type: object
                            required:
                              - resource
                            properties:
                              containerName:
                                description: "Container name: required for volumes, optional for env vars"
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed resources, defaults to "1"
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              resource:
                                description: "Required: resource to select"
                                type: string
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            type: object
                            required:
                              - key
                            properties:
                              key:
                                description: The key of the secret to select from.  Must be a valid secret key.
                                type: string
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                type: string
                              optional:
                                description: Specify whether the Secret or its key must be defined
                                type: boolean
                image:
                  description: Image is the Argo CD Notifications image (optional)
                  type: string
                logLevel:
                  description: LogLevel describes the log level that should be used by the argocd-notifications. Defaults to ArgoCDDefaultLogLevel if not set.  Valid options are debug,info, error, and warn.
                  type: string
                replicas:
                  description: Replicas defines the number of replicas to run for notifications-controller
                  type: integer
                  format: int32
                resources:
                  description: Resources defines the Compute Resources required by the container for Argo CD Notifications.
                  type: object
                  properties:
                    claims:
                      description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers."
                      type: array
                      items:
                        description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                            type: string
                      x-kubernetes-list-map-keys:
                        - name
                      x-kubernetes-list-type: map
                    limits:
                      description: "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: object
                      additionalProperties:
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    requests:
                      description: "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: object
                      additionalProperties:
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                version:
                  description: Version is the Argo CD Notifications image tag. (optional)
                  type: string
            oidcConfig:
              description: OIDCConfig is the OIDC configuration as an alternative to dex.
              type: string
            prometheus:
              description: Prometheus defines the Prometheus server options for ArgoCD.
              type: object
              required:
                - enabled
              properties:
                enabled:
                  description: Enabled will toggle Prometheus support globally for ArgoCD.
                  type: boolean
                host:
                  description: Host is the hostname to use for Ingress/Route resources.
                  type: string
                ingress:
                  description: Ingress defines the desired state for an Ingress for the Prometheus component.
                  type: object
                  required:
                    - enabled
                  properties:
                    annotations:
                      description: Annotations is the map of annotations to apply to the Ingress.
                      type: object
                      additionalProperties:
                        type: string
                    enabled:
                      description: Enabled will toggle the creation of the Ingress.
                      type: boolean
                    ingressClassName:
                      description: IngressClassName for the Ingress resource.
                      type: string
                    path:
                      description: Path used for the Ingress resource.
                      type: string
                    tls:
                      description: TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.
                      type: array
                      items:
                        description: IngressTLS describes the transport layer security associated with an ingress.
                        type: object
                        properties:
                          hosts:
                            description: hosts is a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.
                            type: array
                            items:
                              type: string
                            x-kubernetes-list-type: atomic
                          secretName:
                            description: secretName is the name of the secret used to terminate TLS traffic on port 443. Field is left optional to allow TLS routing based on SNI hostname alone. If the SNI host in a listener conflicts with the "Host" header field used by an IngressRule, the SNI host is used for termination and value of the "Host" header is used for routing.
                            type: string
                route:
                  description: Route defines the desired state for an OpenShift Route for the Prometheus component.
                  type: object
                  required:
                    - enabled
                  properties:
                    annotations:
                      description: Annotations is the map of annotations to use for the Route resource.
                      type: object
                      additionalProperties:
                        type: string
                    enabled:
                      description: Enabled will toggle the creation of the OpenShift Route.
                      type: boolean
                    labels:
                      description: Labels is the map of labels to use for the Route resource
                      type: object
                      additionalProperties:
                        type: string
                    path:
                      description: Path the router watches for, to route traffic for to the service.
                      type: string
                    tls:
                      description: TLS provides the ability to configure certificates and termination for the Route.
                      type: object
                      required:
                        - termination
                      properties:
                        caCertificate:
                          description: caCertificate provides the cert authority certificate contents
                          type: string
                        certificate:
                          description: certificate provides certificate contents
                          type: string
                        destinationCACertificate:
                          description: destinationCACertificate provides the contents of the ca certificate of the final destination.  When using reencrypt termination this file should be provided in order to have routers use it for health checks on the secure connection. If this field is not specified, the router may provide its own destination CA and perform hostname validation using the short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically verify.
                          type: string
                        insecureEdgeTerminationPolicy:
                          description: "insecureEdgeTerminationPolicy indicates the desired behavior for insecure connections to a route. While each router may make its own decisions on which ports to expose, this is normally port 80. \n * Allow - traffic is sent to the server on the insecure port (default) * Disable - no traffic is allowed on the insecure port. * Redirect - clients are redirected to the secure port."
                          type: string
                        key:
                          description: key provides key file contents
                          type: string
                        termination:
                          description: termination indicates termination type.
                          type: string
                    wildcardPolicy:
                      description: WildcardPolicy if any for the route. Currently only 'Subdomain' or 'None' is allowed.
                      type: string
                size:
                  description: Size is the replica count for the Prometheus StatefulSet.
                  type: integer
                  format: int32
            rbac:
              description: RBAC defines the RBAC configuration for Argo CD.
              type: object
              properties:
                defaultPolicy:
                  description: DefaultPolicy is the name of the default role which Argo CD will falls back to, when authorizing API requests (optional). If omitted or empty, users may be still be able to login, but will see no apps, projects, etc...
                  type: string
                policy:
                  description: "Policy is CSV containing user-defined RBAC policies and role definitions. Policy rules are in the form:   p, subject, resource, action, object, effect Role definitions and bindings are in the form:   g, subject, inherited-subject See https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/rbac.md for additional information."
                  type: string
                policyMatcherMode:
                  description: PolicyMatcherMode configures the matchers function mode for casbin. There are two options for this, 'glob' for glob matcher or 'regex' for regex matcher.
                  type: string
                scopes:
                  description: "Scopes controls which OIDC scopes to examine during rbac enforcement (in addition to `sub` scope). If omitted, defaults to: '[groups]'."
                  type: string
            redis:
              description: Redis defines the Redis server options for ArgoCD.
              type: object
              properties:
                autotls:
                  description: "AutoTLS specifies the method to use for automatic TLS configuration for the redis server The value specified here can currently be: - openshift - Use the OpenShift service CA to request TLS config"
                  type: string
                disableTLSVerification:
                  description: DisableTLSVerification defines whether redis server API should be accessed using strict TLS validation
                  type: boolean
                enabled:
                  description: Enabled is the flag to enable Redis during ArgoCD installation. (optional, default `true`)
                  type: boolean
                image:
                  description: Image is the Redis container image.
                  type: string
                remote:
                  description: Remote specifies the remote URL of the Redis container. (optional, by default, a local instance managed by the operator is used.)
                  type: string
                resources:
                  description: Resources defines the Compute Resources required by the container for Redis.
                  type: object
                  properties:
                    claims:
                      description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers."
                      type: array
                      items:
                        description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                            type: string
                      x-kubernetes-list-map-keys:
                        - name
                      x-kubernetes-list-type: map
                    limits:
                      description: "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: object
                      additionalProperties:
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    requests:
                      description: "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: object
                      additionalProperties:
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                version:
                  description: Version is the Redis container image tag.
                  type: string
            repo:
              description: Repo defines the repo server options for Argo CD.
              type: object
              properties:
                autotls:
                  description: "AutoTLS specifies the method to use for automatic TLS configuration for the repo server The value specified here can currently be: - openshift - Use the OpenShift service CA to request TLS config"
                  type: string
                enabled:
                  description: Enabled is the flag to enable Repo Server during ArgoCD installation. (optional, default `true`)
                  type: boolean
                env:
                  description: Env lets you specify environment for repo server pods
                  type: array
                  items:
                    description: EnvVar represents an environment variable present in a Container.
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value. Cannot be used if value is not empty.
                        type: object
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            type: object
                            required:
                              - key
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its key must be defined
                                type: boolean
                          fieldRef:
                            description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                            type: object
                            required:
                              - fieldPath
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified API version.
                                type: string
                          resourceFieldRef:
                            description: "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                            type: object
                            required:
                              - resource
                            properties:
                              containerName:
                                description: "Container name: required for volumes, optional for env vars"
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed resources, defaults to "1"
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              resource:
                                description: "Required: resource to select"
                                type: string
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            type: object
                            required:
                              - key
                            properties:
                              key:
                                description: The key of the secret to select from.  Must be a valid secret key.
                                type: string
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                type: string
                              optional:
                                description: Specify whether the Secret or its key must be defined
                                type: boolean
                execTimeout:
                  description: ExecTimeout specifies the timeout in seconds for tool execution
                  type: integer
                extraRepoCommandArgs:
                  description: Extra Command arguments allows users to pass command line arguments to repo server workload. They get added to default command line arguments provided by the operator. Please note that the command line arguments provided as part of ExtraRepoCommandArgs will not overwrite the default command line arguments.
                  type: array
                  items:
                    type: string
                image:
                  description: Image is the ArgoCD Repo Server container image.
                  type: string
                initContainers:
                  description: InitContainers defines the list of initialization containers for the repo server deployment
                  type: array
                  items:
                    description: A single application container that you want to run within a pod.
                    type: object
                    required:
                      - name
                    properties:
                      args:
                        description: 'Arguments to the entrypoint. The container image''s CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                        type: array
                        items:
                          type: string
                      command:
                        description: 'Entrypoint array. Not executed within a shell. The container image''s ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                        type: array
                        items:
                          type: string
                      env:
                        description: List of environment variables to set in the container. Cannot be updated.
                        type: array
                        items:
                          description: EnvVar represents an environment variable present in a Container.
                          type: object
                          required:
                            - name
                          properties:
                            name:
                              description: Name of the environment variable. Must be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value. Cannot be used if value is not empty.
                              type: object
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  type: object
                                  required:
                                    - key
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its key must be defined
                                      type: boolean
                                fieldRef:
                                  description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                  type: object
                                  required:
                                    - fieldPath
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in the specified API version.
                                      type: string
                                resourceFieldRef:
                                  description: "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                  type: object
                                  required:
                                    - resource
                                  properties:
                                    containerName:
                                      description: "Container name: required for volumes, optional for env vars"
                                      type: string
                                    divisor:
                                      description: Specifies the output format of the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: "Required: resource to select"
                                      type: string
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's namespace
                                  type: object
                                  required:
                                    - key
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key must be defined
                                      type: boolean
                      envFrom:
                        description: List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
                        type: array
                        items:
                          description: EnvFromSource represents the source of a set of ConfigMaps
                          type: object
                          properties:
                            configMapRef:
                              description: The ConfigMap to select from
                              type: object
                              properties:
                                name:
                                  description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap must be defined
                                  type: boolean
                            prefix:
                              description: An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                              type: string
                            secretRef:
                              description: The Secret to select from
                              type: object
                              properties:
                                name:
                                  description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                  type: string
                                optional:
                                  description: Specify whether the Secret must be defined
                                  type: boolean
                      image:
                        description: "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
                        type: string
                      imagePullPolicy:
                        description: "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
                        type: string
                      lifecycle:
                        description: Actions that the management system should take in response to container lifecycle events. Cannot be updated.
                        type: object
                        properties:
                          postStart:
                            description: "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                            type: object
                            properties:
                              exec:
                                description: Exec specifies the action to take.
                                type: object
                                properties:
                                  command:
                                    description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                    type: array
                                    items:
                                      type: string
                              httpGet:
                                description: HTTPGet specifies the http request to perform.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request. HTTP allows repeated headers.
                                    type: array
                                    items:
                                      description: HTTPHeader describes a custom header to be used in HTTP probes
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          description: The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the host. Defaults to HTTP.
                                    type: string
                              tcpSocket:
                                description: Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: string
                                  port:
                                    description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                          preStop:
                            description: "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                            type: object
                            properties:
                              exec:
                                description: Exec specifies the action to take.
                                type: object
                                properties:
                                  command:
                                    description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                    type: array
                                    items:
                                      type: string
                              httpGet:
                                description: HTTPGet specifies the http request to perform.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request. HTTP allows repeated headers.
                                    type: array
                                    items:
                                      description: HTTPHeader describes a custom header to be used in HTTP probes
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          description: The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the host. Defaults to HTTP.
                                    type: string
                              tcpSocket:
                                description: Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: string
                                  port:
                                    description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                      livenessProbe:
                        description: "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                        type: object
                        properties:
                          exec:
                            description: Exec specifies the action to take.
                            type: object
                            properties:
                              command:
                                description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                type: array
                                items:
                                  type: string
                          failureThreshold:
                            description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                            type: integer
                            format: int32
                          grpc:
                            description: GRPC specifies an action involving a GRPC port.
                            type: object
                            required:
                              - port
                            properties:
                              port:
                                description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                type: integer
                                format: int32
                              service:
                                description: "Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). \n If this is not specified, the default behavior is defined by gRPC."
                                type: string
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            type: object
                            required:
                              - port
                            properties:
                              host:
                                description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request. HTTP allows repeated headers.
                                type: array
                                items:
                                  description: HTTPHeader describes a custom header to be used in HTTP probes
                                  type: object
                                  required:
                                    - name
                                    - value
                                  properties:
                                    name:
                                      description: The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host. Defaults to HTTP.
                                type: string
                          initialDelaySeconds:
                            description: "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            type: integer
                            format: int32
                          periodSeconds:
                            description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                            type: integer
                            format: int32
                          successThreshold:
                            description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                            type: integer
                            format: int32
                          tcpSocket:
                            description: TCPSocket specifies an action involving a TCP port.
                            type: object
                            required:
                              - port
                            properties:
                              host:
                                description: "Optional: Host name to connect to, defaults to the pod IP."
                                type: string
                              port:
                                description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                          terminationGracePeriodSeconds:
                            description: Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                            type: integer
                            format: int64
                          timeoutSeconds:
                            description: "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            type: integer
                            format: int32
                      name:
                        description: Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
                        type: string
                      ports:
                        description: List of ports to expose from the container. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Modifying this array with strategic merge patch may corrupt the data. For more information See https://github.com/kubernetes/kubernetes/issues/108255. Cannot be updated.
                        type: array
                        items:
                          description: ContainerPort represents a network port in a single container.
                          type: object
                          required:
                            - containerPort
                          properties:
                            containerPort:
                              description: Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
                              type: integer
                              format: int32
                            hostIP:
                              description: What host IP to bind the external port to.
                              type: string
                            hostPort:
                              description: Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
                              type: integer
                              format: int32
                            name:
                              description: If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
                              type: string
                            protocol:
                              description: Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
                              type: string
                        x-kubernetes-list-map-keys:
                          - containerPort
                          - protocol
                        x-kubernetes-list-type: map
                      readinessProbe:
                        description: "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                        type: object
                        properties:
                          exec:
                            description: Exec specifies the action to take.
                            type: object
                            properties:
                              command:
                                description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                type: array
                                items:
                                  type: string
                          failureThreshold:
                            description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                            type: integer
                            format: int32
                          grpc:
                            description: GRPC specifies an action involving a GRPC port.
                            type: object
                            required:
                              - port
                            properties:
                              port:
                                description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                type: integer
                                format: int32
                              service:
                                description: "Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). \n If this is not specified, the default behavior is defined by gRPC."
                                type: string
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            type: object
                            required:
                              - port
                            properties:
                              host:
                                description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request. HTTP allows repeated headers.
                                type: array
                                items:
                                  description: HTTPHeader describes a custom header to be used in HTTP probes
                                  type: object
                                  required:
                                    - name
                                    - value
                                  properties:
                                    name:
                                      description: The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host. Defaults to HTTP.
                                type: string
                          initialDelaySeconds:
                            description: "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            type: integer
                            format: int32
                          periodSeconds:
                            description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                            type: integer
                            format: int32
                          successThreshold:
                            description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                            type: integer
                            format: int32
                          tcpSocket:
                            description: TCPSocket specifies an action involving a TCP port.
                            type: object
                            required:
                              - port
                            properties:
                              host:
                                description: "Optional: Host name to connect to, defaults to the pod IP."
                                type: string
                              port:
                                description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                          terminationGracePeriodSeconds:
                            description: Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                            type: integer
                            format: int64
                          timeoutSeconds:
                            description: "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            type: integer
                            format: int32
                      resizePolicy:
                        description: Resources resize policy for the container.
                        type: array
                        items:
                          description: ContainerResizePolicy represents resource resize policy for the container.
                          type: object
                          required:
                            - resourceName
                            - restartPolicy
                          properties:
                            resourceName:
                              description: "Name of the resource to which this resource resize policy applies. Supported values: cpu, memory."
                              type: string
                            restartPolicy:
                              description: Restart policy to apply when specified resource is resized. If not specified, it defaults to NotRequired.
                              type: string
                        x-kubernetes-list-type: atomic
                      resources:
                        description: "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                        type: object
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers."
                            type: array
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              type: object
                              required:
                                - name
                              properties:
                                name:
                                  description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                                  type: string
                            x-kubernetes-list-map-keys:
                              - name
                            x-kubernetes-list-type: map
                          limits:
                            description: "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                            type: object
                            additionalProperties:
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          requests:
                            description: "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                            type: object
                            additionalProperties:
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                      restartPolicy:
                        description: 'RestartPolicy defines the restart behavior of individual containers in a pod. This field may only be set for init containers, and the only allowed value is "Always". For non-init containers or when this field is not specified, the restart behavior is defined by the Pod''s restart policy and the container type. Setting the RestartPolicy as "Always" for the init container will have the following effect: this init container will be continually restarted on exit until all regular containers have terminated. Once all regular containers have completed, all init containers with restartPolicy "Always" will be shut down. This lifecycle differs from normal init containers and is often referred to as a "sidecar" container. Although this init container still starts in the init container sequence, it does not wait for the container to complete before proceeding to the next init container. Instead, the next init container starts immediately after this init container is started, or after any startupProbe has successfully completed.'
                        type: string
                      securityContext:
                        description: "SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
                        type: object
                        properties:
                          allowPrivilegeEscalation:
                            description: "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows."
                            type: boolean
                          capabilities:
                            description: The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.
                            type: object
                            properties:
                              add:
                                description: Added capabilities
                                type: array
                                items:
                                  description: Capability represent POSIX capabilities type
                                  type: string
                              drop:
                                description: Removed capabilities
                                type: array
                                items:
                                  description: Capability represent POSIX capabilities type
                                  type: string
                          privileged:
                            description: Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
                            type: boolean
                          procMount:
                            description: procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.
                            type: string
                          readOnlyRootFilesystem:
                            description: Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
                            type: boolean
                          runAsGroup:
                            description: The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                            type: integer
                            format: int64
                          runAsNonRoot:
                            description: Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            type: boolean
                          runAsUser:
                            description: The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                            type: integer
                            format: int64
                          seLinuxOptions:
                            description: The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                            type: object
                            properties:
                              level:
                                description: Level is SELinux level label that applies to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies to the container.
                                type: string
                          seccompProfile:
                            description: The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.
                            type: object
                            required:
                              - type
                            properties:
                              localhostProfile:
                                description: localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must be set if type is "Localhost". Must NOT be set for any other type.
                                type: string
                              type:
                                description: "type indicates which kind of seccomp profile will be applied. Valid options are: \n Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied."
                                type: string
                          windowsOptions:
                            description: The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.
                            type: object
                            properties:
                              gmsaCredentialSpec:
                                description: GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                                type: string
                              gmsaCredentialSpecName:
                                description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                type: string
                              hostProcess:
                                description: HostProcess determines if a container should be run as a 'Host Process' container. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers). In addition, if HostProcess is true then HostNetwork must also be set to true.
                                type: boolean
                              runAsUserName:
                                description: The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                type: string
                      startupProbe:
                        description: "StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                        type: object
                        properties:
                          exec:
                            description: Exec specifies the action to take.
                            type: object
                            properties:
                              command:
                                description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                type: array
                                items:
                                  type: string
                          failureThreshold:
                            description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                            type: integer
                            format: int32
                          grpc:
                            description: GRPC specifies an action involving a GRPC port.
                            type: object
                            required:
                              - port
                            properties:
                              port:
                                description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                type: integer
                                format: int32
                              service:
                                description: "Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). \n If this is not specified, the default behavior is defined by gRPC."
                                type: string
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            type: object
                            required:
                              - port
                            properties:
                              host:
                                description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request. HTTP allows repeated headers.
                                type: array
                                items:
                                  description: HTTPHeader describes a custom header to be used in HTTP probes
                                  type: object
                                  required:
                                    - name
                                    - value
                                  properties:
                                    name:
                                      description: The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host. Defaults to HTTP.
                                type: string
                          initialDelaySeconds:
                            description: "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            type: integer
                            format: int32
                          periodSeconds:
                            description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                            type: integer
                            format: int32
                          successThreshold:
                            description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                            type: integer
                            format: int32
                          tcpSocket:
                            description: TCPSocket specifies an action involving a TCP port.
                            type: object
                            required:
                              - port
                            properties:
                              host:
                                description: "Optional: Host name to connect to, defaults to the pod IP."
                                type: string
                              port:
                                description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                          terminationGracePeriodSeconds:
                            description: Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                            type: integer
                            format: int64
                          timeoutSeconds:
                            description: "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            type: integer
                            format: int32
                      stdin:
                        description: Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
                        type: boolean
                      stdinOnce:
                        description: Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
                        type: boolean
                      terminationMessagePath:
                        description: "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated."
                        type: string
                      terminationMessagePolicy:
                        description: Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
                        type: string
                      tty:
                        description: Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
                        type: boolean
                      volumeDevices:
                        description: volumeDevices is the list of block devices to be used by the container.
                        type: array
                        items:
                          description: volumeDevice describes a mapping of a raw block device within a container.
                          type: object
                          required:
                            - devicePath
                            - name
                          properties:
                            devicePath:
                              description: devicePath is the path inside of the container that the device will be mapped to.
                              type: string
                            name:
                              description: name must match the name of a persistentVolumeClaim in the pod
                              type: string
                      volumeMounts:
                        description: Pod volumes to mount into the container's filesystem. Cannot be updated.
                        type: array
                        items:
                          description: VolumeMount describes a mounting of a Volume within a container.
                          type: object
                          required:
                            - mountPath
                            - name
                          properties:
                            mountPath:
                              description: Path within the container at which the volume should be mounted.  Must not contain ':'.
                              type: string
                            mountPropagation:
                              description: mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
                              type: string
                            name:
                              description: This must match the Name of a Volume.
                              type: string
                            readOnly:
                              description: Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
                              type: boolean
                            subPath:
                              description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                              type: string
                            subPathExpr:
                              description: Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                              type: string
                      workingDir:
                        description: Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
                        type: string
                logFormat:
                  description: LogFormat describes the log format that should be used by the Repo Server. Defaults to ArgoCDDefaultLogFormat if not configured. Valid options are text or json.
                  type: string
                logLevel:
                  description: LogLevel describes the log level that should be used by the Repo Server. Defaults to ArgoCDDefaultLogLevel if not set.  Valid options are debug, info, error, and warn.
                  type: string
                mountsatoken:
                  description: MountSAToken describes whether you would like to have the Repo server mount the service account token
                  type: boolean
                remote:
                  description: Remote specifies the remote URL of the Repo Server container. (optional, by default, a local instance managed by the operator is used.)
                  type: string
                replicas:
                  description: Replicas defines the number of replicas for argocd-repo-server. Value should be greater than or equal to 0. Default is nil.
                  type: integer
                  format: int32
                resources:
                  description: Resources defines the Compute Resources required by the container for Redis.
                  type: object
                  properties:
                    claims:
                      description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers."
                      type: array
                      items:
                        description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                            type: string
                      x-kubernetes-list-map-keys:
                        - name
                      x-kubernetes-list-type: map
                    limits:
                      description: "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: object
                      additionalProperties:
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    requests:
                      description: "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: object
                      additionalProperties:
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                serviceaccount:
                  description: ServiceAccount defines the ServiceAccount user that you would like the Repo server to use
                  type: string
                sidecarContainers:
                  description: SidecarContainers defines the list of sidecar containers for the repo server deployment
                  type: array
                  items:
                    description: A single application container that you want to run within a pod.
                    type: object
                    required:
                      - name
                    properties:
                      args:
                        description: 'Arguments to the entrypoint. The container image''s CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                        type: array
                        items:
                          type: string
                      command:
                        description: 'Entrypoint array. Not executed within a shell. The container image''s ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                        type: array
                        items:
                          type: string
                      env:
                        description: List of environment variables to set in the container. Cannot be updated.
                        type: array
                        items:
                          description: EnvVar represents an environment variable present in a Container.
                          type: object
                          required:
                            - name
                          properties:
                            name:
                              description: Name of the environment variable. Must be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value. Cannot be used if value is not empty.
                              type: object
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  type: object
                                  required:
                                    - key
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its key must be defined
                                      type: boolean
                                fieldRef:
                                  description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                  type: object
                                  required:
                                    - fieldPath
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in the specified API version.
                                      type: string
                                resourceFieldRef:
                                  description: "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                  type: object
                                  required:
                                    - resource
                                  properties:
                                    containerName:
                                      description: "Container name: required for volumes, optional for env vars"
                                      type: string
                                    divisor:
                                      description: Specifies the output format of the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: "Required: resource to select"
                                      type: string
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's namespace
                                  type: object
                                  required:
                                    - key
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key must be defined
                                      type: boolean
                      envFrom:
                        description: List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
                        type: array
                        items:
                          description: EnvFromSource represents the source of a set of ConfigMaps
                          type: object
                          properties:
                            configMapRef:
                              description: The ConfigMap to select from
                              type: object
                              properties:
                                name:
                                  description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap must be defined
                                  type: boolean
                            prefix:
                              description: An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                              type: string
                            secretRef:
                              description: The Secret to select from
                              type: object
                              properties:
                                name:
                                  description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                  type: string
                                optional:
                                  description: Specify whether the Secret must be defined
                                  type: boolean
                      image:
                        description: "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
                        type: string
                      imagePullPolicy:
                        description: "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
                        type: string
                      lifecycle:
                        description: Actions that the management system should take in response to container lifecycle events. Cannot be updated.
                        type: object
                        properties:
                          postStart:
                            description: "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                            type: object
                            properties:
                              exec:
                                description: Exec specifies the action to take.
                                type: object
                                properties:
                                  command:
                                    description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                    type: array
                                    items:
                                      type: string
                              httpGet:
                                description: HTTPGet specifies the http request to perform.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request. HTTP allows repeated headers.
                                    type: array
                                    items:
                                      description: HTTPHeader describes a custom header to be used in HTTP probes
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          description: The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the host. Defaults to HTTP.
                                    type: string
                              tcpSocket:
                                description: Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: string
                                  port:
                                    description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                          preStop:
                            description: "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
                            type: object
                            properties:
                              exec:
                                description: Exec specifies the action to take.
                                type: object
                                properties:
                                  command:
                                    description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                    type: array
                                    items:
                                      type: string
                              httpGet:
                                description: HTTPGet specifies the http request to perform.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request. HTTP allows repeated headers.
                                    type: array
                                    items:
                                      description: HTTPHeader describes a custom header to be used in HTTP probes
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          description: The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the host. Defaults to HTTP.
                                    type: string
                              tcpSocket:
                                description: Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.
                                type: object
                                required:
                                  - port
                                properties:
                                  host:
                                    description: "Optional: Host name to connect to, defaults to the pod IP."
                                    type: string
                                  port:
                                    description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                      livenessProbe:
                        description: "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                        type: object
                        properties:
                          exec:
                            description: Exec specifies the action to take.
                            type: object
                            properties:
                              command:
                                description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                type: array
                                items:
                                  type: string
                          failureThreshold:
                            description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                            type: integer
                            format: int32
                          grpc:
                            description: GRPC specifies an action involving a GRPC port.
                            type: object
                            required:
                              - port
                            properties:
                              port:
                                description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                type: integer
                                format: int32
                              service:
                                description: "Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). \n If this is not specified, the default behavior is defined by gRPC."
                                type: string
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            type: object
                            required:
                              - port
                            properties:
                              host:
                                description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request. HTTP allows repeated headers.
                                type: array
                                items:
                                  description: HTTPHeader describes a custom header to be used in HTTP probes
                                  type: object
                                  required:
                                    - name
                                    - value
                                  properties:
                                    name:
                                      description: The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host. Defaults to HTTP.
                                type: string
                          initialDelaySeconds:
                            description: "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            type: integer
                            format: int32
                          periodSeconds:
                            description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                            type: integer
                            format: int32
                          successThreshold:
                            description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                            type: integer
                            format: int32
                          tcpSocket:
                            description: TCPSocket specifies an action involving a TCP port.
                            type: object
                            required:
                              - port
                            properties:
                              host:
                                description: "Optional: Host name to connect to, defaults to the pod IP."
                                type: string
                              port:
                                description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                          terminationGracePeriodSeconds:
                            description: Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                            type: integer
                            format: int64
                          timeoutSeconds:
                            description: "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            type: integer
                            format: int32
                      name:
                        description: Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
                        type: string
                      ports:
                        description: List of ports to expose from the container. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Modifying this array with strategic merge patch may corrupt the data. For more information See https://github.com/kubernetes/kubernetes/issues/108255. Cannot be updated.
                        type: array
                        items:
                          description: ContainerPort represents a network port in a single container.
                          type: object
                          required:
                            - containerPort
                          properties:
                            containerPort:
                              description: Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
                              type: integer
                              format: int32
                            hostIP:
                              description: What host IP to bind the external port to.
                              type: string
                            hostPort:
                              description: Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
                              type: integer
                              format: int32
                            name:
                              description: If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
                              type: string
                            protocol:
                              description: Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
                              type: string
                        x-kubernetes-list-map-keys:
                          - containerPort
                          - protocol
                        x-kubernetes-list-type: map
                      readinessProbe:
                        description: "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                        type: object
                        properties:
                          exec:
                            description: Exec specifies the action to take.
                            type: object
                            properties:
                              command:
                                description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                type: array
                                items:
                                  type: string
                          failureThreshold:
                            description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                            type: integer
                            format: int32
                          grpc:
                            description: GRPC specifies an action involving a GRPC port.
                            type: object
                            required:
                              - port
                            properties:
                              port:
                                description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                type: integer
                                format: int32
                              service:
                                description: "Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). \n If this is not specified, the default behavior is defined by gRPC."
                                type: string
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            type: object
                            required:
                              - port
                            properties:
                              host:
                                description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request. HTTP allows repeated headers.
                                type: array
                                items:
                                  description: HTTPHeader describes a custom header to be used in HTTP probes
                                  type: object
                                  required:
                                    - name
                                    - value
                                  properties:
                                    name:
                                      description: The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host. Defaults to HTTP.
                                type: string
                          initialDelaySeconds:
                            description: "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            type: integer
                            format: int32
                          periodSeconds:
                            description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                            type: integer
                            format: int32
                          successThreshold:
                            description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                            type: integer
                            format: int32
                          tcpSocket:
                            description: TCPSocket specifies an action involving a TCP port.
                            type: object
                            required:
                              - port
                            properties:
                              host:
                                description: "Optional: Host name to connect to, defaults to the pod IP."
                                type: string
                              port:
                                description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                          terminationGracePeriodSeconds:
                            description: Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                            type: integer
                            format: int64
                          timeoutSeconds:
                            description: "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            type: integer
                            format: int32
                      resizePolicy:
                        description: Resources resize policy for the container.
                        type: array
                        items:
                          description: ContainerResizePolicy represents resource resize policy for the container.
                          type: object
                          required:
                            - resourceName
                            - restartPolicy
                          properties:
                            resourceName:
                              description: "Name of the resource to which this resource resize policy applies. Supported values: cpu, memory."
                              type: string
                            restartPolicy:
                              description: Restart policy to apply when specified resource is resized. If not specified, it defaults to NotRequired.
                              type: string
                        x-kubernetes-list-type: atomic
                      resources:
                        description: "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                        type: object
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers."
                            type: array
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              type: object
                              required:
                                - name
                              properties:
                                name:
                                  description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                                  type: string
                            x-kubernetes-list-map-keys:
                              - name
                            x-kubernetes-list-type: map
                          limits:
                            description: "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                            type: object
                            additionalProperties:
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          requests:
                            description: "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                            type: object
                            additionalProperties:
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                      restartPolicy:
                        description: 'RestartPolicy defines the restart behavior of individual containers in a pod. This field may only be set for init containers, and the only allowed value is "Always". For non-init containers or when this field is not specified, the restart behavior is defined by the Pod''s restart policy and the container type. Setting the RestartPolicy as "Always" for the init container will have the following effect: this init container will be continually restarted on exit until all regular containers have terminated. Once all regular containers have completed, all init containers with restartPolicy "Always" will be shut down. This lifecycle differs from normal init containers and is often referred to as a "sidecar" container. Although this init container still starts in the init container sequence, it does not wait for the container to complete before proceeding to the next init container. Instead, the next init container starts immediately after this init container is started, or after any startupProbe has successfully completed.'
                        type: string
                      securityContext:
                        description: "SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
                        type: object
                        properties:
                          allowPrivilegeEscalation:
                            description: "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows."
                            type: boolean
                          capabilities:
                            description: The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.
                            type: object
                            properties:
                              add:
                                description: Added capabilities
                                type: array
                                items:
                                  description: Capability represent POSIX capabilities type
                                  type: string
                              drop:
                                description: Removed capabilities
                                type: array
                                items:
                                  description: Capability represent POSIX capabilities type
                                  type: string
                          privileged:
                            description: Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
                            type: boolean
                          procMount:
                            description: procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.
                            type: string
                          readOnlyRootFilesystem:
                            description: Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
                            type: boolean
                          runAsGroup:
                            description: The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                            type: integer
                            format: int64
                          runAsNonRoot:
                            description: Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            type: boolean
                          runAsUser:
                            description: The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                            type: integer
                            format: int64
                          seLinuxOptions:
                            description: The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                            type: object
                            properties:
                              level:
                                description: Level is SELinux level label that applies to the container.
                                type: string
                              role:
                                description: Role is a SELinux role label that applies to the container.
                                type: string
                              type:
                                description: Type is a SELinux type label that applies to the container.
                                type: string
                              user:
                                description: User is a SELinux user label that applies to the container.
                                type: string
                          seccompProfile:
                            description: The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.
                            type: object
                            required:
                              - type
                            properties:
                              localhostProfile:
                                description: localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must be set if type is "Localhost". Must NOT be set for any other type.
                                type: string
                              type:
                                description: "type indicates which kind of seccomp profile will be applied. Valid options are: \n Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied."
                                type: string
                          windowsOptions:
                            description: The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.
                            type: object
                            properties:
                              gmsaCredentialSpec:
                                description: GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                                type: string
                              gmsaCredentialSpecName:
                                description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                type: string
                              hostProcess:
                                description: HostProcess determines if a container should be run as a 'Host Process' container. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers). In addition, if HostProcess is true then HostNetwork must also be set to true.
                                type: boolean
                              runAsUserName:
                                description: The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                type: string
                      startupProbe:
                        description: "StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                        type: object
                        properties:
                          exec:
                            description: Exec specifies the action to take.
                            type: object
                            properties:
                              command:
                                description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                type: array
                                items:
                                  type: string
                          failureThreshold:
                            description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                            type: integer
                            format: int32
                          grpc:
                            description: GRPC specifies an action involving a GRPC port.
                            type: object
                            required:
                              - port
                            properties:
                              port:
                                description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                type: integer
                                format: int32
                              service:
                                description: "Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). \n If this is not specified, the default behavior is defined by gRPC."
                                type: string
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            type: object
                            required:
                              - port
                            properties:
                              host:
                                description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request. HTTP allows repeated headers.
                                type: array
                                items:
                                  description: HTTPHeader describes a custom header to be used in HTTP probes
                                  type: object
                                  required:
                                    - name
                                    - value
                                  properties:
                                    name:
                                      description: The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host. Defaults to HTTP.
                                type: string
                          initialDelaySeconds:
                            description: "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            type: integer
                            format: int32
                          periodSeconds:
                            description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                            type: integer
                            format: int32
                          successThreshold:
                            description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                            type: integer
                            format: int32
                          tcpSocket:
                            description: TCPSocket specifies an action involving a TCP port.
                            type: object
                            required:
                              - port
                            properties:
                              host:
                                description: "Optional: Host name to connect to, defaults to the pod IP."
                                type: string
                              port:
                                description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                          terminationGracePeriodSeconds:
                            description: Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                            type: integer
                            format: int64
                          timeoutSeconds:
                            description: "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            type: integer
                            format: int32
                      stdin:
                        description: Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
                        type: boolean
                      stdinOnce:
                        description: Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
                        type: boolean
                      terminationMessagePath:
                        description: "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated."
                        type: string
                      terminationMessagePolicy:
                        description: Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
                        type: string
                      tty:
                        description: Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
                        type: boolean
                      volumeDevices:
                        description: volumeDevices is the list of block devices to be used by the container.
                        type: array
                        items:
                          description: volumeDevice describes a mapping of a raw block device within a container.
                          type: object
                          required:
                            - devicePath
                            - name
                          properties:
                            devicePath:
                              description: devicePath is the path inside of the container that the device will be mapped to.
                              type: string
                            name:
                              description: name must match the name of a persistentVolumeClaim in the pod
                              type: string
                      volumeMounts:
                        description: Pod volumes to mount into the container's filesystem. Cannot be updated.
                        type: array
                        items:
                          description: VolumeMount describes a mounting of a Volume within a container.
                          type: object
                          required:
                            - mountPath
                            - name
                          properties:
                            mountPath:
                              description: Path within the container at which the volume should be mounted.  Must not contain ':'.
                              type: string
                            mountPropagation:
                              description: mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
                              type: string
                            name:
                              description: This must match the Name of a Volume.
                              type: string
                            readOnly:
                              description: Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
                              type: boolean
                            subPath:
                              description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                              type: string
                            subPathExpr:
                              description: Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                              type: string
                      workingDir:
                        description: Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
                        type: string
                verifytls:
                  description: VerifyTLS defines whether repo server API should be accessed using strict TLS validation
                  type: boolean
                version:
                  description: Version is the ArgoCD Repo Server container image tag.
                  type: string
                volumeMounts:
                  description: VolumeMounts adds volumeMounts to the repo server container
                  type: array
                  items:
                    description: VolumeMount describes a mounting of a Volume within a container.
                    type: object
                    required:
                      - mountPath
                      - name
                    properties:
                      mountPath:
                        description: Path within the container at which the volume should be mounted.  Must not contain ':'.
                        type: string
                      mountPropagation:
                        description: mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
                        type: string
                      name:
                        description: This must match the Name of a Volume.
                        type: string
                      readOnly:
                        description: Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
                        type: boolean
                      subPath:
                        description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                        type: string
                      subPathExpr:
                        description: Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                        type: string
                volumes:
                  description: Volumes adds volumes to the repo server deployment
                  type: array
                  items:
                    description: Volume represents a named volume in a pod that may be accessed by any container in the pod.
                    type: object
                    required:
                      - name
                    properties:
                      awsElasticBlockStore:
                        description: "awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
                        type: object
                        required:
                          - volumeID
                        properties:
                          fsType:
                            description: 'fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine'
                            type: string
                          partition:
                            description: 'partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).'
                            type: integer
                            format: int32
                          readOnly:
                            description: "readOnly value true will force the readOnly setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
                            type: boolean
                          volumeID:
                            description: "volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
                            type: string
                      azureDisk:
                        description: azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
                        type: object
                        required:
                          - diskName
                          - diskURI
                        properties:
                          cachingMode:
                            description: "cachingMode is the Host Caching mode: None, Read Only, Read Write."
                            type: string
                          diskName:
                            description: diskName is the Name of the data disk in the blob storage
                            type: string
                          diskURI:
                            description: diskURI is the URI of data disk in the blob storage
                            type: string
                          fsType:
                            description: fsType is Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            type: string
                          kind:
                            description: "kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared"
                            type: string
                          readOnly:
                            description: readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                      azureFile:
                        description: azureFile represents an Azure File Service mount on the host and bind mount to the pod.
                        type: object
                        required:
                          - secretName
                          - shareName
                        properties:
                          readOnly:
                            description: readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          secretName:
                            description: secretName is the  name of secret that contains Azure Storage Account Name and Key
                            type: string
                          shareName:
                            description: shareName is the azure share Name
                            type: string
                      cephfs:
                        description: cephFS represents a Ceph FS mount on the host that shares a pod's lifetime
                        type: object
                        required:
                          - monitors
                        properties:
                          monitors:
                            description: "monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                            type: array
                            items:
                              type: string
                          path:
                            description: "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /"
                            type: string
                          readOnly:
                            description: "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                            type: boolean
                          secretFile:
                            description: "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                            type: string
                          secretRef:
                            description: "secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                            type: object
                            properties:
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                type: string
                          user:
                            description: "user is optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                            type: string
                      cinder:
                        description: "cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                        type: object
                        required:
                          - volumeID
                        properties:
                          fsType:
                            description: 'fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                            type: string
                          readOnly:
                            description: "readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                            type: boolean
                          secretRef:
                            description: "secretRef is optional: points to a secret object containing parameters used to connect to OpenStack."
                            type: object
                            properties:
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                type: string
                          volumeID:
                            description: "volumeID used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                            type: string
                      configMap:
                        description: configMap represents a configMap that should populate this volume
                        type: object
                        properties:
                          defaultMode:
                            description: "defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                            type: integer
                            format: int32
                          items:
                            description: items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                            type: array
                            items:
                              description: Maps a string key to a path within a volume.
                              type: object
                              required:
                                - key
                                - path
                              properties:
                                key:
                                  description: key is the key to project.
                                  type: string
                                mode:
                                  description: "mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                  type: integer
                                  format: int32
                                path:
                                  description: path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                  type: string
                          name:
                            description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                            type: string
                          optional:
                            description: optional specify whether the ConfigMap or its keys must be defined
                            type: boolean
                      csi:
                        description: csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
                        type: object
                        required:
                          - driver
                        properties:
                          driver:
                            description: driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
                            type: string
                          fsType:
                            description: fsType to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
                            type: string
                          nodePublishSecretRef:
                            description: nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
                            type: object
                            properties:
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                type: string
                          readOnly:
                            description: readOnly specifies a read-only configuration for the volume. Defaults to false (read/write).
                            type: boolean
                          volumeAttributes:
                            description: volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
                            type: object
                            additionalProperties:
                              type: string
                      downwardAPI:
                        description: downwardAPI represents downward API about the pod that should populate this volume
                        type: object
                        properties:
                          defaultMode:
                            description: "Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                            type: integer
                            format: int32
                          items:
                            description: Items is a list of downward API volume file
                            type: array
                            items:
                              description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                              type: object
                              required:
                                - path
                              properties:
                                fieldRef:
                                  description: "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported."
                                  type: object
                                  required:
                                    - fieldPath
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in the specified API version.
                                      type: string
                                mode:
                                  description: "Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                  type: integer
                                  format: int32
                                path:
                                  description: "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                                  type: string
                                resourceFieldRef:
                                  description: "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported."
                                  type: object
                                  required:
                                    - resource
                                  properties:
                                    containerName:
                                      description: "Container name: required for volumes, optional for env vars"
                                      type: string
                                    divisor:
                                      description: Specifies the output format of the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: "Required: resource to select"
                                      type: string
                      emptyDir:
                        description: "emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
                        type: object
                        properties:
                          medium:
                            description: 'medium represents what type of storage medium should back this directory. The default is "" which means to use the node''s default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                            type: string
                          sizeLimit:
                            description: "sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                      ephemeral:
                        description: "ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed. \n Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim). \n Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod. \n Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information. \n A pod can use both types of ephemeral volumes and persistent volumes at the same time."
                        type: object
                        properties:
                          volumeClaimTemplate:
                            description: "Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long). \n An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster. \n This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created. \n Required, must not be nil."
                            type: object
                            required:
                              - spec
                            properties:
                              metadata:
                                description: May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.
                                type: object
                              spec:
                                description: The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.
                                type: object
                                properties:
                                  accessModes:
                                    description: "accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
                                    type: array
                                    items:
                                      type: string
                                  dataSource:
                                    description: "dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource."
                                    type: object
                                    required:
                                      - kind
                                      - name
                                    properties:
                                      apiGroup:
                                        description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                                        type: string
                                      kind:
                                        description: Kind is the type of resource being referenced
                                        type: string
                                      name:
                                        description: Name is the name of resource being referenced
                                        type: string
                                  dataSourceRef:
                                    description: "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. * While dataSource only allows local objects, dataSourceRef allows objects   in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled."
                                    type: object
                                    required:
                                      - kind
                                      - name
                                    properties:
                                      apiGroup:
                                        description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                                        type: string
                                      kind:
                                        description: Kind is the type of resource being referenced
                                        type: string
                                      name:
                                        description: Name is the name of resource being referenced
                                        type: string
                                      namespace:
                                        description: Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                        type: string
                                  resources:
                                    description: "resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"
                                    type: object
                                    properties:
                                      claims:
                                        description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers."
                                        type: array
                                        items:
                                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                          type: object
                                          required:
                                            - name
                                          properties:
                                            name:
                                              description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                                              type: string
                                        x-kubernetes-list-map-keys:
                                          - name
                                        x-kubernetes-list-type: map
                                      limits:
                                        description: "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                        type: object
                                        additionalProperties:
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                      requests:
                                        description: "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                        type: object
                                        additionalProperties:
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                  selector:
                                    description: selector is a label query over volumes to consider for binding.
                                    type: object
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        type: array
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          type: object
                                          required:
                                            - key
                                            - operator
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              type: array
                                              items:
                                                type: string
                                      matchLabels:
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                        additionalProperties:
                                          type: string
                                  storageClassName:
                                    description: "storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                                    type: string
                                  volumeMode:
                                    description: volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                                    type: string
                                  volumeName:
                                    description: volumeName is the binding reference to the PersistentVolume backing this claim.
                                    type: string
                      fc:
                        description: fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
                        type: object
                        properties:
                          fsType:
                            description: 'fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine'
                            type: string
                          lun:
                            description: "lun is Optional: FC target lun number"
                            type: integer
                            format: int32
                          readOnly:
                            description: "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
                            type: boolean
                          targetWWNs:
                            description: "targetWWNs is Optional: FC target worldwide names (WWNs)"
                            type: array
                            items:
                              type: string
                          wwids:
                            description: "wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously."
                            type: array
                            items:
                              type: string
                      flexVolume:
                        description: flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
                        type: object
                        required:
                          - driver
                        properties:
                          driver:
                            description: driver is the name of the driver to use for this volume.
                            type: string
                          fsType:
                            description: fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                            type: string
                          options:
                            description: "options is Optional: this field holds extra command options if any."
                            type: object
                            additionalProperties:
                              type: string
                          readOnly:
                            description: "readOnly is Optional: defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
                            type: boolean
                          secretRef:
                            description: "secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts."
                            type: object
                            properties:
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                type: string
                      flocker:
                        description: flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
                        type: object
                        properties:
                          datasetName:
                            description: datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
                            type: string
                          datasetUUID:
                            description: datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
                            type: string
                      gcePersistentDisk:
                        description: "gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                        type: object
                        required:
                          - pdName
                        properties:
                          fsType:
                            description: 'fsType is filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine'
                            type: string
                          partition:
                            description: 'partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                            type: integer
                            format: int32
                          pdName:
                            description: "pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                            type: string
                          readOnly:
                            description: "readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                            type: boolean
                      gitRepo:
                        description: "gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container."
                        type: object
                        required:
                          - repository
                        properties:
                          directory:
                            description: directory is the target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
                            type: string
                          repository:
                            description: repository is the URL
                            type: string
                          revision:
                            description: revision is the commit hash for the specified revision.
                            type: string
                      glusterfs:
                        description: "glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md"
                        type: object
                        required:
                          - endpoints
                          - path
                        properties:
                          endpoints:
                            description: "endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                            type: string
                          path:
                            description: "path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                            type: string
                          readOnly:
                            description: "readOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                            type: boolean
                      hostPath:
                        description: "hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write."
                        type: object
                        required:
                          - path
                        properties:
                          path:
                            description: "path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
                            type: string
                          type:
                            description: 'type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                            type: string
                      iscsi:
                        description: "iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md"
                        type: object
                        required:
                          - iqn
                          - lun
                          - targetPortal
                        properties:
                          chapAuthDiscovery:
                            description: chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
                            type: boolean
                          chapAuthSession:
                            description: chapAuthSession defines whether support iSCSI Session CHAP authentication
                            type: boolean
                          fsType:
                            description: 'fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine'
                            type: string
                          initiatorName:
                            description: initiatorName is the custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
                            type: string
                          iqn:
                            description: iqn is the target iSCSI Qualified Name.
                            type: string
                          iscsiInterface:
                            description: iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
                            type: string
                          lun:
                            description: lun represents iSCSI Target Lun number.
                            type: integer
                            format: int32
                          portals:
                            description: portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
                            type: array
                            items:
                              type: string
                          readOnly:
                            description: readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
                            type: boolean
                          secretRef:
                            description: secretRef is the CHAP Secret for iSCSI target and initiator authentication
                            type: object
                            properties:
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                type: string
                          targetPortal:
                            description: targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
                            type: string
                      name:
                        description: "name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                        type: string
                      nfs:
                        description: "nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                        type: object
                        required:
                          - path
                          - server
                        properties:
                          path:
                            description: "path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                            type: string
                          readOnly:
                            description: "readOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                            type: boolean
                          server:
                            description: "server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                            type: string
                      persistentVolumeClaim:
                        description: "persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
                        type: object
                        required:
                          - claimName
                        properties:
                          claimName:
                            description: "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
                            type: string
                          readOnly:
                            description: readOnly Will force the ReadOnly setting in VolumeMounts. Default false.
                            type: boolean
                      photonPersistentDisk:
                        description: photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
                        type: object
                        required:
                          - pdID
                        properties:
                          fsType:
                            description: fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            type: string
                          pdID:
                            description: pdID is the ID that identifies Photon Controller persistent disk
                            type: string
                      portworxVolume:
                        description: portworxVolume represents a portworx volume attached and mounted on kubelets host machine
                        type: object
                        required:
                          - volumeID
                        properties:
                          fsType:
                            description: fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                            type: string
                          readOnly:
                            description: readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          volumeID:
                            description: volumeID uniquely identifies a Portworx volume
                            type: string
                      projected:
                        description: projected items for all in one resources secrets, configmaps, and downward API
                        type: object
                        properties:
                          defaultMode:
                            description: defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                            type: integer
                            format: int32
                          sources:
                            description: sources is the list of volume projections
                            type: array
                            items:
                              description: Projection that may be projected along with other supported volume types
                              type: object
                              properties:
                                configMap:
                                  description: configMap information about the configMap data to project
                                  type: object
                                  properties:
                                    items:
                                      description: items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                      type: array
                                      items:
                                        description: Maps a string key to a path within a volume.
                                        type: object
                                        required:
                                          - key
                                          - path
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: "mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                            type: integer
                                            format: int32
                                          path:
                                            description: path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                            type: string
                                    name:
                                      description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: string
                                    optional:
                                      description: optional specify whether the ConfigMap or its keys must be defined
                                      type: boolean
                                downwardAPI:
                                  description: downwardAPI information about the downwardAPI data to project
                                  type: object
                                  properties:
                                    items:
                                      description: Items is a list of DownwardAPIVolume file
                                      type: array
                                      items:
                                        description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                        type: object
                                        required:
                                          - path
                                        properties:
                                          fieldRef:
                                            description: "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported."
                                            type: object
                                            required:
                                              - fieldPath
                                            properties:
                                              apiVersion:
                                                description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to select in the specified API version.
                                                type: string
                                          mode:
                                            description: "Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                            type: integer
                                            format: int32
                                          path:
                                            description: "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                                            type: string
                                          resourceFieldRef:
                                            description: "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported."
                                            type: object
                                            required:
                                              - resource
                                            properties:
                                              containerName:
                                                description: "Container name: required for volumes, optional for env vars"
                                                type: string
                                              divisor:
                                                description: Specifies the output format of the exposed resources, defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: "Required: resource to select"
                                                type: string
                                secret:
                                  description: secret information about the secret data to project
                                  type: object
                                  properties:
                                    items:
                                      description: items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                      type: array
                                      items:
                                        description: Maps a string key to a path within a volume.
                                        type: object
                                        required:
                                          - key
                                          - path
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: "mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                            type: integer
                                            format: int32
                                          path:
                                            description: path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                            type: string
                                    name:
                                      description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                      type: string
                                    optional:
                                      description: optional field specify whether the Secret or its key must be defined
                                      type: boolean
                                serviceAccountToken:
                                  description: serviceAccountToken is information about the serviceAccountToken data to project
                                  type: object
                                  required:
                                    - path
                                  properties:
                                    audience:
                                      description: audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
                                      type: string
                                    expirationSeconds:
                                      description: expirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
                                      type: integer
                                      format: int64
                                    path:
                                      description: path is the path relative to the mount point of the file to project the token into.
                                      type: string
                      quobyte:
                        description: quobyte represents a Quobyte mount on the host that shares a pod's lifetime
                        type: object
                        required:
                          - registry
                          - volume
                        properties:
                          group:
                            description: group to map volume access to Default is no group
                            type: string
                          readOnly:
                            description: readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
                            type: boolean
                          registry:
                            description: registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
                            type: string
                          tenant:
                            description: tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                            type: string
                          user:
                            description: user to map volume access to Defaults to serivceaccount user
                            type: string
                          volume:
                            description: volume is a string that references an already created Quobyte volume by name.
                            type: string
                      rbd:
                        description: "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md"
                        type: object
                        required:
                          - image
                          - monitors
                        properties:
                          fsType:
                            description: 'fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine'
                            type: string
                          image:
                            description: "image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                            type: string
                          keyring:
                            description: "keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                            type: string
                          monitors:
                            description: "monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                            type: array
                            items:
                              type: string
                          pool:
                            description: "pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                            type: string
                          readOnly:
                            description: "readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                            type: boolean
                          secretRef:
                            description: "secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                            type: object
                            properties:
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                type: string
                          user:
                            description: "user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                            type: string
                      scaleIO:
                        description: scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
                        type: object
                        required:
                          - gateway
                          - secretRef
                          - system
                        properties:
                          fsType:
                            description: fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
                            type: string
                          gateway:
                            description: gateway is the host address of the ScaleIO API Gateway.
                            type: string
                          protectionDomain:
                            description: protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
                            type: string
                          readOnly:
                            description: readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          secretRef:
                            description: secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
                            type: object
                            properties:
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                type: string
                          sslEnabled:
                            description: sslEnabled Flag enable/disable SSL communication with Gateway, default false
                            type: boolean
                          storageMode:
                            description: storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
                            type: string
                          storagePool:
                            description: storagePool is the ScaleIO Storage Pool associated with the protection domain.
                            type: string
                          system:
                            description: system is the name of the storage system as configured in ScaleIO.
                            type: string
                          volumeName:
                            description: volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source.
                            type: string
                      secret:
                        description: "secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
                        type: object
                        properties:
                          defaultMode:
                            description: "defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                            type: integer
                            format: int32
                          items:
                            description: items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                            type: array
                            items:
                              description: Maps a string key to a path within a volume.
                              type: object
                              required:
                                - key
                                - path
                              properties:
                                key:
                                  description: key is the key to project.
                                  type: string
                                mode:
                                  description: "mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                  type: integer
                                  format: int32
                                path:
                                  description: path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                  type: string
                          optional:
                            description: optional field specify whether the Secret or its keys must be defined
                            type: boolean
                          secretName:
                            description: "secretName is the name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
                            type: string
                      storageos:
                        description: storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
                        type: object
                        properties:
                          fsType:
                            description: fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            type: string
                          readOnly:
                            description: readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                            type: boolean
                          secretRef:
                            description: secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
                            type: object
                            properties:
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                type: string
                          volumeName:
                            description: volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
                            type: string
                          volumeNamespace:
                            description: volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
                            type: string
                      vsphereVolume:
                        description: vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
                        type: object
                        required:
                          - volumePath
                        properties:
                          fsType:
                            description: fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            type: string
                          storagePolicyID:
                            description: storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
                            type: string
                          storagePolicyName:
                            description: storagePolicyName is the storage Policy Based Management (SPBM) profile name.
                            type: string
                          volumePath:
                            description: volumePath is the path that identifies vSphere volume vmdk
                            type: string
            repositoryCredentials:
              description: RepositoryCredentials are the Git pull credentials to configure Argo CD with upon creation of the cluster.
              type: string
            resourceActions:
              description: ResourceActions customizes resource action behavior.
              type: array
              items:
                description: Resource Customization for custom action
                type: object
                properties:
                  action:
                    type: string
                  group:
                    type: string
                  kind:
                    type: string
            resourceExclusions:
              description: ResourceExclusions is used to completely ignore entire classes of resource group/kinds.
              type: string
            resourceHealthChecks:
              description: ResourceHealthChecks customizes resource health check behavior.
              type: array
              items:
                description: Resource Customization for custom health check
                type: object
                properties:
                  check:
                    type: string
                  group:
                    type: string
                  kind:
                    type: string
            resourceIgnoreDifferences:
              description: ResourceIgnoreDifferences customizes resource ignore difference behavior.
              type: object
              properties:
                all:
                  type: object
                  properties:
                    jqPathExpressions:
                      type: array
                      items:
                        type: string
                    jsonPointers:
                      type: array
                      items:
                        type: string
                    managedFieldsManagers:
                      type: array
                      items:
                        type: string
                resourceIdentifiers:
                  type: array
                  items:
                    description: Resource Customization fields for ignore difference
                    type: object
                    properties:
                      customization:
                        type: object
                        properties:
                          jqPathExpressions:
                            type: array
                            items:
                              type: string
                          jsonPointers:
                            type: array
                            items:
                              type: string
                          managedFieldsManagers:
                            type: array
                            items:
                              type: string
                      group:
                        type: string
                      kind:
                        type: string
            resourceInclusions:
              description: ResourceInclusions is used to only include specific group/kinds in the reconciliation process.
              type: string
            resourceTrackingMethod:
              description: ResourceTrackingMethod defines how Argo CD should track resources that it manages
              type: string
            server:
              description: Server defines the options for the ArgoCD Server component.
              type: object
              properties:
                autoscale:
                  description: Autoscale defines the autoscale options for the Argo CD Server component.
                  type: object
                  required:
                    - enabled
                  properties:
                    enabled:
                      description: Enabled will toggle autoscaling support for the Argo CD Server component.
                      type: boolean
                    hpa:
                      description: HPA defines the HorizontalPodAutoscaler options for the Argo CD Server component.
                      type: object
                      required:
                        - maxReplicas
                        - scaleTargetRef
                      properties:
                        maxReplicas:
                          description: maxReplicas is the upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.
                          type: integer
                          format: int32
                        minReplicas:
                          description: minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.
                          type: integer
                          format: int32
                        scaleTargetRef:
                          description: reference to scaled resource; horizontal pod autoscaler will learn the current resource consumption and will set the desired number of pods by using its Scale subresource.
                          type: object
                          required:
                            - kind
                            - name
                          properties:
                            apiVersion:
                              description: apiVersion is the API version of the referent
                              type: string
                            kind:
                              description: "kind is the kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                              type: string
                            name:
                              description: "name is the name of the referent; More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              type: string
                        targetCPUUtilizationPercentage:
                          description: targetCPUUtilizationPercentage is the target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used.
                          type: integer
                          format: int32
                enabled:
                  description: Enabled is the flag to enable ArgoCD Server during ArgoCD installation. (optional, default `true`)
                  type: boolean
                env:
                  description: Env lets you specify environment for API server pods
                  type: array
                  items:
                    description: EnvVar represents an environment variable present in a Container.
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value. Cannot be used if value is not empty.
                        type: object
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            type: object
                            required:
                              - key
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its key must be defined
                                type: boolean
                          fieldRef:
                            description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                            type: object
                            required:
                              - fieldPath
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified API version.
                                type: string
                          resourceFieldRef:
                            description: "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                            type: object
                            required:
                              - resource
                            properties:
                              containerName:
                                description: "Container name: required for volumes, optional for env vars"
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed resources, defaults to "1"
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              resource:
                                description: "Required: resource to select"
                                type: string
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            type: object
                            required:
                              - key
                            properties:
                              key:
                                description: The key of the secret to select from.  Must be a valid secret key.
                                type: string
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                type: string
                              optional:
                                description: Specify whether the Secret or its key must be defined
                                type: boolean
                extraCommandArgs:
                  description: Extra Command arguments that would append to the Argo CD server command. ExtraCommandArgs will not be added, if one of these commands is already part of the server command with same or different value.
                  type: array
                  items:
                    type: string
                grpc:
                  description: GRPC defines the state for the Argo CD Server GRPC options.
                  type: object
                  properties:
                    host:
                      description: Host is the hostname to use for Ingress/Route resources.
                      type: string
                    ingress:
                      description: Ingress defines the desired state for the Argo CD Server GRPC Ingress.
                      type: object
                      required:
                        - enabled
                      properties:
                        annotations:
                          description: Annotations is the map of annotations to apply to the Ingress.
                          type: object
                          additionalProperties:
                            type: string
                        enabled:
                          description: Enabled will toggle the creation of the Ingress.
                          type: boolean
                        ingressClassName:
                          description: IngressClassName for the Ingress resource.
                          type: string
                        path:
                          description: Path used for the Ingress resource.
                          type: string
                        tls:
                          description: TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.
                          type: array
                          items:
                            description: IngressTLS describes the transport layer security associated with an ingress.
                            type: object
                            properties:
                              hosts:
                                description: hosts is a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.
                                type: array
                                items:
                                  type: string
                                x-kubernetes-list-type: atomic
                              secretName:
                                description: secretName is the name of the secret used to terminate TLS traffic on port 443. Field is left optional to allow TLS routing based on SNI hostname alone. If the SNI host in a listener conflicts with the "Host" header field used by an IngressRule, the SNI host is used for termination and value of the "Host" header is used for routing.
                                type: string
                host:
                  description: Host is the hostname to use for Ingress/Route resources.
                  type: string
                ingress:
                  description: Ingress defines the desired state for an Ingress for the Argo CD Server component.
                  type: object
                  required:
                    - enabled
                  properties:
                    annotations:
                      description: Annotations is the map of annotations to apply to the Ingress.
                      type: object
                      additionalProperties:
                        type: string
                    enabled:
                      description: Enabled will toggle the creation of the Ingress.
                      type: boolean
                    ingressClassName:
                      description: IngressClassName for the Ingress resource.
                      type: string
                    path:
                      description: Path used for the Ingress resource.
                      type: string
                    tls:
                      description: TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.
                      type: array
                      items:
                        description: IngressTLS describes the transport layer security associated with an ingress.
                        type: object
                        properties:
                          hosts:
                            description: hosts is a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.
                            type: array
                            items:
                              type: string
                            x-kubernetes-list-type: atomic
                          secretName:
                            description: secretName is the name of the secret used to terminate TLS traffic on port 443. Field is left optional to allow TLS routing based on SNI hostname alone. If the SNI host in a listener conflicts with the "Host" header field used by an IngressRule, the SNI host is used for termination and value of the "Host" header is used for routing.
                            type: string
                insecure:
                  description: Insecure toggles the insecure flag.
                  type: boolean
                logFormat:
                  description: LogFormat refers to the log level to be used by the ArgoCD Server component. Defaults to ArgoCDDefaultLogFormat if not configured. Valid options are text or json.
                  type: string
                logLevel:
                  description: LogLevel refers to the log level to be used by the ArgoCD Server component. Defaults to ArgoCDDefaultLogLevel if not set.  Valid options are debug, info, error, and warn.
                  type: string
                replicas:
                  description: Replicas defines the number of replicas for argocd-server. Default is nil. Value should be greater than or equal to 0. Value will be ignored if Autoscaler is enabled.
                  type: integer
                  format: int32
                resources:
                  description: Resources defines the Compute Resources required by the container for the Argo CD server component.
                  type: object
                  properties:
                    claims:
                      description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers."
                      type: array
                      items:
                        description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                            type: string
                      x-kubernetes-list-map-keys:
                        - name
                      x-kubernetes-list-type: map
                    limits:
                      description: "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: object
                      additionalProperties:
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    requests:
                      description: "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                      type: object
                      additionalProperties:
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                route:
                  description: Route defines the desired state for an OpenShift Route for the Argo CD Server component.
                  type: object
                  required:
                    - enabled
                  properties:
                    annotations:
                      description: Annotations is the map of annotations to use for the Route resource.
                      type: object
                      additionalProperties:
                        type: string
                    enabled:
                      description: Enabled will toggle the creation of the OpenShift Route.
                      type: boolean
                    labels:
                      description: Labels is the map of labels to use for the Route resource
                      type: object
                      additionalProperties:
                        type: string
                    path:
                      description: Path the router watches for, to route traffic for to the service.
                      type: string
                    tls:
                      description: TLS provides the ability to configure certificates and termination for the Route.
                      type: object
                      required:
                        - termination
                      properties:
                        caCertificate:
                          description: caCertificate provides the cert authority certificate contents
                          type: string
                        certificate:
                          description: certificate provides certificate contents
                          type: string
                        destinationCACertificate:
                          description: destinationCACertificate provides the contents of the ca certificate of the final destination.  When using reencrypt termination this file should be provided in order to have routers use it for health checks on the secure connection. If this field is not specified, the router may provide its own destination CA and perform hostname validation using the short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically verify.
                          type: string
                        insecureEdgeTerminationPolicy:
                          description: "insecureEdgeTerminationPolicy indicates the desired behavior for insecure connections to a route. While each router may make its own decisions on which ports to expose, this is normally port 80. \n * Allow - traffic is sent to the server on the insecure port (default) * Disable - no traffic is allowed on the insecure port. * Redirect - clients are redirected to the secure port."
                          type: string
                        key:
                          description: key provides key file contents
                          type: string
                        termination:
                          description: termination indicates termination type.
                          type: string
                    wildcardPolicy:
                      description: WildcardPolicy if any for the route. Currently only 'Subdomain' or 'None' is allowed.
                      type: string
                service:
                  description: Service defines the options for the Service backing the ArgoCD Server component.
                  type: object
                  required:
                    - type
                  properties:
                    type:
                      description: Type is the ServiceType to use for the Service resource.
                      type: string
            sourceNamespaces:
              description: SourceNamespaces defines the namespaces application resources are allowed to be created in
              type: array
              items:
                type: string
            sso:
              description: SSO defines the Single Sign-on configuration for Argo CD
              type: object
              properties:
                dex:
                  description: Dex contains the configuration for Argo CD dex authentication
                  type: object
                  properties:
                    config:
                      description: Config is the dex connector configuration.
                      type: string
                    env:
                      description: Env lets you specify environment variables for Dex.
                      type: array
                      items:
                        description: EnvVar represents an environment variable present in a Container.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: Name of the environment variable. Must be a C_IDENTIFIER.
                            type: string
                          value:
                            description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                            type: string
                          valueFrom:
                            description: Source for the environment variable's value. Cannot be used if value is not empty.
                            type: object
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or its key must be defined
                                    type: boolean
                              fieldRef:
                                description: "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                type: object
                                required:
                                  - fieldPath
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the specified API version.
                                    type: string
                              resourceFieldRef:
                                description: "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                                type: object
                                required:
                                  - resource
                                properties:
                                  containerName:
                                    description: "Container name: required for volumes, optional for env vars"
                                    type: string
                                  divisor:
                                    description: Specifies the output format of the exposed resources, defaults to "1"
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: "Required: resource to select"
                                    type: string
                              secretKeyRef:
                                description: Selects a key of a secret in the pod's namespace
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                    groups:
                      description: Optional list of required groups a user must be a member of
                      type: array
                      items:
                        type: string
                    image:
                      description: Image is the Dex container image.
                      type: string
                    openShiftOAuth:
                      description: OpenShiftOAuth enables OpenShift OAuth authentication for the Dex server.
                      type: boolean
                    resources:
                      description: Resources defines the Compute Resources required by the container for Dex.
                      type: object
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers."
                          type: array
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                                type: string
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          description: "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: object
                          additionalProperties:
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        requests:
                          description: "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: object
                          additionalProperties:
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                    version:
                      description: Version is the Dex container image tag.
                      type: string
                keycloak:
                  description: Keycloak contains the configuration for Argo CD keycloak authentication
                  type: object
                  properties:
                    host:
                      description: Host is the hostname to use for Ingress/Route resources.
                      type: string
                    image:
                      description: Image is the Keycloak container image.
                      type: string
                    resources:
                      description: Resources defines the Compute Resources required by the container for Keycloak.
                      type: object
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers."
                          type: array
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
                                type: string
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        limits:
                          description: "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: object
                          additionalProperties:
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        requests:
                          description: "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                          type: object
                          additionalProperties:
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                    rootCA:
                      description: Custom root CA certificate for communicating with the Keycloak OIDC provider
                      type: string
                    verifyTLS:
                      description: VerifyTLS set to false disables strict TLS validation.
                      type: boolean
                    version:
                      description: Version is the Keycloak container image tag.
                      type: string
                provider:
                  description: Provider installs and configures the given SSO Provider with Argo CD.
                  type: string
            statusBadgeEnabled:
              description: StatusBadgeEnabled toggles application status badge feature.
              type: boolean
            tls:
              description: TLS defines the TLS options for ArgoCD.
              type: object
              properties:
                ca:
                  description: CA defines the CA options.
                  type: object
                  properties:
                    configMapName:
                      description: ConfigMapName is the name of the ConfigMap containing the CA Certificate.
                      type: string
                    secretName:
                      description: SecretName is the name of the Secret containing the CA Certificate and Key.
                      type: string
                initialCerts:
                  description: InitialCerts defines custom TLS certificates upon creation of the cluster for connecting Git repositories via HTTPS.
                  type: object
                  additionalProperties:
                    type: string
            usersAnonymousEnabled:
              description: UsersAnonymousEnabled toggles anonymous user access. The anonymous users get default role permissions specified argocd-rbac-cm.
              type: boolean
            version:
              description: Version is the tag to use with the ArgoCD container image for all ArgoCD components.
              type: string
        status:
          description: ArgoCDStatus defines the observed state of ArgoCD
          type: object
          properties:
            applicationController:
              description: "ApplicationController is a simple, high-level summary of where the Argo CD application controller component is in its lifecycle. There are four possible ApplicationController values: Pending: The Argo CD application controller component has been accepted by the Kubernetes system, but one or more of the required resources have not been created. Running: All of the required Pods for the Argo CD application controller component are in a Ready state. Failed: At least one of the  Argo CD application controller component Pods had a failure. Unknown: The state of the Argo CD application controller component could not be obtained."
              type: string
            applicationSetController:
              description: "ApplicationSetController is a simple, high-level summary of where the Argo CD applicationSet controller component is in its lifecycle. There are four possible ApplicationSetController values: Pending: The Argo CD applicationSet controller component has been accepted by the Kubernetes system, but one or more of the required resources have not been created. Running: All of the required Pods for the Argo CD applicationSet controller component are in a Ready state. Failed: At least one of the  Argo CD applicationSet controller component Pods had a failure. Unknown: The state of the Argo CD applicationSet controller component could not be obtained."
              type: string
            host:
              description: Host is the hostname of the Ingress.
              type: string
            notificationsController:
              description: "NotificationsController is a simple, high-level summary of where the Argo CD notifications controller component is in its lifecycle. There are four possible NotificationsController values: Pending: The Argo CD notifications controller component has been accepted by the Kubernetes system, but one or more of the required resources have not been created. Running: All of the required Pods for the Argo CD notifications controller component are in a Ready state. Failed: At least one of the  Argo CD notifications controller component Pods had a failure. Unknown: The state of the Argo CD notifications controller component could not be obtained."
              type: string
            phase:
              description: "Phase is a simple, high-level summary of where the ArgoCD is in its lifecycle. There are four possible phase values: Pending: The ArgoCD has been accepted by the Kubernetes system, but one or more of the required resources have not been created. Available: All of the resources for the ArgoCD are ready. Failed: At least one resource has experienced a failure. Unknown: The state of the ArgoCD phase could not be obtained."
              type: string
            redis:
              description: "Redis is a simple, high-level summary of where the Argo CD Redis component is in its lifecycle. There are four possible redis values: Pending: The Argo CD Redis component has been accepted by the Kubernetes system, but one or more of the required resources have not been created. Running: All of the required Pods for the Argo CD Redis component are in a Ready state. Failed: At least one of the  Argo CD Redis component Pods had a failure. Unknown: The state of the Argo CD Redis component could not be obtained."
              type: string
            redisTLSChecksum:
              description: RedisTLSChecksum contains the SHA256 checksum of the latest known state of tls.crt and tls.key in the argocd-operator-redis-tls secret.
              type: string
            repo:
              description: "Repo is a simple, high-level summary of where the Argo CD Repo component is in its lifecycle. There are four possible repo values: Pending: The Argo CD Repo component has been accepted by the Kubernetes system, but one or more of the required resources have not been created. Running: All of the required Pods for the Argo CD Repo component are in a Ready state. Failed: At least one of the  Argo CD Repo component Pods had a failure. Unknown: The state of the Argo CD Repo component could not be obtained."
              type: string
            repoTLSChecksum:
              description: RepoTLSChecksum contains the SHA256 checksum of the latest known state of tls.crt and tls.key in the argocd-repo-server-tls secret.
              type: string
            server:
              description: "Server is a simple, high-level summary of where the Argo CD server component is in its lifecycle. There are four possible server values: Pending: The Argo CD server component has been accepted by the Kubernetes system, but one or more of the required resources have not been created. Running: All of the required Pods for the Argo CD server component are in a Ready state. Failed: At least one of the  Argo CD server component Pods had a failure. Unknown: The state of the Argo CD server component could not be obtained."
              type: string
            sso:
              description: "SSO is a simple, high-level summary of where the Argo CD SSO(Dex/Keycloak) component is in its lifecycle. There are four possible sso values: Pending: The Argo CD SSO component has been accepted by the Kubernetes system, but one or more of the required resources have not been created. Running: All of the required Pods for the Argo CD SSO component are in a Ready state. Failed: At least one of the  Argo CD SSO component Pods had a failure. Unknown: The state of the Argo CD SSO component could not be obtained."
              type: string
      x-kubernetes-group-version-kind:
        - group: argoproj.io
          kind: ArgoCD
          version: v1beta1
    io.argoproj.v1beta1.ArgoCDList:
      description: ArgoCDList is a list of ArgoCD
      type: object
      required:
        - items
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          description: "List of argocds. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md"
          type: array
          items:
            $ref: "#/components/schemas/io.argoproj.v1beta1.ArgoCD"
        kind:
          description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
      x-kubernetes-group-version-kind:
        - group: argoproj.io
          kind: ArgoCDList
          version: v1beta1
    io.cncf.cni.k8s.v1.NetworkAttachmentDefinition:
      description: "NetworkAttachmentDefinition is a CRD schema specified by the Network Plumbing Working Group to express the intent for attaching pods to one or more logical or physical networks. More information available at: https://github.com/k8snetworkplumbingwg/multi-net-spec"
      type: object
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        spec:
          description: NetworkAttachmentDefinition spec defines the desired state of a network attachment
          type: object
          properties:
            config:
              description: NetworkAttachmentDefinition config is a JSON-formatted CNI configuration
              type: string
      x-kubernetes-group-version-kind:
        - group: k8s.cni.cncf.io
          kind: NetworkAttachmentDefinition
          version: v1
    io.cncf.cni.k8s.v1.NetworkAttachmentDefinitionList:
      description: NetworkAttachmentDefinitionList is a list of NetworkAttachmentDefinition
      type: object
      required:
        - items
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          description: "List of network-attachment-definitions. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md"
          type: array
          items:
            $ref: "#/components/schemas/io.cncf.cni.k8s.v1.NetworkAttachmentDefinition"
        kind:
          description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
      x-kubernetes-group-version-kind:
        - group: k8s.cni.cncf.io
          kind: NetworkAttachmentDefinitionList
          version: v1
    io.cncf.cni.whereabouts.v1alpha1.IPPool:
      description: IPPool is the Schema for Whereabouts for IP address allocation
      type: object
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        spec:
          description: IPPoolSpec defines the desired state of IPPool
          type: object
          required:
            - allocations
            - range
          properties:
            allocations:
              description: Allocations is the set of allocated IPs for the given range. Its indices are a direct mapping to the IP with the same index/offset for the pool's range.
              type: object
              additionalProperties:
                description: IPAllocation represents metadata about the pod/container owner of a specific IP
                type: object
                required:
                  - id
                properties:
                  id:
                    type: string
                  podref:
                    type: string
            range:
              description: Range is a RFC 4632/4291-style string that represents an IP address and prefix length in CIDR notation
              type: string
      x-kubernetes-group-version-kind:
        - group: whereabouts.cni.cncf.io
          kind: IPPool
          version: v1alpha1
    io.cncf.cni.whereabouts.v1alpha1.IPPoolList:
      description: IPPoolList is a list of IPPool
      type: object
      required:
        - items
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          description: "List of ippools. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md"
          type: array
          items:
            $ref: "#/components/schemas/io.cncf.cni.whereabouts.v1alpha1.IPPool"
        kind:
          description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
      x-kubernetes-group-version-kind:
        - group: whereabouts.cni.cncf.io
          kind: IPPoolList
          version: v1alpha1
    io.cncf.cni.whereabouts.v1alpha1.OverlappingRangeIPReservation:
      description: OverlappingRangeIPReservation is the Schema for the OverlappingRangeIPReservations API
      type: object
      required:
        - spec
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        spec:
          description: OverlappingRangeIPReservationSpec defines the desired state of OverlappingRangeIPReservation
          type: object
          required:
            - containerid
          properties:
            containerid:
              type: string
            podref:
              type: string
      x-kubernetes-group-version-kind:
        - group: whereabouts.cni.cncf.io
          kind: OverlappingRangeIPReservation
          version: v1alpha1
    io.cncf.cni.whereabouts.v1alpha1.OverlappingRangeIPReservationList:
      description: OverlappingRangeIPReservationList is a list of OverlappingRangeIPReservation
      type: object
      required:
        - items
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          description: "List of overlappingrangeipreservations. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md"
          type: array
          items:
            $ref: "#/components/schemas/io.cncf.cni.whereabouts.v1alpha1.OverlappingRangeIPReservation"
        kind:
          description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
      x-kubernetes-group-version-kind:
        - group: whereabouts.cni.cncf.io
          kind: OverlappingRangeIPReservationList
          version: v1alpha1
    io.k8s.api.admissionregistration.v1.MatchCondition:
      description: MatchCondition represents a condition which must by fulfilled for a request to be sent to a webhook.
      type: object
      required:
        - name
        - expression
      properties:
        expression:
          description: |-
            Expression represents the expression which will be evaluated by CEL. Must evaluate to bool. CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:

            'object' - The object from the incoming request. The value is null for DELETE requests. 'oldObject' - The existing object. The value is null for CREATE requests. 'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.
              See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz
            'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the
              request resource.
            Documentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/

            Required.
          type: string
        name:
          description: |-
            Name is an identifier for this match condition, used for strategic merging of MatchConditions, as well as providing an identifier for logging purposes. A good name should be descriptive of the associated expression. Name must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')

            Required.
          type: string
    io.k8s.api.admissionregistration.v1.MutatingWebhook:
      description: MutatingWebhook describes an admission webhook and the resources and operations it applies to.
      type: object
      required:
        - name
        - clientConfig
        - sideEffects
        - admissionReviewVersions
      properties:
        admissionReviewVersions:
          description: AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy.
          type: array
          items:
            type: string
        clientConfig:
          $ref: "#/components/schemas/io.k8s.api.admissionregistration.v1.WebhookClientConfig"
        failurePolicy:
          description: |-
            FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Fail.

            Possible enum values:
            - `"Fail"` means that an error calling the webhook causes the admission to fail.
            - `"Ignore"` means that an error calling the webhook is ignored.
          type: string
          enum:
            - Fail
            - Ignore
        matchConditions:
          description: |-
            MatchConditions is a list of conditions that must be met for a request to be sent to this webhook. Match conditions filter requests that have already been matched by the rules, namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests. There are a maximum of 64 match conditions allowed.

            The exact matching logic is (in order):
              1. If ANY matchCondition evaluates to FALSE, the webhook is skipped.
              2. If ALL matchConditions evaluate to TRUE, the webhook is called.
              3. If any matchCondition evaluates to an error (but none are FALSE):
                - If failurePolicy=Fail, reject the request
                - If failurePolicy=Ignore, the error is ignored and the webhook is skipped

            This is an alpha feature and managed by the AdmissionWebhookMatchConditions feature gate.
          type: array
          items:
            $ref: "#/components/schemas/io.k8s.api.admissionregistration.v1.MatchCondition"
          x-kubernetes-list-map-keys:
            - name
          x-kubernetes-list-type: map
          x-kubernetes-patch-merge-key: name
          x-kubernetes-patch-strategy: merge
        matchPolicy:
          description: |-
            matchPolicy defines how the "rules" list is used to match incoming requests. Allowed values are "Exact" or "Equivalent".

            - Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.

            - Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.

            Defaults to "Equivalent"

            Possible enum values:
            - `"Equivalent"` means requests should be sent to the webhook if they modify a resource listed in rules via another API group or version.
            - `"Exact"` means requests should only be sent to the webhook if they exactly match a given rule.
          type: string
          enum:
            - Equivalent
            - Exact
        name:
          description: The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where "imagepolicy" is the name of the webhook, and kubernetes.io is the name of the organization. Required.
          type: string
        namespaceSelector:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        objectSelector:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        reinvocationPolicy:
          description: |-
            reinvocationPolicy indicates whether this webhook should be called multiple times as part of a single admission evaluation. Allowed values are "Never" and "IfNeeded".

            Never: the webhook will not be called more than once in a single admission evaluation.

            IfNeeded: the webhook will be called at least one additional time as part of the admission evaluation if the object being admitted is modified by other admission plugins after the initial webhook call. Webhooks that specify this option *must* be idempotent, able to process objects they previously admitted. Note: * the number of additional invocations is not guaranteed to be exactly one. * if additional invocations result in further modifications to the object, webhooks are not guaranteed to be invoked again. * webhooks that use this option may be reordered to minimize the number of additional invocations. * to validate an object after all mutations are guaranteed complete, use a validating admission webhook instead.

            Defaults to "Never".

            Possible enum values:
            - `"IfNeeded"` indicates that the webhook may be called at least one additional time as part of the admission evaluation if the object being admitted is modified by other admission plugins after the initial webhook call.
            - `"Never"` indicates that the webhook must not be called more than once in a single admission evaluation.
          type: string
          enum:
            - IfNeeded
            - Never
        rules:
          description: Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.
          type: array
          items:
            $ref: "#/components/schemas/io.k8s.api.admissionregistration.v1.RuleWithOperations"
        sideEffects:
          description: |-
            SideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission chain and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.

            Possible enum values:
            - `"None"` means that calling the webhook will have no side effects.
            - `"NoneOnDryRun"` means that calling the webhook will possibly have side effects, but if the request being reviewed has the dry-run attribute, the side effects will be suppressed.
            - `"Some"` means that calling the webhook will possibly have side effects. If a request with the dry-run attribute would trigger a call to this webhook, the request will instead fail.
            - `"Unknown"` means that no information is known about the side effects of calling the webhook. If a request with the dry-run attribute would trigger a call to this webhook, the request will instead fail.
          type: string
          enum:
            - None
            - NoneOnDryRun
            - Some
            - Unknown
        timeoutSeconds:
          description: TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.
          type: integer
          format: int32
    io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta:
      description: ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
      type: object
      properties:
        continue:
          description: continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.
          type: string
        remainingItemCount:
          description: remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.
          type: integer
          format: int64
        resourceVersion:
          description: "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
          type: string
        selfLink:
          description: "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system."
          type: string
    io.k8s.api.admissionregistration.v1.ValidatingWebhook:
      description: ValidatingWebhook describes an admission webhook and the resources and operations it applies to.
      type: object
      required:
        - name
        - clientConfig
        - sideEffects
        - admissionReviewVersions
      properties:
        admissionReviewVersions:
          description: AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy.
          type: array
          items:
            type: string
        clientConfig:
          $ref: "#/components/schemas/io.k8s.api.admissionregistration.v1.WebhookClientConfig"
        failurePolicy:
          description: |-
            FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Fail.

            Possible enum values:
            - `"Fail"` means that an error calling the webhook causes the admission to fail.
            - `"Ignore"` means that an error calling the webhook is ignored.
          type: string
          enum:
            - Fail
            - Ignore
        matchConditions:
          description: |-
            MatchConditions is a list of conditions that must be met for a request to be sent to this webhook. Match conditions filter requests that have already been matched by the rules, namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests. There are a maximum of 64 match conditions allowed.

            The exact matching logic is (in order):
              1. If ANY matchCondition evaluates to FALSE, the webhook is skipped.
              2. If ALL matchConditions evaluate to TRUE, the webhook is called.
              3. If any matchCondition evaluates to an error (but none are FALSE):
                - If failurePolicy=Fail, reject the request
                - If failurePolicy=Ignore, the error is ignored and the webhook is skipped

            This is an alpha feature and managed by the AdmissionWebhookMatchConditions feature gate.
          type: array
          items:
            $ref: "#/components/schemas/io.k8s.api.admissionregistration.v1.MatchCondition"
          x-kubernetes-list-map-keys:
            - name
          x-kubernetes-list-type: map
          x-kubernetes-patch-merge-key: name
          x-kubernetes-patch-strategy: merge
        matchPolicy:
          description: |-
            matchPolicy defines how the "rules" list is used to match incoming requests. Allowed values are "Exact" or "Equivalent".

            - Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.

            - Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.

            Defaults to "Equivalent"

            Possible enum values:
            - `"Equivalent"` means requests should be sent to the webhook if they modify a resource listed in rules via another API group or version.
            - `"Exact"` means requests should only be sent to the webhook if they exactly match a given rule.
          type: string
          enum:
            - Equivalent
            - Exact
        name:
          description: The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where "imagepolicy" is the name of the webhook, and kubernetes.io is the name of the organization. Required.
          type: string
        namespaceSelector:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        objectSelector:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        rules:
          description: Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.
          type: array
          items:
            $ref: "#/components/schemas/io.k8s.api.admissionregistration.v1.RuleWithOperations"
        sideEffects:
          description: |-
            SideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission chain and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.

            Possible enum values:
            - `"None"` means that calling the webhook will have no side effects.
            - `"NoneOnDryRun"` means that calling the webhook will possibly have side effects, but if the request being reviewed has the dry-run attribute, the side effects will be suppressed.
            - `"Some"` means that calling the webhook will possibly have side effects. If a request with the dry-run attribute would trigger a call to this webhook, the request will instead fail.
            - `"Unknown"` means that no information is known about the side effects of calling the webhook. If a request with the dry-run attribute would trigger a call to this webhook, the request will instead fail.
          type: string
          enum:
            - None
            - NoneOnDryRun
            - Some
            - Unknown
        timeoutSeconds:
          description: TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.
          type: integer
          format: int32
    io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration:
      description: ValidatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and object without changing it.
      type: object
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        webhooks:
          description: Webhooks is a list of webhooks and the affected resources and operations.
          type: array
          items:
            $ref: "#/components/schemas/io.k8s.api.admissionregistration.v1.ValidatingWebhook"
          x-kubernetes-patch-merge-key: name
          x-kubernetes-patch-strategy: merge
      x-kubernetes-group-version-kind:
        - group: admissionregistration.k8s.io
          kind: ValidatingWebhookConfiguration
          version: v1
    io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList:
      description: ValidatingWebhookConfigurationList is a list of ValidatingWebhookConfiguration.
      type: object
      required:
        - items
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          description: List of ValidatingWebhookConfiguration.
          type: array
          items:
            $ref: "#/components/schemas/io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration"
        kind:
          description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
      x-kubernetes-group-version-kind:
        - group: admissionregistration.k8s.io
          kind: ValidatingWebhookConfigurationList
          version: v1
    io.k8s.api.admissionregistration.v1.WebhookClientConfig:
      description: WebhookClientConfig contains the information to make a TLS connection with the webhook
      type: object
      properties:
        caBundle:
          description: "`caBundle` is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used."
          type: string
          format: byte
        service:
          $ref: "#/components/schemas/io.k8s.api.admissionregistration.v1.ServiceReference"
        url:
          description: |-
            `url` gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.

            The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.

            Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.

            The scheme must be "https"; the URL must begin with "https://".

            A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.

            Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.
          type: string
    io.k8s.api.admissionregistration.v1.ServiceReference:
      description: ServiceReference holds a reference to Service.legacy.k8s.io
      type: object
      required:
        - namespace
        - name
      properties:
        name:
          description: "`name` is the name of the service. Required"
          type: string
        namespace:
          description: "`namespace` is the namespace of the service. Required"
          type: string
        path:
          description: "`path` is an optional URL path which will be sent in any request to this service."
          type: string
        port:
          description: If specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).
          type: integer
          format: int32
    io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector:
      description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
      type: object
      properties:
        matchExpressions:
          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
          type: array
          items:
            $ref: "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement"
        matchLabels:
          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
          type: object
          additionalProperties:
            type: string
      x-kubernetes-map-type: atomic
    io.k8s.api.admissionregistration.v1.RuleWithOperations:
      description: RuleWithOperations is a tuple of Operations and Resources. It is recommended to make sure that all the tuple expansions are valid.
      type: object
      properties:
        apiGroups:
          description: APIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required.
          type: array
          items:
            type: string
          x-kubernetes-list-type: atomic
        apiVersions:
          description: APIVersions is the API versions the resources belong to. '*' is all versions. If '*' is present, the length of the slice must be one. Required.
          type: array
          items:
            type: string
          x-kubernetes-list-type: atomic
        operations:
          description: Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations and any future admission operations that are added. If '*' is present, the length of the slice must be one. Required.
          type: array
          items:
            type: string
          x-kubernetes-list-type: atomic
        resources:
          description: |-
            Resources is a list of resources this rule applies to.

            For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '*/scale' means all scale subresources. '*/*' means all resources and their subresources.

            If wildcard is present, the validation rule will ensure resources do not overlap with each other.

            Depending on the enclosing object, subresources might not be allowed. Required.
          type: array
          items:
            type: string
          x-kubernetes-list-type: atomic
        scope:
          description: scope specifies the scope of this rule. Valid values are "Cluster", "Namespaced", and "*" "Cluster" means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. "Namespaced" means that only namespaced resources will match this rule. "*" means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is "*".
          type: string
    io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement:
      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
      type: object
      required:
        - key
        - operator
      properties:
        key:
          description: key is the label key that the selector applies to.
          type: string
          x-kubernetes-patch-merge-key: key
          x-kubernetes-patch-strategy: merge
        operator:
          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
          type: string
        values:
          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
          type: array
          items:
            type: string
  parameters: {}
  securitySchemes:
    BearerToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
