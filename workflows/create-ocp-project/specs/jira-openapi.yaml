---
openapi: 3.0.1
info:
  title: JIRA Actions for BS API
  description: JIRA Actions BS API
  version: 0.0.1
paths:
  /rest/api/2/issue/{issueIdOrKey}/transitions:
    post:
      tags:
        - Issues
      summary: Transition issue
      description: Performs an issue transition and, if the transition has a screen, updates the fields from the transition screen.
      operationId: transitionIssue
      parameters:
        - name: issueIdOrKey
          in: path
          description: The ID or key of the issue.
          required: true
          schema:
            type: string
      requestBody:
        description: Input parameters for the action transitionIssue in BS
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransitionIssue'
      responses:
        default:
          description: Transition Issue Response
          content:
            application/json:
              schema:
                type: object
      deprecated: false
      security:
        - basicAuth: []
    get:
      tags:
        - Issues
      summary: Get issue transitions
      description: Get issue transitions
      operationId: getIssueTransitions
      parameters:
        - name: issueIdOrKey
          in: path
          description: The ID or key of the issue.
          required: true
          schema:
            type: string
      responses:
        default:
          description: Transition Issue Response
          content:
            application/json:
              schema:
                type: object
      deprecated: false
      security:
        - basicAuth: []
  /rest/api/2/issue/{issueIdOrKey}:
    get:
      deprecated: false
      security:
      - basicAuth: []
      description: |-
        Returns the details for an issue.

        The issue is identified by its ID or key, however, if the identifier doesn't match an issue, a case-insensitive search and check for moved issues is performed. If a matching issue is found its details are returned, a 302 or other redirect is **not** returned. The issue key returned in the response is the key of the issue found.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: getIssue
      parameters:
      - description: The ID or key of the issue.
        in: path
        name: issueIdOrKey
        required: true
        schema:
          type: string
      - description: |-
          A list of fields to return for the issue. This parameter accepts a comma-separated list. Use it to retrieve a subset of fields. Allowed values:

           *  `*all` Returns all fields.
           *  `*navigable` Returns navigable fields.
           *  Any issue field, prefixed with a minus to exclude.

          Examples:

           *  `summary,comment` Returns only the summary and comments fields.
           *  `-description` Returns all (default) fields except description.
           *  `*navigable,-comment` Returns all navigable fields except comment.

          This parameter may be specified multiple times. For example, `fields=field1,field2& fields=field3`.

          Note: All fields are returned by default. This differs from [Search for issues using JQL (GET)](#api-rest-api-2-search-get) and [Search for issues using JQL (POST)](#api-rest-api-2-search-post) where the default is all navigable fields.
        in: query
        name: fields
        schema:
          items:
            default: "*all"
            type: string
          type: array
      - description: Whether fields in `fields` are referenced by keys rather than
          IDs. This parameter is useful where fields have been added by a connect
          app and a field's key may differ from its ID.
        in: query
        name: fieldsByKeys
        schema:
          default: false
          type: boolean
      - description: |-
          Use [expand](#expansion) to include additional information about the issues in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `renderedFields` Returns field values rendered in HTML format.
           *  `names` Returns the display name of each field.
           *  `schema` Returns the schema describing a field type.
           *  `transitions` Returns all possible transitions for the issue.
           *  `editmeta` Returns information about how each field can be edited.
           *  `changelog` Returns a list of recent updates to an issue, sorted by date, starting from the most recent.
           *  `versionedRepresentations` Returns a JSON array for each version of a field's value, with the highest number representing the most recent version. Note: When included in the request, the `fields` parameter is ignored.
        in: query
        name: expand
        schema:
          type: string
      - description: |-
          A list of issue properties to return for the issue. This parameter accepts a comma-separated list. Allowed values:

           *  `*all` Returns all issue properties.
           *  Any issue property key, prefixed with a minus to exclude.

          Examples:

           *  `*all` Returns all properties.
           *  `*all,-prop1` Returns all properties except `prop1`.
           *  `prop1,prop2` Returns `prop1` and `prop2` properties.

          This parameter may be specified multiple times. For example, `properties=prop1,prop2& properties=prop3`.
        in: query
        name: properties
        schema:
          items:
            default: 'null'
            type: string
          type: array
      - description: Whether the project in which the issue is created is added to
          the user's **Recently viewed** project list, as shown under **Projects**
          in Jira. This also populates the [JQL issues search](#api-rest-api-2-search-get)
          `lastViewed` field.
        in: query
        name: updateHistory
        schema:
          default: false
          type: boolean
      responses:
        '200':
          content:
            application/json:
              example: '{"fields":{"watcher":{"isWatching":false,"self":"https://your-domain.atlassian.net/rest/api/2/issue/EX-1/watchers","watchCount":1,"watchers":[{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/2/user?accountId=5b10a2844c20165700ede21g"}]},"attachment":[{"author":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/2/user?accountId=5b10a2844c20165700ede21g"},"content":"https://your-domain.atlassian.net/jira/rest/api/3/attachment/content/10001","created":"2023-06-24T19:24:50.000+0000","filename":"debuglog.txt","id":10001,"mimeType":"text/plain","self":"https://your-domain.atlassian.net/rest/api/2/attachments/10001","size":2460}],"sub-tasks":[{"id":"10000","outwardIssue":{"fields":{"status":{"iconUrl":"https://your-domain.atlassian.net/images/icons/statuses/open.png","name":"Open"}},"id":"10003","key":"ED-2","self":"https://your-domain.atlassian.net/rest/api/2/issue/ED-2"},"type":{"id":"10000","inward":"Parent","name":"","outward":"Sub-task"}}],"description":"Main
                order flow broken","project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"EX","name":"Example","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/2/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/2/project/EX","simplified":false,"style":"classic"},"comment":[{"author":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/2/user?accountId=5b10a2844c20165700ede21g"},"body":"Lorem
                ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget
                venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper
                quam laoreet nisi egestas at posuere augue semper.","created":"2021-01-17T12:34:00.000+0000","id":"10000","self":"https://your-domain.atlassian.net/rest/api/2/issue/10010/comment/10000","updateAuthor":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/2/user?accountId=5b10a2844c20165700ede21g"},"updated":"2021-01-18T23:45:00.000+0000","visibility":{"identifier":"Administrators","type":"role","value":"Administrators"}}],"issuelinks":[{"id":"10001","outwardIssue":{"fields":{"status":{"iconUrl":"https://your-domain.atlassian.net/images/icons/statuses/open.png","name":"Open"}},"id":"10004L","key":"PR-2","self":"https://your-domain.atlassian.net/rest/api/2/issue/PR-2"},"type":{"id":"10000","inward":"depends
                on","name":"Dependent","outward":"is depended by"}},{"id":"10002","inwardIssue":{"fields":{"status":{"iconUrl":"https://your-domain.atlassian.net/images/icons/statuses/open.png","name":"Open"}},"id":"10004","key":"PR-3","self":"https://your-domain.atlassian.net/rest/api/2/issue/PR-3"},"type":{"id":"10000","inward":"depends
                on","name":"Dependent","outward":"is depended by"}}],"worklog":[{"author":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/2/user?accountId=5b10a2844c20165700ede21g"},"comment":"I
                did some work here.","id":"100028","issueId":"10002","self":"https://your-domain.atlassian.net/rest/api/2/issue/10010/worklog/10000","started":"2021-01-17T12:34:00.000+0000","timeSpent":"3h
                20m","timeSpentSeconds":12000,"updateAuthor":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/2/user?accountId=5b10a2844c20165700ede21g"},"updated":"2021-01-18T23:45:00.000+0000","visibility":{"identifier":"276f955c-63d7-42c8-9520-92d01dca0625","type":"group","value":"jira-developers"}}],"updated":1,"timetracking":{"originalEstimate":"10m","originalEstimateSeconds":600,"remainingEstimate":"3m","remainingEstimateSeconds":200,"timeSpent":"6m","timeSpentSeconds":400}},"id":"10002","key":"ED-1","self":"https://your-domain.atlassian.net/rest/api/2/issue/10002"}'
              schema:
                "$ref": "#/components/schemas/IssueBean"
          description: Returned if the request is successful.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the issue is not found or the user does not have
            permission to view it.
      summary: Get issue
      tags:
      - Issues
      x-atlassian-connect-scope: READ
  /rest/api/2/issue:
    post:
      tags:
      - Issues
      summary: Create issue
      description: |-
        Creates an issue or, where the option to create subtasks is enabled in Jira, a subtask. A transition may be applied, to move the issue or subtask to a workflow step other than the default start step, and issue properties set.

        The content of the issue or subtask is defined using `update` and `fields`. The fields that can be set in the issue or subtask are determined using the [ Get create issue metadata](#api-rest-api-3-issue-createmeta-get). These are the same fields that appear on the issue's create screen. Note that the `description`, `environment`, and any `textarea` type custom fields (multi-line text fields) take Atlassian Document Format content. Single line custom fields (`textfield`) accept a string and don't handle Atlassian Document Format content.

        Creating a subtask differs from creating an issue as follows:

         *  `issueType` must be set to a subtask issue type (use [ Get create issue metadata](#api-rest-api-3-issue-createmeta-get) to find subtask issue types).
         *  `parent` must contain the ID or key of the parent issue.

        In a next-gen project any issue may be made a child providing that the parent and child are members of the same project.

        **[Permissions](#permissions) required:** *Browse projects* and *Create issues* [project permissions](https://confluence.atlassian.com/x/yodKLg) for the project in which the issue or subtask is created.
      operationId: createIssue
      parameters:
      - name: updateHistory
        in: query
        description: Whether the project in which the issue is created is added to
          the user's **Recently viewed** project list, as shown under **Projects**
          in Jira. When provided, the issue type and request type are added to the
          user's history for a project. These values are then used to provide defaults
          on the issue create screen.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Input parameters for the action createIssue in BS
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/IssueUpdateDetails"
      responses:
        default:
          description: Create Issue Response
          content:
            application/json:
              schema:
                type: object
      deprecated: false
      security:
      - basicAuth: []
components:
  schemas:
    TransitionIssue:
      type: object
      properties:
        transition:
          type: object
          properties:
            id:
              type: string
        update:
          type: object
          properties:
            comment:
              type: array
              items:
                type: object
                properties:
                  add:
                    type: object
                    properties:
                      body:
                        type: string
    ChangeDetails:
      additionalProperties: false
      description: A change item.
      properties:
        field:
          description: The name of the field changed.
          readOnly: true
          type: string
        fieldId:
          description: The ID of the field changed.
          readOnly: true
          type: string
        fieldtype:
          description: The type of the field changed.
          readOnly: true
          type: string
        from:
          description: The details of the original value.
          readOnly: true
          type: string
        fromString:
          description: The details of the original value as a string.
          readOnly: true
          type: string
        to:
          description: The details of the new value.
          readOnly: true
          type: string
        toString:
          description: The details of the new value as a string.
          readOnly: true
          type: string
      type: object
    HistoryMetadataParticipant:
      additionalProperties: true
      description: Details of user or system associated with a issue history metadata
        item.
      properties:
        avatarUrl:
          description: The URL to an avatar for the user or system associated with
            a history record.
          type: string
        displayName:
          description: The display name of the user or system associated with a history
            record.
          type: string
        displayNameKey:
          description: The key of the display name of the user or system associated
            with a history record.
          type: string
        id:
          description: The ID of the user or system associated with a history record.
          type: string
        type:
          description: The type of the user or system associated with a history record.
          type: string
        url:
          description: The URL of the user or system associated with a history record.
          type: string
      type: object
    HistoryMetadata:
      additionalProperties: true
      description: Details of issue history metadata.
      properties:
        activityDescription:
          description: The activity described in the history record.
          type: string
        activityDescriptionKey:
          description: The key of the activity described in the history record.
          type: string
        actor:
          allOf:
          - "$ref": "#/components/schemas/HistoryMetadataParticipant"
          description: Details of the user whose action created the history record.
        cause:
          allOf:
          - "$ref": "#/components/schemas/HistoryMetadataParticipant"
          description: Details of the cause that triggered the creation the history
            record.
        description:
          description: The description of the history record.
          type: string
        descriptionKey:
          description: The description key of the history record.
          type: string
        emailDescription:
          description: The description of the email address associated the history
            record.
          type: string
        emailDescriptionKey:
          description: The description key of the email address associated the history
            record.
          type: string
        extraData:
          additionalProperties:
            type: string
          description: Additional arbitrary information about the history record.
          type: object
        generator:
          allOf:
          - "$ref": "#/components/schemas/HistoryMetadataParticipant"
          description: Details of the system that generated the history record.
        type:
          description: The type of the history record.
          type: string
      type: object
    AvatarUrlsBean:
      additionalProperties: false
      properties:
        16x16:
          description: The URL of the item's 16x16 pixel avatar.
          format: uri
          type: string
        24x24:
          description: The URL of the item's 24x24 pixel avatar.
          format: uri
          type: string
        32x32:
          description: The URL of the item's 32x32 pixel avatar.
          format: uri
          type: string
        48x48:
          description: The URL of the item's 48x48 pixel avatar.
          format: uri
          type: string
      type: object
    UserDetails:
      additionalProperties: false
      description: |-
        User details permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

         *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, `displayName` provides an indication and other parameters have default values or are blank (for example, email is blank).
         *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, `accountId` returns *unknown* and all other parameters have fallback values.
         *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
      properties:
        accountId:
          description: The account ID of the user, which uniquely identifies the user
            across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
          maxLength: 128
          type: string
        accountType:
          description: The type of account represented by this user. This will be
            one of 'atlassian' (normal users), 'app' (application user) or 'customer'
            (Jira Service Desk customer user)
          readOnly: true
          type: string
        active:
          description: Whether the user is active.
          readOnly: true
          type: boolean
        avatarUrls:
          allOf:
          - "$ref": "#/components/schemas/AvatarUrlsBean"
          description: The avatars of the user.
          readOnly: true
        displayName:
          description: The display name of the user. Depending on the user’s privacy
            settings, this may return an alternative value.
          readOnly: true
          type: string
        emailAddress:
          description: The email address of the user. Depending on the user’s privacy
            settings, this may be returned as null.
          readOnly: true
          type: string
        key:
          description: This property is no longer available and will be removed from
            the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
            for details.
          readOnly: true
          type: string
        name:
          description: This property is no longer available and will be removed from
            the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
            for details.
          readOnly: true
          type: string
        self:
          description: The URL of the user.
          readOnly: true
          type: string
        timeZone:
          description: The time zone specified in the user's profile. Depending on
            the user’s privacy settings, this may be returned as null.
          readOnly: true
          type: string
      type: object
    Changelog:
      additionalProperties: false
      description: A log of changes made to issue fields. Changelogs related to workflow
        associations are currently being deprecated.
      properties:
        author:
          allOf:
          - "$ref": "#/components/schemas/UserDetails"
          description: The user who made the change.
          readOnly: true
        created:
          description: The date on which the change took place.
          format: date-time
          readOnly: true
          type: string
        historyMetadata:
          allOf:
          - "$ref": "#/components/schemas/HistoryMetadata"
          description: The history metadata associated with the changed.
          readOnly: true
        id:
          description: The ID of the changelog.
          readOnly: true
          type: string
        items:
          description: The list of items changed.
          items:
            "$ref": "#/components/schemas/ChangeDetails"
          readOnly: true
          type: array
      type: object
    PageOfChangelogs:
      additionalProperties: false
      description: A page of changelogs.
      properties:
        histories:
          description: The list of changelogs.
          items:
            "$ref": "#/components/schemas/Changelog"
          readOnly: true
          type: array
        maxResults:
          description: The maximum number of results that could be on the page.
          format: int32
          readOnly: true
          type: integer
        startAt:
          description: The index of the first item returned on the page.
          format: int32
          readOnly: true
          type: integer
        total:
          description: The number of results on the page.
          format: int32
          readOnly: true
          type: integer
      type: object
    IssueUpdateMetadata:
      description: A list of editable field details.
      properties:
        fields:
          additionalProperties:
            "$ref": "#/components/schemas/FieldMetadata"
          readOnly: true
          type: object
      type: object
    FieldMetadata:
      additionalProperties: false
      description: The metadata describing an issue field.
      properties:
        allowedValues:
          description: The list of values allowed in the field.
          items:
            readOnly: true
          readOnly: true
          type: array
        autoCompleteUrl:
          description: The URL that can be used to automatically complete the field.
          readOnly: true
          type: string
        configuration:
          additionalProperties:
            readOnly: true
          description: The configuration properties.
          readOnly: true
          type: object
        defaultValue:
          description: The default value of the field.
          readOnly: true
        hasDefaultValue:
          description: Whether the field has a default value.
          readOnly: true
          type: boolean
        key:
          description: The key of the field.
          readOnly: true
          type: string
        name:
          description: The name of the field.
          readOnly: true
          type: string
        operations:
          description: The list of operations that can be performed on the field.
          items:
            readOnly: true
            type: string
          readOnly: true
          type: array
        required:
          description: Whether the field is required.
          readOnly: true
          type: boolean
        schema:
          allOf:
          - "$ref": "#/components/schemas/JsonTypeBean"
          description: The data type of the field.
          readOnly: true
      required:
      - key
      - name
      - operations
      - required
      - schema
      type: object
      xml:
        name: availableField
    JsonTypeBean:
      additionalProperties: false
      description: The schema of a field.
      properties:
        configuration:
          additionalProperties:
            readOnly: true
          description: If the field is a custom field, the configuration of the field.
          readOnly: true
          type: object
        custom:
          description: If the field is a custom field, the URI of the field.
          readOnly: true
          type: string
        customId:
          description: If the field is a custom field, the custom ID of the field.
          format: int64
          readOnly: true
          type: integer
        items:
          description: When the data type is an array, the name of the field items
            within the array.
          readOnly: true
          type: string
        system:
          description: If the field is a system field, the name of the field.
          readOnly: true
          type: string
        type:
          description: The data type of the field.
          readOnly: true
          type: string
      required:
      - type
      type: object
    IncludedFields:
      additionalProperties: false
      properties:
        actuallyIncluded:
          items:
            type: string
          type: array
          uniqueItems: true
        excluded:
          items:
            type: string
          type: array
          uniqueItems: true
        included:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    Operations:
      additionalProperties: true
      description: Details of the operations that can be performed on the issue.
      properties:
        linkGroups:
          description: Details of the link groups defining issue operations.
          items:
            "$ref": "#/components/schemas/LinkGroup"
          readOnly: true
          type: array
      type: object
    LinkGroup:
      additionalProperties: false
      description: Details a link group, which defines issue operations.
      properties:
        groups:
          items:
            "$ref": "#/components/schemas/LinkGroup"
          type: array
        header:
          "$ref": "#/components/schemas/SimpleLink"
        id:
          type: string
        links:
          items:
            "$ref": "#/components/schemas/SimpleLink"
          type: array
        styleClass:
          type: string
        weight:
          format: int32
          type: integer
      type: object
    SimpleLink:
      additionalProperties: false
      description: Details about the operations available in this version.
      properties:
        href:
          type: string
        iconClass:
          type: string
        id:
          type: string
        label:
          type: string
        styleClass:
          type: string
        title:
          type: string
        weight:
          format: int32
          type: integer
      type: object
      xml:
        name: link
    IssueTransition:
      additionalProperties: true
      description: Details of an issue transition.
      properties:
        expand:
          description: Expand options that include additional transition details in
            the response.
          readOnly: true
          type: string
        fields:
          additionalProperties:
            "$ref": "#/components/schemas/FieldMetadata"
          description: Details of the fields associated with the issue transition
            screen. Use this information to populate `fields` and `update` in a transition
            request.
          readOnly: true
          type: object
        hasScreen:
          description: Whether there is a screen associated with the issue transition.
          readOnly: true
          type: boolean
        id:
          description: The ID of the issue transition. Required when specifying a
            transition to undertake.
          type: string
        isAvailable:
          description: Whether the transition is available to be performed.
          readOnly: true
          type: boolean
        isConditional:
          description: Whether the issue has to meet criteria before the issue transition
            is applied.
          readOnly: true
          type: boolean
        isGlobal:
          description: Whether the issue transition is global, that is, the transition
            is applied to issues regardless of their status.
          readOnly: true
          type: boolean
        isInitial:
          description: Whether this is the initial issue transition for the workflow.
          readOnly: true
          type: boolean
        looped:
          type: boolean
        name:
          description: The name of the issue transition.
          readOnly: true
          type: string
        to:
          allOf:
          - "$ref": "#/components/schemas/StatusDetails"
          description: Details of the issue status after the transition.
          readOnly: true
      type: object
    StatusDetails:
      additionalProperties: true
      description: A status.
      properties:
        description:
          description: The description of the status.
          readOnly: true
          type: string
        iconUrl:
          description: The URL of the icon used to represent the status.
          readOnly: true
          type: string
        id:
          description: The ID of the status.
          readOnly: true
          type: string
        name:
          description: The name of the status.
          readOnly: true
          type: string
        scope:
          allOf:
          - "$ref": "#/components/schemas/Scope"
          description: The scope of the field.
          readOnly: true
        self:
          description: The URL of the status.
          readOnly: true
          type: string
        statusCategory:
          allOf:
          - "$ref": "#/components/schemas/StatusCategory"
          description: The category assigned to the status.
          readOnly: true
      type: object
    StatusCategory:
      additionalProperties: true
      description: A status category.
      properties:
        colorName:
          description: The name of the color used to represent the status category.
          readOnly: true
          type: string
        id:
          description: The ID of the status category.
          format: int64
          readOnly: true
          type: integer
        key:
          description: The key of the status category.
          readOnly: true
          type: string
        name:
          description: The name of the status category.
          readOnly: true
          type: string
        self:
          description: The URL of the status category.
          readOnly: true
          type: string
      type: object
    ProjectDetails:
      additionalProperties: false
      description: Details about a project.
      properties:
        avatarUrls:
          allOf:
          - "$ref": "#/components/schemas/AvatarUrlsBean"
          description: The URLs of the project's avatars.
          readOnly: true
        id:
          description: The ID of the project.
          type: string
        key:
          description: The key of the project.
          readOnly: true
          type: string
        name:
          description: The name of the project.
          readOnly: true
          type: string
        projectCategory:
          allOf:
          - "$ref": "#/components/schemas/UpdatedProjectCategory"
          description: The category the project belongs to.
          readOnly: true
        projectTypeKey:
          description: The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes)
            of the project.
          enum:
          - software
          - service_desk
          - business
          readOnly: true
          type: string
        self:
          description: The URL of the project details.
          readOnly: true
          type: string
        simplified:
          description: Whether or not the project is simplified.
          readOnly: true
          type: boolean
      type: object
    UpdatedProjectCategory:
      additionalProperties: false
      description: A project category.
      properties:
        description:
          description: The name of the project category.
          readOnly: true
          type: string
        id:
          description: The ID of the project category.
          readOnly: true
          type: string
        name:
          description: The description of the project category.
          readOnly: true
          type: string
        self:
          description: The URL of the project category.
          readOnly: true
          type: string
      type: object
    Scope:
      additionalProperties: true
      description: The projects the item is associated with. Indicated for items associated
        with [next-gen projects](https://confluence.atlassian.com/x/loMyO).
      properties:
        project:
          allOf:
          - "$ref": "#/components/schemas/ProjectDetails"
          description: The project the item has scope in.
          readOnly: true
        type:
          description: The type of scope.
          enum:
          - PROJECT
          - TEMPLATE
          readOnly: true
          type: string
      type: object
    EntityProperty:
      additionalProperties: false
      description: An entity property, for more information see [Entity properties](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).
      properties:
        key:
          description: The key of the property. Required on create and update.
          type: string
        value:
          description: The value of the property. Required on create and update.
      type: object
    FieldUpdateOperation:
      additionalProperties: false
      description: Details of an operation to perform on a field.
      properties:
        add:
          description: The value to add to the field.
          example: triaged
        copy:
          description: The field value to copy from another issue.
          example:
            issuelinks:
              sourceIssues:
              - key: FP-5
        edit:
          description: The value to edit in the field.
          example:
            originalEstimate: 1w 1d
            remainingEstimate: 4d
        remove:
          description: The value to removed from the field.
          example: blocker
        set:
          description: The value to set in the field.
          example: A new summary
      type: object
    IssueUpdateDetails:
      additionalProperties: true
      description: Details of an issue update request.
      properties:
        fields:
          additionalProperties: {}
          description: List of issue screen fields to update, specifying the sub-field
            to update and its value for each field. This field provides a straightforward
            option when setting a sub-field. When multiple sub-fields or other operations
            are required, use `update`. Fields included in here cannot be included
            in `update`.
          type: object
        historyMetadata:
          allOf:
          - "$ref": "#/components/schemas/HistoryMetadata"
          description: Additional issue history details.
        properties:
          description: Details of issue properties to be add or update.
          items:
            "$ref": "#/components/schemas/EntityProperty"
          type: array
        transition:
          allOf:
          - "$ref": "#/components/schemas/IssueTransition"
          description: Details of a transition. Required when performing a transition,
            optional when creating or editing an issue.
        update:
          additionalProperties:
            items:
              "$ref": "#/components/schemas/FieldUpdateOperation"
            type: array
          description: A Map containing the field field name and a list of operations
            to perform on the issue screen field. Note that fields included in here
            cannot be included in `fields`.
          type: object
      type: object
    IssueBean:
      additionalProperties: false
      description: Details about an issue.
      properties:
        changelog:
          allOf:
          - "$ref": "#/components/schemas/PageOfChangelogs"
          description: Details of changelogs associated with the issue.
          readOnly: true
        editmeta:
          allOf:
          - "$ref": "#/components/schemas/IssueUpdateMetadata"
          description: The metadata for the fields on the issue that can be amended.
          readOnly: true
        expand:
          description: Expand options that include additional issue details in the
            response.
          readOnly: true
          type: string
          xml:
            attribute: true
        fields:
          additionalProperties: {}
          type: object
        fieldsToInclude:
          "$ref": "#/components/schemas/IncludedFields"
        id:
          description: The ID of the issue.
          readOnly: true
          type: string
        key:
          description: The key of the issue.
          readOnly: true
          type: string
        names:
          additionalProperties:
            readOnly: true
            type: string
          description: The ID and name of each field present on the issue.
          readOnly: true
          type: object
        operations:
          allOf:
          - "$ref": "#/components/schemas/Operations"
          description: The operations that can be performed on the issue.
          readOnly: true
        properties:
          additionalProperties:
            readOnly: true
          description: Details of the issue properties identified in the request.
          readOnly: true
          type: object
        renderedFields:
          additionalProperties:
            readOnly: true
          description: The rendered value of each field present on the issue.
          readOnly: true
          type: object
        schema:
          additionalProperties:
            "$ref": "#/components/schemas/JsonTypeBean"
          description: The schema describing each field present on the issue.
          readOnly: true
          type: object
        self:
          description: The URL of the issue details.
          format: uri
          readOnly: true
          type: string
        transitions:
          description: The transitions that can be performed on the issue.
          items:
            "$ref": "#/components/schemas/IssueTransition"
          readOnly: true
          type: array
        versionedRepresentations:
          additionalProperties:
            additionalProperties:
              readOnly: true
            readOnly: true
            type: object
          description: The versions of each field on the issue.
          readOnly: true
          type: object
      type: object
      xml:
        name: issue
  securitySchemes:
    basicAuth:
      description: You can access this resource via basic auth.
      scheme: basic
      type: http
