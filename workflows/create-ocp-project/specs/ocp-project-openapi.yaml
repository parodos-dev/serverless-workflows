openapi: 3.0.1
info:
  title: Kubernetes
  version: v1.28.9+8ca71f7
servers:
- url: /
security:
- BearerToken: []
paths:
  /apis/project.openshift.io/v1/projectrequests:
    post:
      tags:
      - projectOpenshiftIo_v1
      description: create a Project
      operationId: createProjectRequestOpenshiftIoV1Project
      parameters:
      - name: pretty
        in: query
        description: "If 'true', then the output is pretty printed."
        schema:
          type: string
      - name: dryRun
        in: query
        description: "When present, indicates that modifications should not be persisted.\
          \ An invalid or unrecognized dryRun directive will result in an error response\
          \ and no further processing of the request. Valid values are: - All: all\
          \ dry run stages will be processed"
        schema:
          type: string
      - name: fieldManager
        in: query
        description: "fieldManager is a name associated with the actor or entity that\
          \ is making these changes. The value must be less than or 128 characters\
          \ long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
        schema:
          type: string
      - name: fieldValidation
        in: query
        description: "fieldValidation instructs the server on how to handle objects\
          \ in the request (POST/PUT/PATCH) containing unknown or duplicate fields.\
          \ Valid values are: - Ignore: This will ignore any unknown fields that are\
          \ silently dropped from the object, and will ignore all but the last duplicate\
          \ field that the decoder encounters. This is the default behavior prior\
          \ to v1.23. - Warn: This will send a warning via the standard warning response\
          \ header for each unknown field that is dropped from the object, and for\
          \ each duplicate field that is encountered. The request will still succeed\
          \ if there are no other errors, and will only persist the last of any duplicate\
          \ fields. This is the default in v1.23+ - Strict: This will fail the request\
          \ with a BadRequest error if any unknown fields would be dropped from the\
          \ object, or if any duplicate fields are present. The error returned from\
          \ the server will contain all unknown and duplicate fields encountered."
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/com.github.openshift.api.project.v1.ProjectRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/com.github.openshift.api.project.v1.ProjectRequest'
            application/yaml:
              schema:
                $ref: '#/components/schemas/com.github.openshift.api.project.v1.ProjectRequest'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/com.github.openshift.api.project.v1.ProjectRequest'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/com.github.openshift.api.project.v1.ProjectRequest'
            application/yaml:
              schema:
                $ref: '#/components/schemas/com.github.openshift.api.project.v1.ProjectRequest'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/com.github.openshift.api.project.v1.ProjectRequest'
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/com.github.openshift.api.project.v1.ProjectRequest'
            application/yaml:
              schema:
                $ref: '#/components/schemas/com.github.openshift.api.project.v1.ProjectRequest'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/com.github.openshift.api.project.v1.ProjectRequest'
        "401":
          description: Unauthorized
          content: {}
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: project.openshift.io
        kind: Project
        version: v1
      x-codegen-request-body-name: body
      security:
          - BearerToken: []
  /apis/project.openshift.io/v1/projects/{name}:
    get:
      tags:
      - projectOpenshiftIo_v1
      description: read the specified Project
      operationId: readProjectOpenshiftIoV1Project
      parameters:
      - name: name
        in: path
        description: name of the Project
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: "If 'true', then the output is pretty printed."
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/com.github.openshift.api.project.v1.Project'
            application/yaml:
              schema:
                $ref: '#/components/schemas/com.github.openshift.api.project.v1.Project'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/com.github.openshift.api.project.v1.Project'
        "401":
          description: Unauthorized
          content: {}
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: project.openshift.io
        kind: Project
        version: v1
      security:
          - BearerToken: []
components:
  schemas:
    io.k8s.api.core.v1.NamespaceCondition:
      required:
      - status
      - type
      type: object
      properties:
        lastTransitionTime:
          $ref: '#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        message:
          type: string
        reason:
          type: string
        status:
          type: string
          description: "Status of the condition, one of True, False, Unknown."
        type:
          type: string
          description: Type of namespace controller condition.
      description: NamespaceCondition contains details about state of namespace.
    io.k8s.apimachinery.pkg.apis.meta.v1.Status:
      type: object
      properties:
        apiVersion:
          type: string
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
        code:
          type: integer
          description: "Suggested HTTP return code for this status, 0 if not set."
          format: int32
        details:
          $ref: '#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails'
        kind:
          type: string
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        message:
          type: string
          description: A human-readable description of the status of this operation.
        metadata:
          $ref: '#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
        reason:
          type: string
          description: A machine-readable description of why this operation is in
            the "Failure" status. If this value is empty there is no information available.
            A Reason clarifies an HTTP status code but does not override it.
        status:
          type: string
          description: "Status of the operation. One of: \"Success\" or \"Failure\"\
            . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
      description: Status is a return value for calls that don't return other objects.
      x-kubernetes-group-version-kind:
      - group: ""
        kind: Status
        version: v1
      - group: resource.k8s.io
        kind: Status
        version: v1alpha2
    io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause:
      type: object
      properties:
        field:
          type: string
          description: |-
            The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.

            Examples:
              "name" - the field "name" on the current resource
              "items[0].name" - the field "name" on the first array entry in "items"
        message:
          type: string
          description: A human-readable description of the cause of the error.  This
            field may be presented as-is to a reader.
        reason:
          type: string
          description: A machine-readable description of the cause of the error. If
            this value is empty there is no information available.
      description: "StatusCause provides more information about an api.Status failure,\
        \ including cases when multiple errors are encountered."
    io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails:
      type: object
      properties:
        causes:
          type: array
          description: The Causes array includes more details associated with the
            StatusReason failure. Not all StatusReasons may provide detailed causes.
          items:
            $ref: '#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause'
        group:
          type: string
          description: The group attribute of the resource associated with the status
            StatusReason.
        kind:
          type: string
          description: "The kind attribute of the resource associated with the status\
            \ StatusReason. On some operations may differ from the requested resource\
            \ Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        name:
          type: string
          description: The name attribute of the resource associated with the status
            StatusReason (when there is a single name which can be described).
        retryAfterSeconds:
          type: integer
          description: "If specified, the time in seconds before the operation should\
            \ be retried. Some errors may indicate the client must take an alternate\
            \ action - for those errors this field may indicate how long to wait before\
            \ taking the alternate action."
          format: int32
        uid:
          type: string
          description: "UID of the resource. (when there is a single resource which\
            \ can be described). More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids"
      description: "StatusDetails is a set of additional properties that MAY be set\
        \ by the server to provide additional information about a response. The Reason\
        \ field of a Status object defines what attributes will be set. Clients must\
        \ ignore fields that do not match the defined type of each attribute, and\
        \ should assume that any attribute may be empty, invalid, or under defined."
    io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta:
      type: object
      properties:
        continue:
          type: string
          description: "continue may be set if the user set a limit on the number\
            \ of items returned, and indicates that the server has more data available.\
            \ The value is opaque and may be used to issue another request to the\
            \ endpoint that served this list to retrieve the next set of available\
            \ objects. Continuing a consistent list may not be possible if the server\
            \ configuration has changed or more than a few minutes have passed. The\
            \ resourceVersion field returned when using this continue value will be\
            \ identical to the value in the first response, unless you have received\
            \ this token from an error message."
        remainingItemCount:
          type: integer
          description: "remainingItemCount is the number of subsequent items in the\
            \ list which are not included in this list response. If the list request\
            \ contained label or field selectors, then the number of remaining items\
            \ is unknown and the field will be left unset and omitted during serialization.\
            \ If the list is complete (either because it is not chunking or because\
            \ this is the last chunk), then there are no more remaining items and\
            \ this field will be left unset and omitted during serialization. Servers\
            \ older than v1.15 do not set this field. The intended use of the remainingItemCount\
            \ is *estimating* the size of a collection. Clients should not rely on\
            \ the remainingItemCount to be set or to be exact."
          format: int64
        resourceVersion:
          type: string
          description: "String that identifies the server's internal version of this\
            \ object that can be used by clients to determine when objects have changed.\
            \ Value must be treated as opaque by clients and passed unmodified back\
            \ to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
        selfLink:
          type: string
          description: "Deprecated: selfLink is a legacy read-only field that is no\
            \ longer populated by the system."
      description: "ListMeta describes metadata that synthetic resources must have,\
        \ including lists and various status objects. A resource may have only one\
        \ of {ObjectMeta, ListMeta}."
    com.github.openshift.api.project.v1.ProjectRequest:
      type: object
      properties:
        apiVersion:
          type: string
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
        description:
          type: string
          description: Description is the description to apply to a project
        displayName:
          type: string
          description: DisplayName is the display name to apply to a project
        kind:
          type: string
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        metadata:
          $ref: '#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      description: |-
        ProjectRequest is the set of options necessary to fully qualify a project request

        Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).
      x-kubernetes-group-version-kind:
      - group: ""
        kind: ProjectRequest
        version: v1
      - group: project.openshift.io
        kind: ProjectRequest
        version: v1
    com.github.openshift.api.project.v1.Project:
      type: object
      properties:
        apiVersion:
          type: string
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
        kind:
          type: string
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        metadata:
          $ref: '#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/com.github.openshift.api.project.v1.ProjectSpec'
        status:
          $ref: '#/components/schemas/com.github.openshift.api.project.v1.ProjectStatus'
      description: |-
        Projects are the unit of isolation and collaboration in OpenShift. A project has one or more members, a quota on the resources that the project may consume, and the security controls on the resources in the project. Within a project, members may have different roles - project administrators can set membership, editors can create and manage the resources, and viewers can see but not access running containers. In a normal cluster project administrators are not able to alter their quotas - that is restricted to cluster administrators.

        Listing or watching projects will return only projects the user has the reader role on.

        An OpenShift project is an alternative representation of a Kubernetes namespace. Projects are exposed as editable to end users while namespaces are not. Direct creation of a project is typically restricted to administrators, while end users should use the requestproject resource.

        Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).
      x-kubernetes-group-version-kind:
      - group: ""
        kind: Project
        version: v1
      - group: project.openshift.io
        kind: Project
        version: v1
    com.github.openshift.api.project.v1.ProjectSpec:
      type: object
      properties:
        finalizers:
          type: array
          description: Finalizers is an opaque list of values that must be empty to
            permanently remove object from storage
          items:
            type: string
      description: ProjectSpec describes the attributes on a Project
    com.github.openshift.api.project.v1.ProjectStatus:
      type: object
      properties:
        conditions:
          type: array
          description: Represents the latest available observations of the project
            current state.
          items:
            $ref: '#/components/schemas/io.k8s.api.core.v1.NamespaceCondition'
          x-kubernetes-patch-strategy: merge
          x-kubernetes-patch-merge-key: type
        phase:
          type: string
          description: |-
            Phase is the current lifecycle phase of the project

            Possible enum values:
             - `"Active"` means the namespace is available for use in the system
             - `"Terminating"` means the namespace is undergoing graceful termination
          enum:
          - Active
          - Terminating
      description: ProjectStatus is information about the current status of a Project
    io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta:
      type: object
      properties:
        annotations:
          type: object
          additionalProperties:
            type: string
          description: "Annotations is an unstructured key value map stored with a\
            \ resource that may be set by external tools to store and retrieve arbitrary\
            \ metadata. They are not queryable and should be preserved when modifying\
            \ objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations"
        creationTimestamp:
          $ref: '#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        deletionGracePeriodSeconds:
          type: integer
          description: Number of seconds allowed for this object to gracefully terminate
            before it will be removed from the system. Only set when deletionTimestamp
            is also set. May only be shortened. Read-only.
          format: int64
        deletionTimestamp:
          $ref: '#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        finalizers:
          type: array
          description: "Must be empty before the object is deleted from the registry.\
            \ Each entry is an identifier for the responsible component that will\
            \ remove the entry from the list. If the deletionTimestamp of the object\
            \ is non-nil, entries in this list can only be removed. Finalizers may\
            \ be processed and removed in any order.  Order is NOT enforced because\
            \ it introduces significant risk of stuck finalizers. finalizers is a\
            \ shared field, any actor with permission can reorder it. If the finalizer\
            \ list is processed in order, then this can lead to a situation in which\
            \ the component responsible for the first finalizer in the list is waiting\
            \ for a signal (field value, external system, or other) produced by a\
            \ component responsible for a finalizer later in the list, resulting in\
            \ a deadlock. Without enforced ordering finalizers are free to order amongst\
            \ themselves and are not vulnerable to ordering changes in the list."
          items:
            type: string
          x-kubernetes-patch-strategy: merge
        generateName:
          type: string
          description: |-
            GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

            If this field is specified and the generated name exists, the server will return a 409.

            Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
        generation:
          type: integer
          description: A sequence number representing a specific generation of the
            desired state. Populated by the system. Read-only.
          format: int64
        labels:
          type: object
          additionalProperties:
            type: string
          description: "Map of string keys and values that can be used to organize\
            \ and categorize (scope and select) objects. May match selectors of replication\
            \ controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels"
        managedFields:
          type: array
          description: "ManagedFields maps workflow-id and version to the set of fields\
            \ that are managed by that workflow. This is mostly for internal housekeeping,\
            \ and users typically shouldn't need to set or understand this field.\
            \ A workflow can be the user's name, a controller's name, or the name\
            \ of a specific apply path like \"ci-cd\". The set of fields is always\
            \ in the version that the workflow used when modifying the object."
          items:
            $ref: '#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry'
        name:
          type: string
          description: "Name must be unique within a namespace. Is required when creating\
            \ resources, although some resources may allow a client to request the\
            \ generation of an appropriate name automatically. Name is primarily intended\
            \ for creation idempotence and configuration definition. Cannot be updated.\
            \ More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names"
        namespace:
          type: string
          description: |-
            Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

            Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
        ownerReferences:
          type: array
          description: "List of objects depended by this object. If ALL objects in\
            \ the list have been deleted, this object will be garbage collected. If\
            \ this object is managed by a controller, then an entry in this list will\
            \ point to this controller, with the controller field set to true. There\
            \ cannot be more than one managing controller."
          items:
            $ref: '#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference'
          x-kubernetes-patch-strategy: merge
          x-kubernetes-patch-merge-key: uid
        resourceVersion:
          type: string
          description: |-
            An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

            Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
        selfLink:
          type: string
          description: "Deprecated: selfLink is a legacy read-only field that is no\
            \ longer populated by the system."
        uid:
          type: string
          description: |-
            UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

            Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
      description: "ObjectMeta is metadata that all persisted resources must have,\
        \ which includes all objects users must create."
    io.k8s.apimachinery.pkg.apis.meta.v1.Time:
      type: string
      description: Time is a wrapper around time.Time which supports correct marshaling
        to YAML and JSON.  Wrappers are provided for many of the factory methods that
        the time package offers.
      format: date-time
    io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry:
      type: object
      properties:
        apiVersion:
          type: string
          description: APIVersion defines the version of this resource that this field
            set applies to. The format is "group/version" just like the top-level
            APIVersion field. It is necessary to track the version of a field set
            because it cannot be automatically converted.
        fieldsType:
          type: string
          description: "FieldsType is the discriminator for the different fields format\
            \ and version. There is currently only one possible value: \"FieldsV1\""
        fieldsV1:
          $ref: '#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1'
        manager:
          type: string
          description: Manager is an identifier of the workflow managing these fields.
        operation:
          type: string
          description: Operation is the type of operation which lead to this ManagedFieldsEntry
            being created. The only valid values for this field are 'Apply' and 'Update'.
        subresource:
          type: string
          description: "Subresource is the name of the subresource used to update\
            \ that object, or empty string if the object was updated through the main\
            \ resource. The value of this field is used to distinguish between managers,\
            \ even if they share the same name. For example, a status update will\
            \ be distinct from a regular update using the same manager name. Note\
            \ that the APIVersion field is not related to the Subresource field and\
            \ it always corresponds to the version of the main resource."
        time:
          $ref: '#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
      description: "ManagedFieldsEntry is a workflow-id, a FieldSet and the group\
        \ version of the resource that the fieldset applies to."
    io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference:
      required:
      - apiVersion
      - kind
      - name
      - uid
      type: object
      properties:
        apiVersion:
          type: string
          description: API version of the referent.
        blockOwnerDeletion:
          type: boolean
          description: "If true, AND if the owner has the \"foregroundDeletion\" finalizer,\
            \ then the owner cannot be deleted from the key-value store until this\
            \ reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\
            \ for how the garbage collector interacts with this field and enforces\
            \ the foreground deletion. Defaults to false. To set this field, a user\
            \ needs \"delete\" permission of the owner, otherwise 422 (Unprocessable\
            \ Entity) will be returned."
        controller:
          type: boolean
          description: "If true, this reference points to the managing controller."
        kind:
          type: string
          description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        name:
          type: string
          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names"
        uid:
          type: string
          description: "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids"
      description: "OwnerReference contains enough information to let you identify\
        \ an owning object. An owning object must be in the same namespace as the\
        \ dependent, or be cluster-scoped, so there is no namespace field."
      x-kubernetes-map-type: atomic
    io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1:
      type: object
      description: |-
        FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.

        Each key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.

        The exact format is defined in sigs.k8s.io/structured-merge-diff
  parameters:
    allowWatchBookmarks-HC2hJt-J:
      name: allowWatchBookmarks
      in: query
      description: "allowWatchBookmarks requests watch events with type \"BOOKMARK\"\
        . Servers that do not implement bookmarks may ignore this flag and bookmarks\
        \ are sent at the server's discretion. Clients should not assume bookmarks\
        \ are returned at any specific interval, nor may they assume the server will\
        \ send any BOOKMARK event during a session. If this is not a watch, this field\
        \ is ignored."
      schema:
        type: boolean
    asFile-OcRrrLDo:
      name: asFile
      in: query
      description: asFile determines if the binary should be created as a file within
        the source rather than extracted as an archive
      schema:
        type: string
    command-Py3eQybp:
      name: command
      in: query
      description: Command is the remote command to execute. argv array. Not executed
        within a shell.
      schema:
        type: string
    container-1GeXxFDC:
      name: container
      in: query
      description: The container for which to stream logs. Defaults to only container
        if there is one container in the pod.
      schema:
        type: string
    container-Rl7l_oz7:
      name: container
      in: query
      description: cointainer for which to stream logs. Defaults to only container
        if there is one container in the pod.
      schema:
        type: string
    container-_Q-EJ3nR:
      name: container
      in: query
      description: The container in which to execute the command. Defaults to only
        container if there is only one container in the pod.
      schema:
        type: string
    container-i5dOmRiM:
      name: container
      in: query
      description: Container in which to execute the command. Defaults to only container
        if there is only one container in the pod.
      schema:
        type: string
    continue-QfD61s0i:
      name: continue
      in: query
      description: |-
        The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

        This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
      schema:
        type: string
    fieldManager-7c6nTn1T:
      name: fieldManager
      in: query
      description: "fieldManager is a name associated with the actor or entity that\
        \ is making these changes. The value must be less than or 128 characters long,\
        \ and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.\
        \ This field is required for apply requests (application/apply-patch) but\
        \ optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
      schema:
        type: string
    fieldManager-Qy4HdaTW:
      name: fieldManager
      in: query
      description: "fieldManager is a name associated with the actor or entity that\
        \ is making these changes. The value must be less than or 128 characters long,\
        \ and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
      schema:
        type: string
    fieldSelector-xIcQKXFG:
      name: fieldSelector
      in: query
      description: A selector to restrict the list of returned objects by their fields.
        Defaults to everything.
      schema:
        type: string
    follow-9OIXh_2R:
      name: follow
      in: query
      description: Follow the log stream of the pod. Defaults to false.
      schema:
        type: boolean
    follow-ryc9nKX-:
      name: follow
      in: query
      description: follow if true indicates that the build log should be streamed
        until the build terminates.
      schema:
        type: boolean
    follow-uBbRJU1P:
      name: follow
      in: query
      description: Follow if true indicates that the build log should be streamed
        until the build terminates.
      schema:
        type: boolean
    force-tOGGb0Yi:
      name: force
      in: query
      description: Force is going to "force" Apply requests. It means user will re-acquire
        conflicting fields owned by other people. Force flag must be unset for non-apply
        patch requests.
      schema:
        type: boolean
    gracePeriodSeconds--K5HaBOS:
      name: gracePeriodSeconds
      in: query
      description: "The duration in seconds before the object should be deleted. Value\
        \ must be non-negative integer. The value zero indicates delete immediately.\
        \ If this value is nil, the default grace period for the specified type will\
        \ be used. Defaults to a per object value if not specified. zero means delete\
        \ immediately."
      schema:
        type: integer
    insecureSkipTLSVerifyBackend-gM00jVbe:
      name: insecureSkipTLSVerifyBackend
      in: query
      description: "insecureSkipTLSVerifyBackend indicates that the apiserver should\
        \ not confirm the validity of the serving certificate of the backend it is\
        \ connecting to.  This will make the HTTPS connection between the apiserver\
        \ and the backend insecure. This means the apiserver cannot verify the log\
        \ data it is receiving came from the real kubelet.  If the kubelet is configured\
        \ to verify the apiserver's TLS credentials, it does not mean the connection\
        \ to the real kubelet is vulnerable to a man in the middle attack (e.g. an\
        \ attacker could not intercept the actual log data coming from the real kubelet)."
      schema:
        type: boolean
    labelSelector-5Zw57w4C:
      name: labelSelector
      in: query
      description: A selector to restrict the list of returned objects by their labels.
        Defaults to everything.
      schema:
        type: string
    limit-1NfNmdNH:
      name: limit
      in: query
      description: |-
        limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

        The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
      schema:
        type: integer
    limitBytes-_hnOr0V4:
      name: limitBytes
      in: query
      description: "limitBytes, If set, is the number of bytes to read from the server\
        \ before terminating the log output. This may not display a complete final\
        \ line of logging, and may return slightly more or slightly less than the\
        \ specified limit."
      schema:
        type: integer
    limitBytes-zwd1RXuc:
      name: limitBytes
      in: query
      description: "If set, the number of bytes to read from the server before terminating\
        \ the log output. This may not display a complete final line of logging, and\
        \ may return slightly more or slightly less than the specified limit."
      schema:
        type: integer
    namespace-vgWSWtn3:
      name: namespace
      in: path
      description: "object name and auth scope, such as for teams and projects"
      required: true
      schema:
        type: string
    nowait-4e5T_PV3:
      name: nowait
      in: query
      description: noWait if true causes the call to return immediately even if the
        build is not available yet. Otherwise the server will wait until the build
        has started.
      schema:
        type: boolean
    nowait-fRDq2lTB:
      name: nowait
      in: query
      description: NoWait if true causes the call to return immediately even if the
        deployment is not available yet. Otherwise the server will wait until the
        deployment has started.
      schema:
        type: boolean
    orphanDependents-uRB25kX5:
      name: orphanDependents
      in: query
      description: "Deprecated: please use the PropagationPolicy, this field will\
        \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
        \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
        \ list. Either this field or PropagationPolicy may be set, but not both."
      schema:
        type: boolean
    path-QCf0eosM:
      name: path
      in: query
      description: "Path is the part of URLs that include service endpoints, suffixes,\
        \ and parameters to use for the current proxy request to service. For example,\
        \ the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy.\
        \ Path is _search?q=user:kimchy."
      schema:
        type: string
    path-oPbzgLUj:
      name: path
      in: query
      description: Path is the URL path to use for the current proxy request to pod.
      schema:
        type: string
    path-rFDtV0x9:
      name: path
      in: query
      description: Path is the URL path to use for the current proxy request to node.
      schema:
        type: string
    path-z6Ciiujn:
      name: path
      in: path
      description: path to the resource
      required: true
      schema:
        type: string
    ports-91KROJmm:
      name: ports
      in: query
      description: List of ports to forward Required when using WebSockets
      schema:
        type: integer
    pretty-nN7o5FEq:
      name: pretty
      in: query
      description: "If 'true', then the output is pretty printed."
      schema:
        type: string
    previous-1jxDPu3y:
      name: previous
      in: query
      description: Return previous terminated container logs. Defaults to false.
      schema:
        type: boolean
    previous-VzhNnb31:
      name: previous
      in: query
      description: Return previous deployment logs. Defaults to false.
      schema:
        type: boolean
    previous-pXJ3IzH4:
      name: previous
      in: query
      description: previous returns previous build logs. Defaults to false.
      schema:
        type: boolean
    propagationPolicy-6jk3prlO:
      name: propagationPolicy
      in: query
      description: "Whether and how garbage collection will be performed. Either this\
        \ field or OrphanDependents may be set, but not both. The default policy is\
        \ decided by the existing finalizer set in the metadata.finalizers and the\
        \ resource-specific default policy. Acceptable values are: 'Orphan' - orphan\
        \ the dependents; 'Background' - allow the garbage collector to delete the\
        \ dependents in the background; 'Foreground' - a cascading policy that deletes\
        \ all dependents in the foreground."
      schema:
        type: string
    resourceVersion-5WAnf1kx:
      name: resourceVersion
      in: query
      description: |-
        resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.

        Defaults to unset
      schema:
        type: string
    resourceVersionMatch-t8XhRHeC:
      name: resourceVersionMatch
      in: query
      description: |-
        resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.

        Defaults to unset
      schema:
        type: string
    revision.authorEmail-AGO6Wd6i:
      name: revision.authorEmail
      in: query
      description: revision.authorEmail of the source control user
      schema:
        type: string
    revision.authorName-2Gfs6bIw:
      name: revision.authorName
      in: query
      description: revision.authorName of the source control user
      schema:
        type: string
    revision.commit-fuCVC6aw:
      name: revision.commit
      in: query
      description: revision.commit is the value identifying a specific commit
      schema:
        type: string
    revision.committerEmail-5mz1H_nc:
      name: revision.committerEmail
      in: query
      description: revision.committerEmail of the source control user
      schema:
        type: string
    revision.committerName-Pr6tr88U:
      name: revision.committerName
      in: query
      description: revision.committerName of the source control user
      schema:
        type: string
    revision.message-cz6CLAnc:
      name: revision.message
      in: query
      description: revision.message is the description of a specific commit
      schema:
        type: string
    sendInitialEvents-rLXlEK_k:
      name: sendInitialEvents
      in: query
      description: |-
        `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.

        When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
          is interpreted as "data at least as new as the provided `resourceVersion`"
          and the bookmark event is send when the state is synced
          to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
          If `resourceVersion` is unset, this is interpreted as "consistent read" and the
          bookmark event is send when the state is synced at least to the moment
          when request started being processed.
        - `resourceVersionMatch` set to any other value or unset
          Invalid error is returned.

        Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
      schema:
        type: boolean
    sinceSeconds-Sf7lFlCh:
      name: sinceSeconds
      in: query
      description: "sinceSeconds is a relative time in seconds before the current\
        \ time from which to show logs. If this value precedes the time a pod was\
        \ started, only logs since the pod start will be returned. If this value is\
        \ in the future, no logs will be returned. Only one of sinceSeconds or sinceTime\
        \ may be specified."
      schema:
        type: integer
    sinceSeconds-vE2NLdnP:
      name: sinceSeconds
      in: query
      description: "A relative time in seconds before the current time from which\
        \ to show logs. If this value precedes the time a pod was started, only logs\
        \ since the pod start will be returned. If this value is in the future, no\
        \ logs will be returned. Only one of sinceSeconds or sinceTime may be specified."
      schema:
        type: integer
    stderr-26jJhFUR:
      name: stderr
      in: query
      description: Stderr if true indicates that stderr is to be redirected for the
        attach call. Defaults to true.
      schema:
        type: boolean
    stderr-W_1TNlWc:
      name: stderr
      in: query
      description: Redirect the standard error stream of the pod for this call.
      schema:
        type: boolean
    stdin-PSzNhyUC:
      name: stdin
      in: query
      description: Redirect the standard input stream of the pod for this call. Defaults
        to false.
      schema:
        type: boolean
    stdin-sEFnN3IS:
      name: stdin
      in: query
      description: "Stdin if true, redirects the standard input stream of the pod\
        \ for this call. Defaults to false."
      schema:
        type: boolean
    stdout--EZLRwV1:
      name: stdout
      in: query
      description: Redirect the standard output stream of the pod for this call.
      schema:
        type: boolean
    stdout-005YMKE6:
      name: stdout
      in: query
      description: Stdout if true indicates that stdout is to be redirected for the
        attach call. Defaults to true.
      schema:
        type: boolean
    tailLines-2fRTNzbP:
      name: tailLines
      in: query
      description: "If set, the number of lines from the end of the logs to show.\
        \ If not specified, logs are shown from the creation of the container or sinceSeconds\
        \ or sinceTime"
      schema:
        type: integer
    tailLines-c-mA2NFh:
      name: tailLines
      in: query
      description: "tailLines, If set, is the number of lines from the end of the\
        \ logs to show. If not specified, logs are shown from the creation of the\
        \ container or sinceSeconds or sinceTime"
      schema:
        type: integer
    timeoutSeconds-yvYezaOC:
      name: timeoutSeconds
      in: query
      description: "Timeout for the list/watch call. This limits the duration of the\
        \ call, regardless of any activity or inactivity."
      schema:
        type: integer
    timestamps-c17fW1w_:
      name: timestamps
      in: query
      description: "If true, add an RFC3339 or RFC3339Nano timestamp at the beginning\
        \ of every line of log output. Defaults to false."
      schema:
        type: boolean
    timestamps-rluwd6z0:
      name: timestamps
      in: query
      description: "timestamps, If true, add an RFC3339 or RFC3339Nano timestamp at\
        \ the beginning of every line of log output. Defaults to false."
      schema:
        type: boolean
    tty-g7MlET_l:
      name: tty
      in: query
      description: TTY if true indicates that a tty will be allocated for the attach
        call. This is passed through the container runtime so the tty is allocated
        on the worker node by the container runtime. Defaults to false.
      schema:
        type: boolean
    tty-s0flW37O:
      name: tty
      in: query
      description: TTY if true indicates that a tty will be allocated for the exec
        call. Defaults to false.
      schema:
        type: boolean
    version-Co11t97x:
      name: version
      in: query
      description: Version of the deployment for which to view logs.
      schema:
        type: integer
    version-enodSG5q:
      name: version
      in: query
      description: version of the build for which to view logs.
      schema:
        type: integer
    watch-XNNPZGbK:
      name: watch
      in: query
      description: "Watch for changes to the described resources and return them as\
        \ a stream of add, update, and remove notifications. Specify resourceVersion."
      schema:
        type: boolean
  securitySchemes:
    BearerToken:
      type: http
      scheme: bearer
      description: Bearer Token authentication
x-original-swagger-version: "2.0"
